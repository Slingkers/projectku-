{"version":3,"sources":["utils/AESchiper.js","utils/getEnvVariable.js","assets/img/theme/Hokky1.png","assets/img/brand/Hokky1.png","assets/img/theme/das.png","assets/img/theme/edc.png","assets/img/theme/campur.png","assets/img/brand/argon-react.png","libs/context.js","components/Navbars/AdminNavbar.js","components/Footers/AdminFooter.js","components/Sidebar/Sidebar.js","views/pages/login/Index.js","components/Headers/SimpleHeader.js","views/pages/user/privileges/Index.js","views/pages/user/Index.js","views/pages/user/privileges/Edit.js","views/pages/address/Index.js","views/pages/account/Index.js","views/pages/asset/Index.js","views/pages/asset/type/Index.js","views/pages/absen/Index.js","views/pages/departemen/Index.js","views/pages/satuan/Index.js","views/pages/Customer/Index.js","views/pages/coa/Index.js","views/pages/item/itemCategory/Index.js","views/pages/item/itemSubCategory/Index.js","views/pages/item/itemFunction/Index.js","views/pages/item/itemSubFunction/Index.js","views/pages/item/itemMerek/Index.js","views/pages/item/itemSubMerek/Index.js","views/pages/item/itemGrade/Index.js","views/pages/item/itemMain/Index.js","views/pages/item/itemMain/Create.js","views/pages/item/itemMain/detail/Index.js","views/pages/Warehouse/WarehousePusat/Index.js","views/pages/Warehouse/WarehouseToko/Index.js","views/pages/Warehouse/WarehouseGudang/Index.js","views/pages/Warehouse/WarehousePusat/Create.js","views/pages/Warehouse/WarehouseToko/Create.js","views/pages/Warehouse/WarehouseGudang/Create.js","views/pages/karyawan/Index.js","views/pages/komisi/Index.js","views/pages/salary/Index.js","views/pages/person/Index.js","views/pages/pajak/Index.js","views/pages/Rak/Index.js","views/pages/Rak/Create.js","views/pages/info/Index.js","views/pages/po/PenawaranPo/Index.js","views/pages/po/ValidatorPo/Index.js","views/pages/po/AdminApprove/Index.js","views/pages/po/ValidasiPo/Index.js","views/pages/so/ReceivingSo/Index.js","views/pages/po/ReceivingPo/ReceivingPo/Index.js","views/pages/po/ReceivingPo/ValidasiReceivingPo/Index.js","views/pages/po/History.js","views/pages/poReturn/Validasi/Index.js","views/pages/poReturn/AdminApprove/Index.js","views/pages/poReturn/Validator/Index.js","views/pages/so/PenawaranSo/Index.js","views/pages/so/ValidasiSo/Index.js","views/pages/so/AdminApprove/Index.js","views/pages/so/ValidatorSo/Index.js","views/pages/soReturn/DetailData.js","views/pages/soReturn/Index.js","views/pages/so/soHistory/Index.js","views/pages/so/soKasir/ModalPembayaran.js","views/pages/so/soKasir/ModalAddMember.js","views/pages/so/soKasir/ModalAddItem.js","views/pages/so/soKasir/ModalAddKurir.js","views/pages/so/snippets/redux/index.js","views/pages/so/snippets/DetailData/index.js","views/pages/so/SoReturHistory/index.js","views/pages/Price/LogPrice.js","views/pages/Price/Index.js","views/pages/stockOpname/Index.js","views/pages/promo/Index.js","views/pages/itemStock/StockSemua/Index.js","views/pages/itemStock/StockPribadi/Index.js","views/pages/itemStock/StockLow/Index.js","views/pages/itemStock/StockRak/Index.js","views/pages/salesCanvasing/Index.js","views/pages/salesCanvasing/History.js","views/pages/salesCanvasing/salesTrack/Detail.js","views/pages/salesCanvasing/salesTrack/Index.js","components/PreviewTable/redux/index.js","components/PreviewTable/index.js","views/pages/transferStock/Index.js","views/pages/bkm/Index.js","views/pages/jurnal/Index.js","views/pages/inventory/snippets/redux/index.js","views/pages/inventory/snippets/Preview/index.js","views/pages/inventory/TransferHistory.js","views/pages/admin/snippets/redux/index.js","views/pages/admin/snippets/FailedAlert/index.js","views/pages/admin/snippets/PreviewImage/index.js","views/pages/admin/UploadImage.js","views/pages/admin/UploadBanner.js","views/pages/admin/ListImages.js","views/pages/admin/ListBanner.js","views/pages/admin/ListImageItem.js","views/pages/master/JangkaWaktu/Update.js","views/pages/master/snippets/redux/index.js","views/pages/master/snippets/Preview/index.js","views/pages/master/Main/index.js","views/pages/po/snippets/redux/index.js","views/pages/po/snippets/DetailData/index.js","views/pages/po/SoReturHistory/index.js","views/pages/po/PermintaanBarang/PermintaanBarang/Index.js","views/pages/po/PermintaanBarang/ValidasiPermintaanBarang/Index.js","views/pages/po/PermintaanBarang/PermintaanBarang/Create.js","views/pages/po/MemoKurirPo/MemoKurirPo/Index.js","views/pages/po/MemoKurirPo/ValidasiAdminPo/Index.js","views/pages/po/InvoicePo/InvoicePo/Index.js","views/pages/po/InvoicePo/ValidasiAdminFinance/Index.js","views/pages/po/InvoicePo/ValidasiPimpinan/Index.js","views/pages/po/InvoicePo/HistoryInvoice/Index.js","views/pages/po/BuktiKasKeluar/BuktiKasKeluar/Index.js","views/pages/po/BuktiKasKeluar/ValidasiKepalaFinance/Index.js","views/pages/po/BuktiKasKeluar/ValidasiPimpinan/Index.js","views/pages/po/BuktiKasKeluar/HistoryBkk/Index.js","routes.js","views/pages/master/JangkaWaktu/Create.js","views/pages/Warehouse/WarehouseGudang/Edit.js","views/pages/Warehouse/WarehouseToko/Edit.js","views/pages/Warehouse/WarehousePusat/Edit.js","views/pages/Warehouse/index.js","views/pages/user/Edit.js","views/pages/user/Create.js","views/pages/departemen/Edit.js","views/pages/departemen/Create.js","views/pages/karyawan/Edit.js","views/pages/karyawan/Create.js","views/pages/address/Edit.js","views/pages/address/Create.js","views/pages/Customer/Edit.js","views/pages/Customer/Create.js","views/pages/person/Edit.js","views/pages/person/Create.js","views/pages/satuan/Edit.js","views/pages/satuan/Create.js","views/pages/item/itemGrade/Create.js","views/pages/item/itemSubMerek/Create.js","views/pages/item/itemMerek/Create.js","views/pages/item/itemSubFunction/Create.js","views/pages/item/itemFunction/Create.js","views/pages/item/itemSubCategory/Create.js","views/pages/item/itemCategory/Edit.js","views/pages/item/itemCategory/Create.js","views/pages/item/itemMain/Edit.js","views/pages/item/Index.js","views/pages/Price/Edit.js","views/pages/pajak/Edit.js","views/pages/pajak/Create.js","views/pages/promo/Edit.js","views/pages/promo/Create.js","views/pages/asset/type/Edit.js","views/pages/asset/type/Create.js","views/pages/asset/Edit.js","views/pages/asset/Create.js","views/pages/account/Edit.js","views/pages/account/Create.js","views/pages/coa/Edit.js","views/pages/coa/Create.js","views/pages/stockOpname/Create.js","views/pages/itemStock/Index.js","views/pages/stockOpname/Edit.js","views/pages/stockOpname/Adjust.js","views/pages/so/ReceivingSo/Edit.js","views/pages/transferStock/Edit.js","views/pages/transferStock/Create.js","views/pages/po/PermintaanBarang/Index.js","views/pages/po/ValidatorPo/Edit.js","views/pages/po/AdminApprove/Edit.js","views/pages/po/ValidasiPo/Edit.js","views/pages/po/Edit.js","views/pages/po/Create.js","views/pages/po/Index.js","views/pages/po/MemoKurirPo/Index.js","views/pages/po/ReceivingPo/Index.js","views/pages/po/InvoicePo/Index.js","views/pages/po/BuktiKasKeluar/Index.js","views/pages/poReturn/Create.js","views/pages/poReturn/Edit.js","views/pages/poReturn/Index.js","views/pages/so/ValidatorSo/Edit.js","views/pages/so/AdminApprove/Edit.js","views/pages/so/ValidasiSo/Edit.js","views/pages/so/Edit.js","views/pages/so/Create.js","views/pages/so/Index.js","views/pages/so/soKasir/Create.js","views/pages/soReturn/Create.js","views/pages/soReturn/Edit.js","views/pages/bkm/Edit.js","views/pages/bkm/Create.js","views/pages/jurnal/Create.js","views/pages/admin/MainList.js","views/pages/admin/UpdateImage.js","views/pages/admin/UpdateBanner.js","views/pages/admin/UpdateImageItem.js","layouts/Admin.js","layouts/Customer.js","layouts/Auth.js","App.js","utils/History.js","index.js"],"names":["encryptAES256","plainText","a","getEnvVariable","generatedKey","IV","convertToBuffer","Buffer","from","split","map","Number","UsedIV","char","parseInt","cipher","crypto","createCipheriv","ciph","update","ciphf","final","process","AppContext","createContext","AdminNavbar","theme","sidenavOpen","toggleSidenav","user","localStorage","getItem","jwt_decode","setItem","wid","dnm","history","useHistory","removeItem","push","Navbar","className","classnames","Container","fluid","Collapse","navbar","isOpen","Nav","NavItem","active","onClick","NavLink","document","body","classList","add","setTimeout","remove","UncontrolledDropdown","nav","DropdownToggle","color","tag","Media","alt","src","require","default","sub","DropdownMenu","right","DropdownItem","header","to","divider","defaultProps","AdminFooter","Row","Col","lg","Date","getFullYear","packageJson","version","Sidebar","routes","logo","rtlActive","React","useState","state","setState","warehouseList","setWarehouseList","warehouseName","setWarehouseName","location","useLocation","role","useEffect","getCollapseStates","getWarehouseList","navbarBrandProps","axios","get","then","data","response","length","initalData","name","id","catch","err","console","log","initialState","prop","key","collapse","getCollapseInitialState","views","i","pathname","indexOf","path","closeSidenav","window","innerWidth","innerLink","Link","outterLink","href","target","scrollBarInner","NavbarBrand","imgAlt","imgSrc","Input","value","type","bsSize","onChange","event","selectedWarehouse","options","selectedIndex","warehouseId","getAttribute","item","createLinks","redirect","hidden","roles","includes","st","e","preventDefault","icon","miniName","routeName","layout","activeClassName","NavLinkRRD","undefined","onMouseEnter","contains","onMouseLeave","navigator","platform","Login","email","setEmail","emailError","setEmailError","wrongEmail","setWrongEmail","password","setPassword","passwordError","setPasswordError","wrongPassword","setWrongPassword","modal","setModal","passwordShown","setPasswordShown","alert","setAlert","timestamp","now","resetEmail","setResetEmail","resetEmailError","setResetEmailError","isLoading","setLoading","rememberMe","setRememberMe","isEmail","isPassword","cekRememberMe","togglePasswordVisiblity","toggle","hideAlert","setMsgAlert","str","error","showConfirm","confirmBtnText","title","onCancel","onConfirm","getMyProfil","token","fetch","method","headers","Authorization","JSON","stringify","json","phoneNumber","username","authorities","authority","emailwithLenght","passwordLenght","passwordWithLanght","emailwithLanght","usernameOrEmail","post","showErrors","errors","showErrorsEmail","message","getRememberMe","ForgotPassword","success","md","Card","style","width","CardBody","onSubmit","validateForm","InputGroupAddon","addonType","InputGroupText","placeholder","invalid","FormFeedback","checked","htmlFor","textAlign","Modal","ModalBody","marginBottom","classname","Button","validateFormResetPassword","disabled","TimelineHeader","parentName","xs","Breadcrumb","listClassName","BreadcrumbItem","Privileges","rowIndex","setRowIndex","allPricelegesReturn","setAllPricelegesReturn","page","setPage","perPage","setPerpage","totalItem","setTotalItem","currentSort","setCurrentSort","paginationOption","alwaysShowAllBtns","override","showTotal","withFirstAndLast","sizePerPage","totalSize","onPageChange","updateDataTable","sizePerPageRenderer","sort","getPricelegesReturn","handleTableChange","sortField","sortOrder","per_page","current_page","total_item","rowEvents","onDoubleClick","row","CardHeader","display","justifyContent","rowNumber","keyField","columns","dataField","text","formatter","cell","index","ButtonGroup","UncontrolledTooltip","delay","props","remote","baseProps","bootstrap4","bordered","hover","pagination","paginationFactory","onTableChange","Users","activeTab","setActiveTab","allUser","setAllUser","setHide","setSelectedAcquirerId","setSelectAcquirerName","setIsOpen","setName","setUsername","getUsers","tab","filter","Object","assign","setSuccessAlert","setQuestionAlert","warning","showCancel","confirmBtnBsStyle","getAllAquirer","delateAcquirer","focusCancelBtn","acquirer_name","SimpleHeader","tabs","TabContent","TabPane","tabId","Form","FormGroup","Label","placement","Edit","payload","setPayload","onInputChange","val","prevState","updatePrivileges","error_code","Swal","fire","label","marginLeft","CardFooter","Address","allAddress","setAllAddress","province","setProvince","city","setCity","address","setAddress","setPhoneNumber","npwp","setNpwp","getAddress","phone","delateAddress","acquirer_id","Account","allAccount","setAllAccount","getAccount","Asset","allAsset","setAllAsset","nameAsset","setNameAsset","codeAsset","setCodeAsset","startDate","setStartDate","endDate","setEndDate","getAsset","asset_name","asset_code","start_date","end_date","delateAsset","moment","format","TypeAsset","Absen","warehouse","allBarcode","setAllBarcode","barcode","setBarcode","itemName","setItemName","itemCode","setItemCode","item_name","kode_item","warehouse_id","updateStatus","status","toast","dark","Fragment","Departemen","allDepartemen","setAllDepartemen","nameDepartment","setNameDepartment","codeDepartment","setCodeDepartment","getDepartemen","department_name","department_code","id_warehouse","res","delateDepartment","Satuan","allUom","setAllUom","uomCode","setUomCode","description","setDescription","getSatuan","uom_code","delateSatuan","Customer","allCustomer","setAllCustomer","codeCustomer","setCodeCustomer","getCustomer","customer_code","Coa","allCoa","setAllCoa","codeCoa","setCodeCoa","getCoa","coa_code","delateCoa","ItemCategory","itemCategory","setItemCategory","getItemCategory","ItemSubCategory","ItemFunction","getFunction","ItemSubFunction","ItemMerek","itemMerek","setItemMerek","getMerek","ItemSubMerek","setItemSubMerek","getSubMerek","response_data","ItemGrade","nilai","setNilai","keterangan","Item","allItem","setAllItem","nameItem","setNameItem","codeItem","setCodeItem","getItems","item_code","search","defaultSearch","Create","numberPart","setNumberPart","allSatuan","setAllSatuan","minimumstock","setMinimumStock","satuan","setSatuan","allGrade","setAllGrade","grade","setGrade","account","setAccount","category","setCategory","categories","setCategories","subCategory","setSubCategory","subCategories","setSubCategories","nameFunction","setNameFunction","nameFunctions","setNameFunctions","nameSubFunction","setNameSubFunction","nameSubFunctions","setNameSubFunctions","supplier","setSupplier","suppliers","setSuppliers","merek","setMerek","allMerek","setAllMerek","submerek","setSubMerek","allSubMerek","setAllSubMerek","panjang","setPanjang","lebar","setLebar","tinggi","setTinggi","nameType","setNameType","setStatus","getPerson","getCategory","getSubCategory","getSubFunction","getGrade","CreateItem","person_id","item_description","part_number","uom_id","kategori_id","subkategori_id","grade_id","account_id","function_id","subfunction_id","merek_id","submerek_id","active_flag","minimum_stok","stock","for","sm","person_name","m","account_name","DetailItems","area","setArea","sisi","setSisi","tingkat","setTingkat","itemLocation","setItemLocation","logPrice","setLogPrice","itemParts","setItemParts","getById","match","params","items_location","log_price","items_part","formatRupiah","money","Intl","NumberFormat","currency","minimumFractionDigits","harga","sub_total","nominal_1","nominal_2","harga_beli","size","ModalHeader","CardImg","height","ModalFooter","IndexWarehousePusat","allWarehousePusat","setAllWarehousePusat","getWareHousePusat","level","IndexWarehouseToko","allWarehouseToko","setAllWarehouseToko","getWareHouseToko","IndexWarehouseGudang","allWarehouseGudang","setAllWarehouseGudang","getWareHouseGudang","CreateWarehouse","longitude","setLongitude","latitude","setLatitude","setPhone","fax","setFax","image","setImage","provinces","setProvinces","citys","setCitys","getProvinsi","CreateRak","myjson","is_indent","FormData","append","getKota","b","files","warehousepusat","setWarehousePusat","warehousepusats","setWarehousePusats","getPusat","pusat_id","CreateWarehouseGudang","warehousetoko","setWarehouseToko","warehousetokos","setWarehouseTokos","toko_id","getToko","Karyawan","allKaryawan","setAllKaryawan","department","setDepartment","getKaryawan","dept_name","Komisi","userId","allKomisi","setAllKomisi","codeTransaction","setCodeTransaction","getKomisi","trans_code","user_id","Salary","allSalary","setAllSalary","getSalary","Person","kode","setKode","nama","setNama","getSupplier","person_code","delateSupplier","limit_hutang","limit_piutang","Pajak","allPajak","setAllPajak","getPajak","delatePajak","rak","allRak","setAllRak","rakCode","setRakCode","setKeterangan","getRak","rak_code","Info","allInfo","setAllInfo","menu","action","PenawaranPo","hargatotal","setHargaTotal","allPo","setAllPo","Item_Code","qty","setQty","setHarga","poType","setPoType","persons","setPersons","person","setPerson","payment_method","setPaymentMethod","durasipo","setDurasiPo","descriptionPayment","setDescriptionPayment","descriptionPo","setDescriptionPo","jangkaWaktu","setJangkaWaktu","is_cicil","setIsCicil","item_id","qty_fisik","keterangan_fisik","inputList","setInputList","getPrice","getPo","handleAddClick","username_po","jangka_waktu","keterangan_payment","po_type","durasi_po","keterangan_po","approve","username_admin","admin_approval","keterangan_admin","username_validator","clear","keterangan_validator","username_gudang","status_barang","keterangan_gudang","username_kurir","items","CreateData","Table","x","s","list","splice","handleRemoveClick","Validator","AdminApprovePo","ValidasiPo","receivingSo","AllSo","setAllSo","getAllSo","ReceivingPo","allReceivingPo","getReceivingPo","setAllReceivingPo","ValidasiReceivingPo","HistoryPo","allHistory","setAllHistory","orderCode","setOrderCode","getHistoryPo","order_code","Validasi","namaDepartment","allPoReturn","setAllPoReturn","kodePo","setKodePo","dataPo","setDataPo","setOpenDetail","metodepembayaran","setMetodePembayaran","setSelectedRowData","AllPerson","setAllPerson","barcodeError","setBarcodeError","setStock","stockError","setStockError","usernamePo","descriptionGudang","isCicil","statusBarang","usernameAdmin","descriptionAdmin","namaitem","setNamaItem","setText","suggestions","setSuggestions","poReturn","handleSubmit","usernameValidator","descriptionValidator","postReturPo","handleSearchPO","mergeItems","durasitempo","setDurasiTempo","jangkawaktu","termin","setTermin","autoComplete","matches","ordercodes","regex","RegExp","onChangeHandler","suggestion","onSugesstHandler","item_or_money","AdminApprove","getPoRetur","manajer_approval","Index","soType","setSoType","kodeso","setKodeSo","keteranganso","setKeteranganSo","soStatus","setSoStatus","totaldiskon","setTotalDiskon","ppn","setPpn","promo","setPromo","cicil","setCicil","pengiriman","setPengiriman","allSo","idItem","usernameSo","setUsernameSo","kodeitem","setKodeItem","qtyfisik","setQtyFisik","keteranganfisik","setKeteranganFisik","getSo","updatePrice","ValidasiSo","ordercode","ValidatorSo","so_type","DetailData","onCloseDetail","dataSoRetur","username_so","keterangan_so","total_qty","total_price","total_qty_fisik","total_price_fisik","block","SalesOrderReturn","allSoReturn","setAllSoReturn","openDetail","selectedRowData","getSoReturn","HistorySo","setsoType","ModalPembayaran","total","totalPrice","setTotalPrice","input1","setInput1","input2","setInput2","change","setChange","useContext","cartKasir","dispatch","forEach","price","fade","minWidth","top","cssModule","alignText","data_id","defaultValue","toFixed","replace","fontSize","paddingTop","resize","outline","customer","member","receiving_counter","reload","debounce","ModalAddMember","selectModal","setIsLoading","listData","setListData","input","setInput","InputGroup","readOnly","backgroundColor","hint","clearTimeout","finally","loadingSpinner","classes","condensed","Spinner","ModalAddItem","ModalAddKurir","store","createStore","visible","closePreview","keys","base_url","LogPrice","allPrice","setAllPrice","setPreview","setDetailData","getLogPrice","Price","hide","selectItemCode","setSelectItemCode","StockOpname","allStockOpname","setAllStockOpname","getStockOpname","Promo","allPromo","setAllPromo","getPromo","delatePromo","StockSemua","nameStock","setNameStock","codeStock","setCodeStock","allItemStock","setAllItemStock","geItemStock","StockPribadi","nameOwnStock","setNameOwnStock","codeOwnStock","setCodeOwnStock","getItemOwnStock","nameLowStock","setNameLowStock","codeLowStock","setCodeLowStock","getItemLowStock","StokRak","allRakStock","setAllRakStock","koderak","setKodeRak","itemname","itemcode","getRakStok","code_rak","SalesCanvasing","allCanvasing","setAllCanvasing","setSelectedSalesCanvasing","getCanvasing","canvasing_code","HistorySalesCanvasing","allHistoryCanvasing","setAllHistoryCanvasing","getHistoryCanvasing","salesTrackingDetail","allSelesTrackingDetail","setAllSelesTrackingDetail","getSalesTrackingDetail","code","track_log","salesTracking","setSalesTracking","selectedSalesTracking","setSelectedTracking","getSalesTracking","tracking_code","Detail","PreviewTable","TransferStock","redirectPrefix","allTransferStock","setAllTransferStock","previewVisible","setPreviewVisible","detailData","listenEvent","subscribe","getState","getTransaferStock","Bkm","allBkm","setAllBkm","bkm","setBkm","soCode","setSoCode","bkm_code","so_code","so_status","Jurnal","allJurnal","setAllJurnal","coa","setCoa","typeJurnal","setTypeJurnal","getJurnal","coa_id","dep","coa_name","PreviewHistory","FailedAlert","closeModal","contentClassName","PreviewImage","selectedImage","merekId","kategoriId","subkategoriID","detail","ObjectData","alias","cancelUpload","selected_image","fontWeight","UploadImage","fileRef","useRef","fileError","setFileError","preview","previewValue","setPreviewValue","kategori","setKategori","listFunction","setFunction","setListMerek","setKategoriId","subKategoriId","functionId","setFunctionId","setMerekId","setSelectedImage","imageName","setImageName","loading","errKategori","setErrKategori","errFunction","setErrFunction","errMerek","setErrMerek","errFile","setErrFile","req","KategoriIds","functionIds","handleSend","evt","valid","validateInput","warn","processImage","fileSize","Math","round","selectedFile","types","isImageValid","reader","FileReader","onload","result","readAsDataURL","readImage","getKategori","noValidate","getListFunction","required","accept","ref","current","click","slice","goBack","UploadBanner","errKeterangan","setErrKeterangan","ListImage","amountShown","setAmountShown","listImage","setListImage","selectedSrc","setSelectedSrc","popupVisible","setPopupVisible","startNav","setStartNav","endNav","setEndNav","setNav","activeNav","setActiveNav","filterCriteria","getListImage","amount","navigationList","FunctionId","getByFilter","criteria","merek_name","kategori_name","function_name","image_url","showCancelButton","showConfirmButton","isConfirmed","handleDelete","Pagination","PaginationItem","PaginationLink","nextStart","nextend","handlePrev","tabIndex","handleNextNav","ListBanner","selectedKeterangan","ListImageItem","cancelToken","tipeMaterial","setTipeMaterial","setAlias","kodeItem","cancel","CancelToken","source","getByItemName","nama_item","Preview","hari","durasi","closeDetail","PermintaanBarang","allPermintaanBarang","setAllPermintaanBarang","getPermintaanBarang","ValidasiPermintaanBarang","CreatePermintaanBarang","savedItems","setSavedItems","typereq","setTypeReq","isShow","setIsShow","quantity","setQuantity","setActive","filtered","setFiltered","currentTarget","innerText","AutoCompleTes","xl","suggests","Promise","all","onKeyDown","keyCode","rows","stateItem","savedItem","deleteItem","MemoKurirPO","allMemoKurirPo","setAllMemoKurirPo","getMemoKurirPo","ValidasiAdminPO","InvoicePO","allInvoicePo","setAllInvoicePo","getInvoicePo","ValidasiAdminFinance","status_af","ValidasiPimpinan","status_d","HistoryInvoicePo","BuktiKasKeluar","allBuktiKasKeluar","setAllBuktiKasKeluar","getBuktiKasKeluar","ValidasiKepalaFinance","HistoryBuktiKasKeluar","component","useParams","hariRef","setHari","setDurasi","errNama","setErrNama","errKet","errHari","setErrHari","errDurasi","setErrDurasi","isValid","showDetail","detailVisible","setDetailVisible","getData","indent","setIndent","warehouse_name","province_id","city_id","warehouse_phone","warehouse_fax","warehouse_npwp","UpdateWarehouseToko","setWarehousetoko","warehousegudang","CreateWarehouseToko","CreateWarehousePusat","Rak","roleId","usernameError","setUsernameError","nameError","setNameError","gender","setGender","isKaryawan","setIsKaryawan","setRoles","setRole","roleError","setRoleError","addressError","setAddressError","phoneError","setPhoneError","provinceError","setProvinceError","cities","setCities","cityError","setCityError","addressId","setAddressId","getUserById","getAddressById","address_id","getRole","is_karyawan","getProvince","getCity","provinceId","EditUser","prov","EditPrivileges","departments","setDepartments","departmentError","setDepartmentError","getDepartment","dept_id","dept","nameDepartmentError","setNameDepartmentError","codeDepartmentError","setCodeDepartmentError","getDepatmentById","EditData","descriptionError","setDescriptionError","allDepartment","setAllDepartment","phoneNumberError","setPhoneNumberError","faxError","setFaxError","npwpError","setNpwpError","cityId","primary_ship_flag","Alamat","getCustomerById","alamat_id","namePerson","setNamePerson","namePersonError","setNamePersonError","codePerson","setCodePerson","codePersonError","setCodePersonError","limitPiutang","setLimitPiutang","limitPiutangError","setLimitPiutangError","limitHutang","setLimitHutang","limitHutangError","setLimitHutangError","allMataUang","setAllMataUang","mataUang","setMataUang","mataUangError","setMataUangError","getMatauang","mata_uang_id","npwp_no","coa_hut_id","coa_piut_id","tunai_flag","note","tipe_harga_jual","tipe","flag_supp","mata_uang_name","codeUom","setCodeUom","codeUomError","setCodeUomError","getSatuanById","base_uom_flag","primary_flag","Uom","nilaiError","setNilaiError","is_default","nameSubCategory","setNameSubCategory","nameSubCategoryError","setNameSubCategoryError","hargaBeli","setHargaBeli","pajakBeli","setPajakBeli","pajakjuals","setPajakJual","diskonsuplierpersen","setDiskonSuplierPersen","diskonnominal","setDiskonNominal","diskonpersen","setDiskonPersen","diskonsupliernominal","setDiskonSuplierNominal","hargajualminimal","setHargaJualMinimal","hargabelitotal","setHargaBeliTotal","allpajakbeli","setAllPajakBeli","allpajakJual","setAllPajakJual","level1","setLevel1","level2","setLevel2","level3","setLevel3","level4","setLevel4","level5","setLevel5","level6","setLevel6","margin1","setMargin1","margin2","setMargin2","margin3","setMargin3","margin4","setMargin4","margin5","setMargin5","margin6","setMargin6","persentase1","setPersentase1","persentase2","setPersentase2","persentase3","setPersentase3","persentase4","setPersentase4","persentase5","setPersentase5","persentase6","setPersentase6","qty1","setQty1","qty2","setQty2","qty3","setQty3","qty4","setQty4","qty5","setQty5","qty6","setQty6","price1","setPrice1","price2","setPrice2","price3","setPrice3","price4","setPrice4","price5","setPrice5","price6","setPrice6","getPajakBeli","pajak_beli","getPajakJual","pajak_jual","harga_beli_total","harga_jual_minimal","diskon_nominal","diskon_persen","diskon_nominal_suplier","diskon_persen_suplier","Level_1","Level_2","Level_3","Level_4","Level_5","Level_6","persentase_1","persentase_2","persentase_3","persentase_4","persentase_5","persentase_6","nominal_3","nominal_4","nominal_5","nominal_6","min_qty_1","min_qty_2","min_qty_3","min_qty_4","min_qty_5","price_1","price_2","price_3","price_4","price_5","price_6","parseFloat","EditPrice","pb","persentase","uom","setUom","diskonSuplier","setDiskonSuplier","pajak","setPajak","hargaJual","setHargaJual","diskonJual","setDiskonJual","nominal1","setNominal1","nominal2","setNominal2","nominal3","setNominal3","nominal4","setNominal4","nominal5","setNominal5","setPerentase1","setPerentase2","setPerentase3","setPerentase4","setPerentase5","minQuantity1","setMinQuantity1","minQuantity2","setMinQuantity2","minQuantity3","setMinQuantity3","minQuantity4","setMinQuantity4","minQuantity5","setMinQuantity5","pajak_id","diskon_suplier","harga_jual","diskon_jual","setPersentase","persentaseError","setPersentaseError","codePromo","setCodePromo","namePromo","setNamePromo","nominalPromo","setNominalPromo","durationPromo","setDurationPromo","persentasePromo","setPersentasePromo","kode_promo","nama_promo","persentase_promo","nominal_promo","durasi_promo","kode_Promo","getAssetById","nameAssetError","setNameAssetError","typeAsset","setTypeAsset","typeAssetError","setTypeAssetError","setTotal","setNote","valueAsset","setValueAsset","buyingDate","setBuyingDate","setTypes","asset_type_id","entered_qty","nilai_asset","buying_date","getType","nameAccount1","setNameAccount1","nameAccount1Error","setNameAccount1Error","nameAccount2","setNameAccount2","nameAccount2Error","setNameAccount2Error","getAccountById","account_name2","parent_flag","parent_id","neraca_flag","status_flag","account_type_id","account_code","nameCoa","setNameCoa","nameCoaError","setNameCoaError","accountError","setAccountError","getCoaById","accoutnId","cc_id","itemCodeError","setItemCodeError","stockFisik","setStockFisik","stockFisikError","setStockFisikError","stok_fisik","itemCodeId","item_opname","listOpname","handleInputChange","usernameso","setCustomer","customers","setCustomers","keteranganpayment","setKeteranganPayment","paymentmethod","setApprove","adminapprove","setAdminApprove","setValidatorSo","usernameadmin","setUsernameAdmin","statusSo","setStatusSo","setStatusBarang","soId","so_id","promo_id","ReceivingSO","usernameTs","setUsernameTs","usernameKurir","setUsernameKurir","usernammeGudang","setUsernameGudang","setUsernameValidator","setDescriptionValidator","descriptionTs","setDescriptionTs","setDescriptionGudang","setClear","tsType","setTsType","typeItemId","setTypeItemId","setCode","setItems","getTs","username_ts","keterangan_ts","ts_type","transfer_code","ts_id","setErrKeteranganTs","errKetValidator","setErrKetValidator","errKetGudang","setErrKeGudang","errTsType","setErrTsType","errClear","setErrClear","errStatusBarang","setErrStatusBarang","username_manager","manager_approval","keterangan_manager","perpage","Axios","Err","setUsernamePo","keteranganpo","setKeteranganPo","setValidatorPo","adminvalidator","setAdminValidator","poId","po_id","setadminvalidator","ValidatorPo","usernamePoError","setUsernamePoError","usernamePurchasing","setUsernamePurchasing","usernamePurchasingError","setUsernamePurchasingError","usernammeGudangError","setUsernameGudangError","usernameValidatorError","setUsernameValidatorError","paymentMethod","paymentMethodError","setPaymentMethodError","descriptionPurchasing","setDescriptionPurchasing","setDescriptionAdmin","approvalAdmin","setApprovalAdmin","username_purchasing","keterangan_purchasing","allJangkaWaktu","setAllJangkaWaktu","setJangkuWaktu","getJangkaWaktu","waktu","check","poItems","dataPoItems","setDataPoItems","initialReturItems","dataReturItems","setDataReturItems","onInputChangeItem","username_manajer","keterangan_manajer","retur_code","getPoItems","constructItems","onAddItem","onRemoveItem","dataPoRetur","setDataPoRetur","updateReturPo","returCode","setReturCode","werehouse_id","PimpinanSo","setStatusSO","durasi_so","AdminApproveSo","batch_number","is_settle","manual_address","descriptionSo","setDescriptionSo","geSo","setAllMember","getMember","SoHistory","data_name","rowNumb","soItems","kodeSo","dataSo","setDataSo","dataSoItems","setDataSoItems","postReturSo","handleSearchSO","getSoItems","datasoRetur","setDatasoRetur","datasoItems","setDatasoItems","getsoItems","updateReturSo","SoReturn","allPoCode","setAllPoCode","poCode","setPoCode","poCodeError","setPoCodeError","kasBank","setKasBank","nominal","setNominal","getPoList","kas_bank","status_transaksi","po","pic","setPic","saldo","setSaldo","setType","dateTransaction","setDateTransaction","deskripsi","tanggal_transaksi","salesCanvasing","HistorysalesCanvasing","SalesTarcking","contentPage","content","toString","param","image1","setImage1","uploadImage","btnUpload","Admin","setSidenavOpen","mainContentRef","documentElement","scrollTop","scrollingElement","brandText","getBrandText","getRoutes","Customers","Auth","init","initiate_data","reducer","data_text","findIndex","removedIndex","shift","defaultFormat","App","isAuthenticated","userHasAuthenticated","userName","setUserName","setToken","userSession","setUserSession","useReducer","Provider","render","createBrowserHistory","interceptors","use","reject","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.2bf57652.chunk.js","sourcesContent":["import getEnvVariable from \"../utils/getEnvVariable\";\r\nimport crypto from \"crypto\";\r\n\r\n// const { secretKey1, secretKey2, keyLength, IV, iteration } =\r\n//   await getEnvVariable();\r\n\r\nconst decryptAES256 = async (chiperText) => {\r\n  const { generatedKey, IV } = await getEnvVariable();\r\n  const convertToBuffer = Buffer.from(\r\n    generatedKey.split(\" \").map((item) => parseInt(item))\r\n  );\r\n\r\n  const UsedIV = Buffer.from(IV.split(\" \").map((char) => parseInt(char)));\r\n\r\n  var cipher = crypto.createDecipheriv(\"aes-256-cbc\", convertToBuffer, UsedIV);\r\n  cipher.setAutoPadding(true);\r\n  let ciph = cipher.update(Buffer.from(chiperText, \"base64\"));\r\n  let ciphf = cipher.final();\r\n  return Buffer.concat([ciph, ciphf]).toString();\r\n};\r\n\r\nconst encryptAES256 = async (plainText) => {\r\n  const { generatedKey, IV } = await getEnvVariable();\r\n  const convertToBuffer = Buffer.from(generatedKey.split(\" \").map(Number));\r\n\r\n  const UsedIV = Buffer.from(IV.split(\" \").map((char) => parseInt(char)));\r\n\r\n  var cipher = crypto.createCipheriv(\"aes-256-cbc\", convertToBuffer, UsedIV);\r\n  let ciph = cipher.update(plainText, \"utf-8\", \"base64\");\r\n  let ciphf = cipher.final(\"base64\");\r\n  return ciph + ciphf;\r\n};\r\n\r\nexport { decryptAES256, encryptAES256 };\r\n","const getEnvVariable = async () => {\r\n  return {\r\n    IV: await process.env.REACT_APP_AES_IV,\r\n    generatedKey: await process.env.REACT_APP_AES_GENERATED_KEY,\r\n  };\r\n};\r\n\r\nexport default getEnvVariable;\r\n","export default __webpack_public_path__ + \"static/media/Hokky1.d4361cfd.png\";","export default __webpack_public_path__ + \"static/media/Hokky1.d4361cfd.png\";","export default __webpack_public_path__ + \"static/media/das.531a0133.png\";","export default __webpack_public_path__ + \"static/media/edc.8ed48869.png\";","export default __webpack_public_path__ + \"static/media/campur.8aa44f48.png\";","export default __webpack_public_path__ + \"static/media/argon-react.128d71d3.png\";","import { useContext, createContext } from 'react'\r\n\r\nexport const AppContext = createContext(null)\r\n\r\nexport const useAppContext = () => {\r\n    return useContext(AppContext)\r\n}\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard PRO React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-pro-react\r\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classnames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// reactstrap components\r\nimport {\r\n  Collapse,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  Media,\r\n  Navbar,\r\n  NavItem,\r\n  NavLink,\r\n  Nav,\r\n  Container,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nfunction AdminNavbar({ theme, sidenavOpen, toggleSidenav }) {\r\n  let user = null;\r\n\r\n  if (localStorage.getItem(\"token\")) {\r\n    user = jwt_decode(localStorage.getItem(\"token\"));\r\n    localStorage.setItem(\"warehouse\", user.wid);\r\n    localStorage.setItem(\"department\", user.dnm);\r\n  }\r\n\r\n  let history = useHistory();\r\n  // function that on mobile devices makes the search open\r\n  const openSearch = () => {\r\n    document.body.classList.add(\"g-navbar-search-showing\");\r\n    setTimeout(function () {\r\n      document.body.classList.remove(\"g-navbar-search-showing\");\r\n      document.body.classList.add(\"g-navbar-search-show\");\r\n    }, 150);\r\n    setTimeout(function () {\r\n      document.body.classList.add(\"g-navbar-search-shown\");\r\n    }, 300);\r\n  };\r\n\r\n  async function handleLogout() {\r\n    localStorage.removeItem(\"token\");\r\n    history.push(\"/auth/login\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        className={classnames(\r\n          \"navbar-top navbar-expand border-bottom\",\r\n          { \"navbar-dark bg-info\": theme === \"dark\" },\r\n          { \"navbar-light bg-secondary\": theme === \"light\" }\r\n        )}\r\n      >\r\n        <Container fluid>\r\n          <Collapse navbar isOpen={true}>\r\n            <Nav className=\"align-items-center ml-md-auto\" navbar>\r\n              <NavItem className=\"d-xl-none\">\r\n                <div\r\n                  className={classnames(\r\n                    \"pr-3 sidenav-toggler\",\r\n                    { active: sidenavOpen },\r\n                    { \"sidenav-toggler-dark\": theme === \"dark\" }\r\n                  )}\r\n                  onClick={toggleSidenav}\r\n                >\r\n                  <div className=\"sidenav-toggler-inner\">\r\n                    <i className=\"sidenav-toggler-line\" />\r\n                    <i className=\"sidenav-toggler-line\" />\r\n                    <i className=\"sidenav-toggler-line\" />\r\n                  </div>\r\n                </div>\r\n              </NavItem>\r\n              <NavItem className=\"d-sm-none\">\r\n                <NavLink onClick={openSearch}>\r\n                  <i className=\"ni ni-zoom-split-in\" />\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            <Nav className=\"align-items-center ml-auto ml-md-0\" navbar>\r\n              <UncontrolledDropdown nav>\r\n                <DropdownToggle className=\"nav-link pr-0\" color=\"\" tag=\"a\">\r\n                  <Media className=\"align-items-center\">\r\n                    <span className=\"avatar avatar-sm rounded-circle\">\r\n                      <img\r\n                        alt=\"...\"\r\n                        src={require(\"assets/img/theme/Hokky1.png\").default}\r\n                      />\r\n                    </span>\r\n                    <Media className=\"ml-2 d-none d-lg-block\">\r\n                      <span className=\"mb-0 text-sm font-weight-bold\">\r\n                        {user.sub}\r\n                      </span>\r\n                    </Media>\r\n                  </Media>\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                  <DropdownItem className=\"noti-title\" header tag=\"div\">\r\n                    <h6 className=\"text-overflow m-0\">Welcome!</h6>\r\n                  </DropdownItem>\r\n                  <Link to=\"/admin/my-profil\">\r\n                    <DropdownItem>\r\n                      <i className=\"ni ni-single-02\" />\r\n                      <span>My profile</span>\r\n                    </DropdownItem>\r\n                  </Link>\r\n                  <Link to=\"/admin/change-password\">\r\n                    <DropdownItem>\r\n                      <i className=\"ni ni-lock-circle-open\" />\r\n                      <span>Kata Sandi</span>\r\n                    </DropdownItem>\r\n                  </Link>\r\n                  <DropdownItem divider />\r\n                  <DropdownItem onClick={handleLogout}>\r\n                    <i className=\"ni ni-user-run\" />\r\n                    <span>Logout</span>\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </Nav>\r\n          </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n\r\nAdminNavbar.defaultProps = {\r\n  toggleSidenav: () => {},\r\n  sidenavOpen: false,\r\n  theme: \"dark\",\r\n};\r\nAdminNavbar.propTypes = {\r\n  toggleSidenav: PropTypes.func,\r\n  sidenavOpen: PropTypes.bool,\r\n  theme: PropTypes.oneOf([\"dark\", \"light\"]),\r\n};\r\n\r\nexport default AdminNavbar;\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard PRO React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-pro-react\r\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport packageJson from \"../../../package.json\";\r\n\r\nfunction AdminFooter() {\r\n  return (\r\n    <>\r\n      <Container fluid>\r\n        <footer className=\"footer pt-0\">\r\n          <Row className=\"align-items-center justify-content-lg-between\">\r\n            <Col lg=\"6\">\r\n              <div className=\"copyright text-center text-lg-left text-muted\">\r\n                © {new Date().getFullYear()} Hokky Bangunan\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"text-right\">v {packageJson.version}</div>\r\n            </Col>\r\n          </Row>\r\n        </footer>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminFooter;\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard PRO React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-pro-react\r\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React, { useState } from \"react\";\r\n// react library for routing\r\nimport { useLocation, NavLink as NavLinkRRD, Link } from \"react-router-dom\";\r\n// nodejs library that concatenates classes\r\nimport classnames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport { PropTypes } from \"prop-types\";\r\n// react library that creates nice scrollbar on windows devices\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n// reactstrap components\r\nimport {\r\n  Collapse,\r\n  NavbarBrand,\r\n  Navbar,\r\n  NavItem,\r\n  NavLink,\r\n  Nav,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\n\r\nfunction Sidebar({ toggleSidenav, sidenavOpen, routes, logo, rtlActive }) {\r\n  const [state, setState] = React.useState({});\r\n  const [warehouseList, setWarehouseList] = useState();\r\n  const [warehouseName, setWarehouseName] = useState();\r\n  const location = useLocation();\r\n  const role = localStorage.getItem(\"authority\");\r\n  React.useEffect(() => {\r\n    setState(getCollapseStates(routes));\r\n    getWarehouseList();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  //getting warehouse data\r\n  const getWarehouseList = () => {\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/warehouse/list/all`)\r\n      .then(({ data }) => {\r\n        setWarehouseList(data.response);\r\n        if (data.response.length !== 0) {\r\n          const initalData = data.response[0];\r\n          setWarehouseName(initalData.name);\r\n          localStorage.setItem(\"warehouse\", initalData.id);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  //add warehouse into the list\r\n  const addWarehouseList = () => {\r\n    if (!warehouseList) return <option>warehouse not found</option>;\r\n    return warehouseList.map((item) => (\r\n      <option key={item.id} data-id={item.id}>\r\n        {item.name}\r\n      </option>\r\n    ));\r\n  };\r\n  //selected change warehouse\r\n  const onWarehouseChange = (event) => {\r\n    const selectedWarehouse = event.target.options.selectedIndex;\r\n    const name = event.target.value;\r\n    setWarehouseName(name);\r\n    const warehouseId =\r\n      event.target.options[selectedWarehouse].getAttribute(\"data-id\");\r\n    localStorage.setItem(\"warehouse\", warehouseId);\r\n  };\r\n\r\n  // verifies if routeName is the one active (in browser input)\r\n  const activeRoute = (routeName) => {\r\n    return location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\r\n  };\r\n  // makes the sidenav normal on hover (actually when mouse enters on it)\r\n  const onMouseEnterSidenav = () => {\r\n    if (!document.body.classList.contains(\"g-sidenav-pinned\")) {\r\n      document.body.classList.add(\"g-sidenav-show\");\r\n    }\r\n  };\r\n  // makes the sidenav mini on hover (actually when mouse leaves from it)\r\n  const onMouseLeaveSidenav = () => {\r\n    if (!document.body.classList.contains(\"g-sidenav-pinned\")) {\r\n      document.body.classList.remove(\"g-sidenav-show\");\r\n    }\r\n  };\r\n  // this creates the intial state of this component based on the collapse routes\r\n  // that it gets through routes\r\n  const getCollapseStates = (routes) => {\r\n    let initialState = {};\r\n    routes.map((prop, key) => {\r\n      if (prop.collapse) {\r\n        initialState = {\r\n          [prop.state]: getCollapseInitialState(prop.views),\r\n          ...getCollapseStates(prop.views),\r\n          ...initialState,\r\n        };\r\n      }\r\n      return null;\r\n    });\r\n    return initialState;\r\n  };\r\n  // this verifies if any of the collapses should be default opened on a rerender of this component\r\n  // for example, on the refresh of the page,\r\n  // while on the src/views/forms/RegularForms.js - route /admin/regular-forms\r\n  const getCollapseInitialState = (routes) => {\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (routes[i].collapse && getCollapseInitialState(routes[i].views)) {\r\n        return true;\r\n      } else if (location.pathname.indexOf(routes[i].path) !== -1) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  // this is used on mobile devices, when a user navigates\r\n  // the sidebar will autoclose\r\n  const closeSidenav = () => {\r\n    if (window.innerWidth < 1200) {\r\n      toggleSidenav();\r\n    }\r\n  };\r\n  // this function creates the links and collapses that appear in the sidebar (left menu)\r\n  const createLinks = (routes) => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.redirect) {\r\n        return null;\r\n      }\r\n      if (prop.hidden) {\r\n        return null;\r\n      }\r\n      if (prop.roles !== \"undefined\") {\r\n        if (!prop.roles.includes(role)) return null;\r\n      }\r\n      if (prop.collapse) {\r\n        var st = {};\r\n        st[prop[\"state\"]] = !state[prop.state];\r\n        return (\r\n          <NavItem key={key}>\r\n            <NavLink\r\n              href=\"#pablo\"\r\n              data-toggle=\"collapse\"\r\n              aria-expanded={state[prop.state]}\r\n              className={classnames({\r\n                active: getCollapseInitialState(prop.views),\r\n              })}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                setState(st);\r\n              }}\r\n            >\r\n              {prop.icon ? (\r\n                <>\r\n                  <i className={prop.icon} />\r\n                  <span className=\"nav-link-text\">{prop.name}</span>\r\n                </>\r\n              ) : prop.miniName ? (\r\n                <>\r\n                  <span className=\"sidenav-mini-icon\"> {prop.miniName} </span>\r\n                  <span className=\"sidenav-normal\"> {prop.name} </span>\r\n                </>\r\n              ) : null}\r\n            </NavLink>\r\n            <Collapse isOpen={state[prop.state]}>\r\n              <Nav className=\"nav-sm flex-column\">\r\n                {createLinks(prop.views)}\r\n              </Nav>\r\n            </Collapse>\r\n          </NavItem>\r\n        );\r\n      }\r\n      return (\r\n        <NavItem className={activeRoute(prop.layout + prop.path)} key={key}>\r\n          <NavLink\r\n            to={prop.layout + prop.path}\r\n            activeClassName=\"\"\r\n            onClick={closeSidenav}\r\n            tag={NavLinkRRD}\r\n          >\r\n            {prop.icon !== undefined ? (\r\n              <>\r\n                <i className={prop.icon} />\r\n                <span className=\"nav-link-text\">{prop.name}</span>\r\n              </>\r\n            ) : prop.miniName !== undefined ? (\r\n              <>\r\n                <span className=\"sidenav-mini-icon\"> {prop.miniName} </span>\r\n                <span className=\"sidenav-normal\"> {prop.name} </span>\r\n              </>\r\n            ) : (\r\n              prop.name\r\n            )}\r\n          </NavLink>\r\n        </NavItem>\r\n      );\r\n    });\r\n  };\r\n\r\n  let navbarBrandProps;\r\n  if (logo && logo.innerLink) {\r\n    navbarBrandProps = {\r\n      to: logo.innerLink,\r\n      tag: Link,\r\n    };\r\n  } else if (logo && logo.outterLink) {\r\n    navbarBrandProps = {\r\n      href: logo.outterLink,\r\n      target: \"_blank\",\r\n    };\r\n  }\r\n  const scrollBarInner = (\r\n    <div className=\"scrollbar-inner\">\r\n      <div className=\"sidenav-header d-flex align-items-center\">\r\n        {logo ? (\r\n          <NavbarBrand {...navbarBrandProps}>\r\n            <img\r\n              alt={logo.imgAlt}\r\n              className=\"navbar-brand-img\"\r\n              src={logo.imgSrc}\r\n            />\r\n          </NavbarBrand>\r\n        ) : null}\r\n        <div className=\"ml-auto\">\r\n          <div\r\n            className={classnames(\"sidenav-toggler d-none d-xl-block\", {\r\n              active: sidenavOpen,\r\n            })}\r\n            onClick={toggleSidenav}\r\n          >\r\n            <div className=\"sidenav-toggler-inner\">\r\n              <i className=\"sidenav-toggler-line\" />\r\n              <i className=\"sidenav-toggler-line\" />\r\n              <i className=\"sidenav-toggler-line\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"navbar-inner\">\r\n        {localStorage.getItem(\"username\") === \"superadmin\" && (\r\n          <Input\r\n            value={warehouseName}\r\n            type=\"select\"\r\n            bsSize=\"sm\"\r\n            onChange={onWarehouseChange}\r\n          >\r\n            {addWarehouseList()}\r\n          </Input>\r\n        )}\r\n        <Collapse navbar isOpen={true}>\r\n          <Nav navbar>{createLinks(routes)}</Nav>\r\n          {/* <hr className=\"my-3\" /> */}\r\n          {/* <h6 className=\"navbar-heading p-0 text-muted\">\r\n            <span className=\"docs-normal\">Documentation</span>\r\n            <span className=\"docs-mini\">D</span>\r\n          </h6> */}\r\n          {/* <Nav className=\"mb-md-3\" navbar>\r\n            <NavItem>\r\n              <NavLink\r\n                href=\"https://demos.creative-tim.com/argon-dashboard-pro-react/#/documentation/overview?ref=adpr-sidebar\"\r\n                target=\"_blank\"\r\n              >\r\n                <i className=\"ni ni-spaceship\" />\r\n                <span className=\"nav-link-text\">Getting started</span>\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                href=\"https://demos.creative-tim.com/argon-dashboard-pro-react/#/documentation/colors?ref=adpr-sidebar\"\r\n                target=\"_blank\"\r\n              >\r\n                <i className=\"ni ni-palette\" />\r\n                <span className=\"nav-link-text\">Foundation</span>\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                href=\"https://demos.creative-tim.com/argon-dashboard-pro-react/#/documentation/alert?ref=adpr-sidebar\"\r\n                target=\"_blank\"\r\n              >\r\n                <i className=\"ni ni-ui-04\" />\r\n                <span className=\"nav-link-text\">Components</span>\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                href=\"https://demos.creative-tim.com/argon-dashboard-pro-react/#/documentation/charts?ref=adpr-sidebar\"\r\n                target=\"_blank\"\r\n              >\r\n                <i className=\"ni ni-chart-pie-35\" />\r\n                <span className=\"nav-link-text\">Plugins</span>\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav> */}\r\n        </Collapse>\r\n      </div>\r\n    </div>\r\n  );\r\n  return (\r\n    <Navbar\r\n      className={\r\n        \"sidenav navbar-vertical navbar-expand-xs navbar-light bg-white \" +\r\n        (rtlActive ? \"\" : \"fixed-left\")\r\n      }\r\n      onMouseEnter={onMouseEnterSidenav}\r\n      onMouseLeave={onMouseLeaveSidenav}\r\n    >\r\n      {navigator.platform.indexOf(\"Win\") > -1 ? (\r\n        <PerfectScrollbar>{scrollBarInner}</PerfectScrollbar>\r\n      ) : (\r\n        scrollBarInner\r\n      )}\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nSidebar.defaultProps = {\r\n  routes: [{}],\r\n  toggleSidenav: () => {},\r\n  sidenavOpen: false,\r\n  rtlActive: false,\r\n};\r\n\r\nSidebar.propTypes = {\r\n  // function used to make sidenav mini or normal\r\n  toggleSidenav: PropTypes.func,\r\n  // prop to know if the sidenav is mini or normal\r\n  sidenavOpen: PropTypes.bool,\r\n  // links that will be displayed inside the component\r\n  routes: PropTypes.arrayOf(PropTypes.object),\r\n  // logo\r\n  logo: PropTypes.shape({\r\n    // innerLink is for links that will direct the user within the app\r\n    // it will be rendered as <Link to=\"...\">...</Link> tag\r\n    innerLink: PropTypes.string,\r\n    // outterLink is for links that will direct the user outside the app\r\n    // it will be rendered as simple <a href=\"...\">...</a> tag\r\n    outterLink: PropTypes.string,\r\n    // the image src of the logo\r\n    imgSrc: PropTypes.string.isRequired,\r\n    // the alt for the img\r\n    imgAlt: PropTypes.string.isRequired,\r\n  }),\r\n  // rtl active, this will make the sidebar to stay on the right side\r\n  rtlActive: PropTypes.bool,\r\n};\r\n\r\nexport default Sidebar;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  CarouselItem,\r\n  CarouselCaption,\r\n  Modal,\r\n  ModalBody,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AvForm, AvGroup } from \"availity-reactstrap-validation\";\r\nimport axios from \"axios\";\r\n// core components\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport { encryptAES256, decryptAES256 } from \"utils/AESchiper\";\r\n\r\nconst items = [\r\n  {\r\n    src: require(\"assets/img/theme/das.png\").default,\r\n    caption: \"Merchant Dashboard\",\r\n  },\r\n  {\r\n    src: require(\"assets/img/theme/edc.png\").default,\r\n    caption: \"Payment Terminal\",\r\n  },\r\n  {\r\n    src: require(\"assets/img/theme/campur.png\").default,\r\n    caption: \"Realtime Transaction Status\",\r\n  },\r\n];\r\n\r\nfunction Login() {\r\n  let history = useHistory();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(null);\r\n  const [wrongEmail, setWrongEmail] = useState(null);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(null);\r\n  const [wrongPassword, setWrongPassword] = useState(\"\");\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [animating, setAnimating] = useState(false);\r\n  const [modal, setModal] = useState(false);\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n  const [alert, setAlert] = React.useState(null);\r\n  const timestamp = Date.now();\r\n  const [resetEmail, setResetEmail] = useState(\"\");\r\n  const [resetEmailError, setResetEmailError] = useState(null);\r\n  const [isLoading, setLoading] = useState(false);\r\n  console.log(timestamp);\r\n  const [captchaResponse, setCaptchaResponse] = useState(null);\r\n  const successCallback = (response) => {\r\n    setCaptchaResponse(response);\r\n  };\r\n  const expiredCallback = () => setCaptchaResponse(null);\r\n  const containerId = \"test-recaptcha\";\r\n  // const sitekey = process.env.REACT_APP_GOOGLE_CAPTCHA;\r\n\r\n  const [rememberMe, setRememberMe] = useState(false);\r\n  const isEmail = localStorage.getItem(\"username\");\r\n  const isPassword = localStorage.getItem(\"isPassword\");\r\n  const cekRememberMe = localStorage.getItem(\"rememberMe\");\r\n\r\n  // useRecaptcha({\r\n  //   containerId,\r\n  //   successCallback,\r\n  //   expiredCallback,\r\n  //   size: \"normal\",\r\n  //   sitekey,\r\n  // });\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (email === \"\") {\r\n      setEmailError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (password === \"\") {\r\n      setPasswordError(\"invalid\");\r\n      error = true;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  const validateFormResetPassword = () => {\r\n    let error = false;\r\n    if (resetEmail === \"\") {\r\n      setResetEmailError(\"invalid\");\r\n      error = true;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  const togglePasswordVisiblity = () => {\r\n    setPasswordShown(passwordShown ? false : true);\r\n  };\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const hideAlert = () => {\r\n    setAlert(null);\r\n  };\r\n\r\n  const setMsgAlert = (str) => {\r\n    setAlert(\r\n      <SweetAlert\r\n        error\r\n        showConfirm\r\n        confirmBtnText=\"Ok\"\r\n        title={str}\r\n        onCancel={hideAlert}\r\n        onConfirm={hideAlert}\r\n      />\r\n    );\r\n  };\r\n\r\n  const setSuccessAlert = () => {\r\n    setAlert(\r\n      <SweetAlert\r\n        success\r\n        showConfirm\r\n        confirmBtnText=\"Ok\"\r\n        title=\"Link reset password sudah terkirim, silahkan cek email anda.\"\r\n        onCancel={hideAlert}\r\n        onConfirm={hideAlert}\r\n      />\r\n    );\r\n  };\r\n\r\n  const getMyProfil = async () => {\r\n    const token = localStorage.token;\r\n    \r\n    try {\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_API_BASE_URL}/info`,\r\n        {\r\n          method: \"GET\", // or 'PUT'\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          body: JSON.stringify(),\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      localStorage.setItem(\"userId\", data.id);\r\n      localStorage.setItem(\"email\", data.email);\r\n      localStorage.setItem(\"phoneNumber\", data.phoneNumber);\r\n      localStorage.setItem(\"username\", data.username);\r\n      localStorage.setItem(\"name\", data.name);\r\n      localStorage.setItem(\"authority\", data.authorities[0].authority);\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n  \r\n  async function Login() {\r\n    const key = email + timestamp;\r\n    const emailwithLenght = email.length;\r\n    const passwordLenght = password.length;\r\n    let passwordWithLanght;\r\n    if (passwordLenght < 13 ) {\r\n      passwordWithLanght =  password + timestamp ;\r\n    }  else {\r\n      passwordWithLanght = password + timestamp + \"0\";\r\n    };\r\n\r\n    let emailwithLanght;\r\n    if (emailwithLenght < 13 ) {\r\n      emailwithLanght = email + timestamp ;\r\n    } else {\r\n      emailwithLanght = email + timestamp + \"0\";\r\n    }\r\n\r\n    let body = {\r\n      usernameOrEmail: await encryptAES256(emailwithLanght),\r\n      password: await encryptAES256(passwordWithLanght),\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/users/mobile/login`,\r\n        body\r\n      )\r\n      // axios.post(`${process.env.REACT_APP_API_BASE_URL}/users/login?g-recaptcha-response=${captchaResponse}&remember-me=${rememberMe}`, body)\r\n      .then(function (response) {\r\n        console.log(body);\r\n        if (response.data.error) {\r\n          showErrors(response.data.error);\r\n          return;\r\n        }\r\n        if (response.data.errors) {\r\n          showErrorsEmail(response.data.errors);\r\n          return;\r\n        }\r\n        // setPassword(localStorage.setItem(\"isPassword\", password));\r\n        window.localStorage.setItem(\"token\", response.data.response.token);\r\n        // window.localStorage.setItem(\"rememberMe\", response.data.response_data.remember_me);\r\n        // window.localStorage.setItem(\"refreshToken\", response.data.response_data.refreshToken);\r\n        getMyProfil();\r\n        history.push(\"/admin/dashboard\");\r\n      })\r\n      .catch(function (error) {\r\n        setMsgAlert(error.message);\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const showErrorsEmail = (error) => {\r\n    setEmailError(\"invalid\");\r\n    setWrongEmail(error.usernameOrEmail);\r\n  };\r\n\r\n  const showErrors = (error) => {\r\n    setEmailError(\"invalid\");\r\n    setWrongEmail(error.usernameOrEmail);\r\n    setPasswordError(\"invalid\");\r\n    setWrongPassword(error.password);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      Login();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getRememberMe();\r\n  }, []);\r\n\r\n  const getRememberMe = () => {\r\n    if (cekRememberMe === \"true\") {\r\n      setEmail(isEmail);\r\n      setPassword(isPassword);\r\n      setRememberMe(true);\r\n    } else {\r\n      setEmail(\"\");\r\n      setPassword(\"\");\r\n    }\r\n  };\r\n\r\n  function ForgotPassword() {\r\n    setLoading(true);\r\n    let body = {\r\n      email: resetEmail,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/user/forgot-password`, body)\r\n      .then(function (response) {\r\n        setSuccessAlert();\r\n        setResetEmail(\"\");\r\n        history.push(\"/auth/login\");\r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleSubmitForgotPassword = (e) => {\r\n    e.preventDefault();\r\n    if (!validateFormResetPassword()) {\r\n      ForgotPassword();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {alert}\r\n      <Container className=\"mt--8 pb-5 login-container\">\r\n        <Row className=\"justify-content-center\">\r\n          <Col lg=\"5\" md=\"7\">\r\n            <Card className=\"bg-secondary border-0 mb-0\">\r\n              <img\r\n                alt=\"login\"\r\n                style={{ width: \"100%\" }}\r\n                src={require(\"assets/img/theme/Hokky1.png\").default}\r\n              />\r\n              <CardBody className=\"px-lg-5 py-lg-5\">\r\n                <p>Wellcome back, Please Login to your Account.</p>\r\n                <AvForm onSubmit={handleSubmit}>\r\n                  <AvGroup className=\"input-group\">\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                      <InputGroupText>\r\n                        <i className=\"ni ni-email-83\" />\r\n                      </InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <Input\r\n                      placeholder=\"Masukan Email / Username\"\r\n                      value={email}\r\n                      invalid={emailError === \"invalid\"}\r\n                      onChange={(e) => {\r\n                        setEmail(e.target.value);\r\n                        if (e.target.value !== \"\") {\r\n                          setEmailError(\"\");\r\n                        }\r\n                      }}\r\n                    />\r\n                    <FormFeedback>\r\n                      {email === \"\"\r\n                        ? \"Email atau Username tidak boleh kosong\"\r\n                        : wrongEmail}\r\n                    </FormFeedback>\r\n                  </AvGroup>\r\n                  <AvGroup className=\"input-group\">\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                      <InputGroupText>\r\n                        <i className=\"ni ni-lock-circle-open\" />\r\n                      </InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <Input\r\n                      placeholder=\"Masukkan Kata Sandi\"\r\n                      type={passwordShown ? \"text\" : \"password\"}\r\n                      value={password}\r\n                      invalid={passwordError === \"invalid\"}\r\n                      onChange={(e) => {\r\n                        setPassword(e.target.value);\r\n                        if (e.target.value !== \"\") {\r\n                          setPasswordError(\"\");\r\n                        }\r\n                      }}\r\n                    />\r\n                    <InputGroupText>\r\n                      {passwordShown !== true ? (\r\n                        <i\r\n                          className=\"fa fa-eye\"\r\n                          aria-hidden=\"true\"\r\n                          onClick={togglePasswordVisiblity}\r\n                        />\r\n                      ) : (\r\n                        <i\r\n                          className=\"fa fa-eye-slash\"\r\n                          aria-hidden=\"true\"\r\n                          onClick={togglePasswordVisiblity}\r\n                        />\r\n                      )}\r\n                    </InputGroupText>\r\n                    <FormFeedback>\r\n                      {password === \"\"\r\n                        ? \"Password tidak boleh kosong\"\r\n                        : wrongPassword}\r\n                    </FormFeedback>\r\n                  </AvGroup>\r\n                  <Row>\r\n                    <Col md={6}>\r\n                      <div className=\"custom-control custom-control-alternative custom-checkbox\">\r\n                        <input\r\n                          className=\"custom-control-input\"\r\n                          id=\" customCheckLogin\"\r\n                          type=\"checkbox\"\r\n                          checked={rememberMe}\r\n                          value={true}\r\n                          onChange={(e) => {\r\n                            setRememberMe(e.target.checked);\r\n                          }}\r\n                        />\r\n                        <label\r\n                          className=\"custom-control-label\"\r\n                          htmlFor=\" customCheckLogin\"\r\n                        >\r\n                          <span className=\"text-muted\">Ingatkan saya</span>\r\n                        </label>\r\n                      </div>\r\n                    </Col>\r\n                    <Col md={6} style={{ textAlign: \"right\" }}>\r\n                      <a className=\"text-light\" onClick={toggle}>\r\n                        <small>Lupa Kata Sandi?</small>\r\n                      </a>\r\n                    </Col>\r\n                    <Modal\r\n                      isOpen={modal}\r\n                      toggle={toggle}\r\n                      style={{ textAlign: \"center\" }}\r\n                    >\r\n                      <ModalBody>\r\n                        <img\r\n                          alt=\"login\"\r\n                          style={{ width: \"24%\", marginBottom: \"15px\" }}\r\n                          src={require(\"assets/img/brand/Hokky1.png\").default}\r\n                        />\r\n                        <h3>Lupa Kata Sandi ?</h3>\r\n                        <p>\r\n                          Enter email address and we will send you instructions\r\n                          to reset Password.\r\n                        </p>\r\n                        <AvGroup className=\"input-group\">\r\n                          <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>\r\n                              <i className=\"ni ni-email-83\" />\r\n                            </InputGroupText>\r\n                          </InputGroupAddon>\r\n                          <Input\r\n                            placeholder=\"Masukan Email / Username\"\r\n                            value={resetEmail}\r\n                            invalid={resetEmailError === \"invalid\"}\r\n                            onChange={(e) => {\r\n                              setResetEmail(e.target.value);\r\n                              if (e.target.value !== \"\") {\r\n                                setResetEmailError(\"\");\r\n                              }\r\n                            }}\r\n                          />\r\n                          <FormFeedback>\r\n                            Email atau Username tidak boleh kosong\r\n                          </FormFeedback>\r\n                        </AvGroup>\r\n                        <div classname=\"text-center\">\r\n                          {!isLoading && (\r\n                            <Button\r\n                              onClick={handleSubmitForgotPassword}\r\n                              type=\"button\"\r\n                              color=\"primary\"\r\n                            >\r\n                              Send\r\n                            </Button>\r\n                          )}\r\n                          {isLoading && (\r\n                            <Button color=\"primary\" disabled>\r\n                              <i className=\"fas fa-spinner fa-spin\"></i>\r\n                              {\"\"}\r\n                              Loading...\r\n                            </Button>\r\n                          )}\r\n                        </div>\r\n                      </ModalBody>\r\n                    </Modal>\r\n                  </Row>\r\n                  <div id={containerId} className=\"g-recaptcha\" />\r\n                  <div className=\"text-center\">\r\n                    {/* <Button className=\"my-4\" disabled={!captchaResponse} color=\"info\" type=\"submit\"> */}\r\n                    <Button className=\"my-4\" color=\"info\" type=\"submit\">\r\n                      Masuk\r\n                    </Button>\r\n                  </div>\r\n                </AvForm>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard PRO React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-pro-react\r\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\n/*eslint-disable*/\r\nimport React from \"react\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// reactstrap components\r\nimport { Breadcrumb, BreadcrumbItem, Container, Row, Col } from \"reactstrap\";\r\n\r\nfunction TimelineHeader({ name, parentName }) {\r\n  return (\r\n    <>\r\n      <div className=\"header header-dark bg-info pb-6 content__title content__title--calendar\">\r\n        <Container fluid>\r\n          <div className=\"header-body\">\r\n            <Row className=\"align-items-center py-4\">\r\n              <Col lg=\"6\" xs=\"7\">\r\n                <h6 className=\"fullcalendar-title h2 text-white d-inline-block mb-0\">\r\n                  {name}\r\n                </h6>{\" \"}\r\n                <Breadcrumb\r\n                  className=\"d-none d-md-inline-block ml-lg-4\"\r\n                  listClassName=\"breadcrumb-links breadcrumb-dark\"\r\n                >\r\n                  <BreadcrumbItem>\r\n                    <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\r\n                      <i className=\"fas fa-home\" />\r\n                    </a>\r\n                  </BreadcrumbItem>\r\n                  <BreadcrumbItem>\r\n                    <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\r\n                      {parentName}\r\n                    </a>\r\n                  </BreadcrumbItem>\r\n                  <BreadcrumbItem aria-current=\"page\" className=\"active\">\r\n                    {name}\r\n                  </BreadcrumbItem>\r\n                </Breadcrumb>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nTimelineHeader.propTypes = {\r\n  name: PropTypes.string,\r\n  parentName: PropTypes.string,\r\n};\r\n\r\nexport default TimelineHeader;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  CardBody,\r\n  CardHeader,\r\n  UncontrolledTooltip,\r\n  ButtonGroup,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\n\r\nconst Privileges = () => {\r\n  const token = localStorage.token;\r\n  const headers = {\r\n    \"Content-Type\": \"application/json\",\r\n    Authorization: `Bearer ${token}`,\r\n  };\r\n  const redirectPrefix = `/admin/privileges/edit/`;\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allPricelegesReturn, setAllPricelegesReturn] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort);\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const updateDataTable = (page, perPage, sort) => {\r\n    getPricelegesReturn(page, perPage, sort);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n  };\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`;\r\n      updateDataTable(page, perPage, sort);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPricelegesReturn(page, perPage, currentSort);\r\n  }, [currentSort, page, perPage]);\r\n\r\n  const getPricelegesReturn = (page, perPage, currentSort) => {\r\n    let filter = { page: page, per_page: perPage };\r\n    const data = filter;\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/users/privileges`, data, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setAllPricelegesReturn(data.data.response);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const rowEvents = {\r\n    onDoubleClick: (e, row, rowIndex) => {\r\n      // setHide(false);\r\n      // setSelectedAcquirerId(row.acquirer_id);\r\n      // setSelectAcquirerName(row.acquirer_name);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <h3>List User Privileges</h3>\r\n        </div>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <ToolkitProvider\r\n          rowNumber={rowIndex}\r\n          data={allPricelegesReturn}\r\n          keyField=\"id\"\r\n          columns={[\r\n            {\r\n              dataField: \"no\",\r\n              text: \"#\",\r\n              sort: true,\r\n              page: 1,\r\n              formatter: (cell, row, index) => {\r\n                let currentRow = ++index;\r\n                return currentRow + rowIndex;\r\n              },\r\n            },\r\n            {\r\n              dataField: \"username\",\r\n              text: \"User Name\",\r\n              sort: true,\r\n            },\r\n            {\r\n              dataField: \"create\",\r\n              text: \"Create\",\r\n              sort: true,\r\n            },\r\n            {\r\n              dataField: \"read\",\r\n              text: \"Read\",\r\n              sort: true,\r\n            },\r\n            {\r\n              dataField: \"update\",\r\n              text: \"Update\",\r\n              sort: true,\r\n            },\r\n            {\r\n              dataField: \"delete\",\r\n              text: \"Delete\",\r\n              sort: true,\r\n            },\r\n            {\r\n              dataField: \"change_password\",\r\n              text: \"Change_password\",\r\n              sort: true,\r\n            },\r\n            {\r\n              dataField: \"cetak\",\r\n              text: \"Cetak\",\r\n              sort: true,\r\n            },\r\n            {\r\n              dataField: \"\",\r\n              text: \"\",\r\n              formatter: (cell, row, index) => {\r\n                return (\r\n                  <ButtonGroup>\r\n                    <Button>\r\n                      <Link\r\n                        to={{\r\n                          pathname: redirectPrefix + row.id,\r\n                          state: row,\r\n                        }}\r\n                        id={\"tooltip_\" + row.id}\r\n                      >\r\n                        <i className=\"fas fa-user-edit\" />\r\n                      </Link>\r\n                    </Button>\r\n                    <UncontrolledTooltip delay={0} target={\"tooltip_\" + row.id}>\r\n                      Edit\r\n                    </UncontrolledTooltip>\r\n                  </ButtonGroup>\r\n                );\r\n              },\r\n            },\r\n          ]}\r\n        >\r\n          {(props) => (\r\n            <div className=\"py-4 table-responsive\">\r\n              <BootstrapTable\r\n                remote\r\n                {...props.baseProps}\r\n                bootstrap4={true}\r\n                bordered={false}\r\n                hover={true}\r\n                rowEvents={rowEvents}\r\n                pagination={paginationFactory({\r\n                  ...paginationOption,\r\n                })}\r\n                onTableChange={handleTableChange}\r\n              />\r\n            </div>\r\n          )}\r\n        </ToolkitProvider>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Privileges;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  CardBody,\r\n  CardHeader,\r\n  Container,\r\n  UncontrolledTooltip,\r\n  ButtonGroup,\r\n  Collapse,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\nimport axios from 'axios';\r\nimport SimpleHeader from 'components/Headers/SimpleHeader.js';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport Privilages from './privileges/Index';\r\n\r\nconst Users = (props) => {\r\n  const token = localStorage.token;\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  const [allUser, setAllUser] = useState([]);\r\n  const redirectPrefix = `/admin/user/edit/`;\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [hide, setHide] = useState(true);\r\n  const [selectAcquirerId, setSelectedAcquirerId] = useState(0);\r\n  const [selectAcquirerName, setSelectAcquirerName] = useState('');\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n\r\n  const [name, setName] = useState('');\r\n  const [username, setUsername] = useState('');\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState('');\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, name, username);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{' '}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort);\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{' '}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const updateDataTable = (page, perPage, sort, name, username) => {\r\n    getUsers(page, perPage, sort, name, username);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setName(name);\r\n    setUsername(username);\r\n  };\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === 'sort') {\r\n      let sort = `${sortField} ${sortOrder}`;\r\n      updateDataTable(page, perPage, sort, name, username);\r\n    }\r\n  };\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUsers(page, perPage, currentSort, '', '');\r\n  }, []);\r\n\r\n  const getUsers = (\r\n    page,\r\n    perPage,\r\n    currentSort,\r\n    name = null,\r\n    username = null\r\n  ) => {\r\n    let filter = { page: page, per_page: perPage };\r\n    if (name !== null) {\r\n      filter = Object.assign(filter, { name: name });\r\n    }\r\n    if (username !== null) {\r\n      filter = Object.assign(filter, { username: username });\r\n    }\r\n    const data = filter;\r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/users`, data, { headers })\r\n      .then((data) => {\r\n        setAllUser(data.data.response);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const delateAcquirer = (id) => {\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/user/delete/${id}`, null, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then(function (response) {\r\n        setSuccessAlert();\r\n        getAllAquirer();\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const setSuccessAlert = () => {\r\n    setAlert(\r\n      <SweetAlert\r\n        success\r\n        showConfirm\r\n        confirmBtnText=\"Ok\"\r\n        title=\"Acquirer deleted\"\r\n        onCancel={hideAlert}\r\n        onConfirm={hideAlert}\r\n      />\r\n    );\r\n  };\r\n\r\n  const setQuestionAlert = (id) => {\r\n    setAlert(\r\n      <SweetAlert\r\n        warning\r\n        showCancel\r\n        confirmBtnText=\"Yes\"\r\n        confirmBtnBsStyle=\"danger\"\r\n        title=\"Are you sure?\"\r\n        onConfirm={() => delateAcquirer(id)}\r\n        onCancel={hideAlert}\r\n        focusCancelBtn\r\n      />\r\n    );\r\n  };\r\n\r\n  const hideAlert = () => {\r\n    setAlert(null);\r\n  };\r\n\r\n  const rowEvents = {\r\n    onDoubleClick: (e, row, rowIndex) => {\r\n      setHide(false);\r\n      setSelectedAcquirerId(row.id);\r\n      setSelectAcquirerName(row.acquirer_name);\r\n    },\r\n  };\r\n\r\n  const reset = () => {\r\n    setUsername('');\r\n    setName('');\r\n    updateDataTable(1, perPage, currentSort, '', '');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {alert}\r\n      <SimpleHeader name=\"User\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Nav tabs>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '1' })}\r\n                      onClick={() => {\r\n                        toggle('1');\r\n                      }}\r\n                    >\r\n                      Users\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '2' })}\r\n                      onClick={() => {\r\n                        toggle('2');\r\n                      }}\r\n                    >\r\n                      Privileges\r\n                    </NavLink>\r\n                  </NavItem>\r\n                </Nav>\r\n                <TabContent activeTab={activeTab}>\r\n                  <TabPane tabId=\"1\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <Card>\r\n                          <CardHeader>\r\n                            <div\r\n                              style={{\r\n                                display: 'flex',\r\n                                justifyContent: 'space-between',\r\n                              }}\r\n                            >\r\n                              <h3>List User</h3>\r\n                              <div style={{ textAlign: 'right' }}>\r\n                                <Link\r\n                                  className=\"btn btn-info\"\r\n                                  to=\"/admin/user/create\"\r\n                                >\r\n                                  Add\r\n                                </Link>\r\n                              </div>\r\n                            </div>\r\n                          </CardHeader>\r\n                          <CardBody>\r\n                            <h3 onClick={toggleOpen}>\r\n                              Filter &nbsp;\r\n                              {isOpen === true ? (\r\n                                <i\r\n                                  className=\"fa fa-angle-down\"\r\n                                  aria-hidden=\"true\"\r\n                                ></i>\r\n                              ) : (\r\n                                <i\r\n                                  className=\"fa fa-angle-right\"\r\n                                  aria-hidden=\"true\"\r\n                                ></i>\r\n                              )}\r\n                            </h3>\r\n                            <Collapse isOpen={isOpen}>\r\n                              <Form>\r\n                                <Row md=\"12\">\r\n                                  <Col md=\"3\">\r\n                                    <FormGroup>\r\n                                      <Label htmlFor=\"exampleFormControlSelect3\">\r\n                                        Nama\r\n                                      </Label>\r\n                                      <Input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Masukan Nama\"\r\n                                        value={name}\r\n                                        onChange={(e) =>\r\n                                          updateDataTable(\r\n                                            1,\r\n                                            perPage,\r\n                                            currentSort,\r\n                                            e.target.value,\r\n                                            username\r\n                                          )\r\n                                        }\r\n                                      />\r\n                                    </FormGroup>\r\n                                  </Col>\r\n                                  <Col md=\"3\">\r\n                                    <FormGroup>\r\n                                      <Label htmlFor=\"exampleFormControlSelect3\">\r\n                                        Username\r\n                                      </Label>\r\n                                      <Input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Masukan Username\"\r\n                                        value={username}\r\n                                        onChange={(e) =>\r\n                                          updateDataTable(\r\n                                            1,\r\n                                            perPage,\r\n                                            currentSort,\r\n                                            name,\r\n                                            e.target.value\r\n                                          )\r\n                                        }\r\n                                      />\r\n                                    </FormGroup>\r\n                                  </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                  <Col>\r\n                                    <Button\r\n                                      type=\"button\"\r\n                                      onClick={reset}\r\n                                      color=\"secondary\"\r\n                                    >\r\n                                      Reset\r\n                                    </Button>\r\n                                  </Col>\r\n                                </Row>\r\n                              </Form>\r\n                            </Collapse>\r\n                            <ToolkitProvider\r\n                              rowNumber={rowIndex}\r\n                              data={allUser}\r\n                              keyField=\"id\"\r\n                              columns={[\r\n                                {\r\n                                  dataField: 'no',\r\n                                  text: '#',\r\n                                  sort: true,\r\n                                  page: 1,\r\n                                  formatter: (cell, row, index) => {\r\n                                    let currentRow = ++index;\r\n                                    return currentRow + rowIndex;\r\n                                  },\r\n                                },\r\n                                {\r\n                                  dataField: 'username',\r\n                                  text: 'User Name',\r\n                                  sort: true,\r\n                                },\r\n                                {\r\n                                  dataField: 'name',\r\n                                  text: 'Name',\r\n                                  sort: true,\r\n                                },\r\n                                {\r\n                                  dataField: 'email',\r\n                                  text: 'Email',\r\n                                  sort: true,\r\n                                },\r\n                                {\r\n                                  dataField: '',\r\n                                  text: '',\r\n                                  formatter: (cell, row, index) => {\r\n                                    return (\r\n                                      <ButtonGroup>\r\n                                        <Button>\r\n                                          <Link\r\n                                            to={redirectPrefix + row.id}\r\n                                            id={'tooltip_' + row.id}\r\n                                          >\r\n                                            <i className=\"fas fa-user-edit\" />\r\n                                          </Link>\r\n                                        </Button>\r\n                                        <UncontrolledTooltip\r\n                                          delay={0}\r\n                                          target={'tooltip_' + row.id}\r\n                                        >\r\n                                          Edit\r\n                                        </UncontrolledTooltip>\r\n                                        <Button\r\n                                          id=\"btn-acquirer\"\r\n                                          onClick={() =>\r\n                                            setQuestionAlert(row.id)\r\n                                          }\r\n                                        >\r\n                                          <i className=\"fas fa-trash\" />\r\n                                        </Button>\r\n                                        <UncontrolledTooltip\r\n                                          delay={0}\r\n                                          placement=\"top\"\r\n                                          target=\"btn-acquirer\"\r\n                                        >\r\n                                          Delete Acquirer\r\n                                        </UncontrolledTooltip>\r\n                                      </ButtonGroup>\r\n                                    );\r\n                                  },\r\n                                },\r\n                              ]}\r\n                            >\r\n                              {(props) => (\r\n                                <div className=\"py-4 table-responsive\">\r\n                                  <BootstrapTable\r\n                                    remote\r\n                                    {...props.baseProps}\r\n                                    bootstrap4={true}\r\n                                    bordered={false}\r\n                                    hover={true}\r\n                                    rowEvents={rowEvents}\r\n                                    pagination={paginationFactory({\r\n                                      ...paginationOption,\r\n                                    })}\r\n                                    onTableChange={handleTableChange}\r\n                                  />\r\n                                </div>\r\n                              )}\r\n                            </ToolkitProvider>\r\n                          </CardBody>\r\n                        </Card>\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                  <TabPane tabId=\"2\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <Privilages />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                </TabContent>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nconst Edit = (props) => {\r\n  const token = localStorage.token;\r\n  const headers = {\r\n    \"Content-Type\": \"application/json\",\r\n    Authorization: `Bearer ${token}`,\r\n  };\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [payload, setPayload] = useState({});\r\n  const dataInput = [\r\n    { label: \"Create\", key: \"create\" },\r\n    { label: \"Read\", key: \"read\" },\r\n    { label: \"Update\", key: \"update\" },\r\n    { label: \"Delete\", key: \"delete\" },\r\n    { label: \"Change Password\", key: \"change_password\" },\r\n    { label: \"Cetak\", key: \"cetak\" },\r\n  ];\r\n  const validateForm = () => {\r\n    let error = false;\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPayload(props?.location?.state);\r\n  }, []);\r\n\r\n  const onInputChange = (type, val) => {\r\n    setPayload((prevState) => ({\r\n      ...prevState,\r\n      [type]: val,\r\n    }));\r\n  };\r\n\r\n  const updatePrivileges = async () => {\r\n    setLoading(true);\r\n    await axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/users/privileges/update/${payload.id}`,\r\n        payload,\r\n        {\r\n          headers,\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setLoading(false);\r\n        if (response.data.error?.error_code > 200) {\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Gagal\",\r\n            text: \"Maaf, Data Privilager gagal di simpan\",\r\n          });\r\n        } else {\r\n          history.push(\"/admin/user\");\r\n        }\r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      updatePrivileges();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Edit Privileges\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <CardHeader>\r\n                    <h3>Edit Privileges</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label className=\"form-control-label\">Username</Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        value={payload?.username || \"\"}\r\n                      />\r\n                    </FormGroup>\r\n                    {dataInput.map((e) => {\r\n                      return (\r\n                        <FormGroup key={e.key}>\r\n                          <Label\r\n                            className=\"form-control-label\"\r\n                            htmlFor=\"exampleFormControlSelect3\"\r\n                          >\r\n                            {e.label}\r\n                          </Label>\r\n                          <Row>\r\n                            <Col>\r\n                              <div style={{ display: \"flex\" }}>\r\n                                <div className=\"custom-control custom-radio mb-3\">\r\n                                  <Input\r\n                                    className=\"custom-control-input\"\r\n                                    id={`${e.key}1`}\r\n                                    name={e.key}\r\n                                    type=\"radio\"\r\n                                    value={\"YES\"}\r\n                                    checked={payload?.[e.key] === \"YES\"}\r\n                                    onChange={() => {\r\n                                      onInputChange(e.key, \"YES\");\r\n                                    }}\r\n                                  />\r\n                                  <Label\r\n                                    className=\"custom-control-label\"\r\n                                    htmlFor={`${e.key}1`}\r\n                                  >\r\n                                    Yes\r\n                                  </Label>\r\n                                </div>\r\n                                <div\r\n                                  className=\"custom-control custom-radio mb-3\"\r\n                                  style={{ marginLeft: \"20px\" }}\r\n                                >\r\n                                  <Input\r\n                                    className=\"custom-control-input\"\r\n                                    id={`${e.key}2`}\r\n                                    name={e.key}\r\n                                    type=\"radio\"\r\n                                    value={\"NO\"}\r\n                                    checked={payload?.[e.key] === \"NO\"}\r\n                                    onChange={() => {\r\n                                      onInputChange(e.key, \"NO\");\r\n                                    }}\r\n                                  />\r\n                                  <Label\r\n                                    className=\"custom-control-label\"\r\n                                    htmlFor={`${e.key}2`}\r\n                                  >\r\n                                    No\r\n                                  </Label>\r\n                                </div>\r\n                              </div>\r\n                            </Col>\r\n                          </Row>\r\n                        </FormGroup>\r\n                      );\r\n                    })}\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        Simpan\r\n                      </Button>\r\n                    )}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {\"\"}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/user\">\r\n                      Kembali\r\n                    </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Edit;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, Row, Col, CardBody, CardHeader, Container, UncontrolledTooltip, ButtonGroup, Collapse, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\n\r\nconst Address = (props) => {\r\n  const token = localStorage.token;\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  const redirectPrefix = `/admin/alamat/edit/`;\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allAddress, setAllAddress] = useState([]);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n\r\n  const [province, setProvince] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [npwp, setNpwp] = useState(\"\");\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, province, city, address, phoneNumber, npwp);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort, province, city, address, phoneNumber, npwp) => {\r\n    getAddress(page, perPage,sort, province, city, address, phoneNumber, npwp);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setProvince(province);\r\n    setCity(city);\r\n    setAddress(address);\r\n    setPhoneNumber(phoneNumber);\r\n    setNpwp(npwp);\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort, province, city, address, phoneNumber, npwp)\r\n    }\r\n  }\r\n\r\n  const toggle = tab => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAddress(page, perPage, currentSort, \"\", \"\", \"\", \"\", \"\");\r\n  }, []);\r\n\r\n  const getAddress = (page, perPage, currentSort, province = null, city = null, address = null, phone = null, npwp = null) => {\r\n    let filter = { page: page, per_page: perPage }\r\n    if (province !== null) {\r\n      filter = Object.assign(filter, { province: province })\r\n    }\r\n    if (city !== null) {\r\n      filter = Object.assign(filter, { city: city })\r\n    }\r\n    if (address !== null) {\r\n      filter = Object.assign(filter, { address: address })\r\n    }\r\n    if (phone !== null) {\r\n      filter = Object.assign(filter, { phone: phone })\r\n    }\r\n    if (npwp !== null) {\r\n      filter = Object.assign(filter, { npwp: npwp })\r\n    }\r\n    const data = filter;\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/address`, data, { headers\r\n    })\r\n    .then(data => {\r\n        setAllAddress(data.data.response);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const delateAddress = (id) => {\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/address/delete/${id}`, null, {\r\n\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        setSuccessAlert();\r\n        getAddress();\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const setSuccessAlert = () => {\r\n    setAlert(\r\n      <SweetAlert\r\n        success\r\n        showConfirm\r\n        confirmBtnText=\"Ok\"\r\n        title=\"Alamat deleted\"\r\n        onCancel={hideAlert}\r\n        onConfirm={hideAlert}\r\n      />\r\n    )\r\n  }\r\n\r\n  const setQuestionAlert = (id) => {\r\n    setAlert(\r\n      <SweetAlert\r\n        warning\r\n        showCancel\r\n        confirmBtnText=\"Yes\"\r\n        confirmBtnBsStyle=\"danger\"\r\n        title=\"Are you sure?\"\r\n        onConfirm={() => delateAddress(id)}\r\n        onCancel={hideAlert}\r\n        focusCancelBtn\r\n      />\r\n    )\r\n  }\r\n\r\n  const hideAlert = () => {\r\n    setAlert(null);\r\n  }\r\n\r\n  const rowEvents = {\r\n    onDoubleClick: (e, row, rowIndex) => {\r\n      setHide(false);\r\n      setSelectedAcquirerId(row.acquirer_id);\r\n      setSelectAcquirerName(row.acquirer_name);\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setProvince(\"\");\r\n    setCity(\"\");\r\n    setAddress(\"\");\r\n    setPhoneNumber(\"\");\r\n    setNpwp(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\", \"\", \"\", \"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {alert}\r\n      <SimpleHeader name=\"Alamat\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>List Alamat</h3>\r\n                  <div style={{ textAlign: \"right\" }}>\r\n                    <Link className=\"btn btn-info\" to=\"/admin/alamat/create\">\r\n                      Add\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n              <h3 onClick={toggleOpen} >Filter &nbsp;\r\n                  {\r\n                    isOpen === true ? <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i> : <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  }\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                      <Form>\r\n                        <Row md=\"12\">\r\n                          <Col md=\"4\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Province</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Province\"\r\n                                value={province}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, e.target.value, city, address, phoneNumber, npwp)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"4\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Kota</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Kota\"\r\n                                value={city}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, province, e.target.value, address, phoneNumber, npwp)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"4\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Alamat</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Alamat\"\r\n                                value={address}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, province, city, e.target.value, phoneNumber, npwp)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row md=\"12\">\r\n                          <Col md=\"4\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Phone Number</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Phone Number\"\r\n                                value={phoneNumber}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, province, city, address, e.target.value, npwp)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"4\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">NPWP</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan NPWP\"\r\n                                value={npwp}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, province, city, address, phoneNumber, e.target.value)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Button type=\"button\" onClick={reset} color=\"secondary\">Reset</Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Collapse>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allAddress}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      }\r\n                    },\r\n                    {\r\n                      dataField: \"province_name\",\r\n                      text: \"Provice\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                        dataField: \"city_name\",\r\n                        text: \"Kota\",\r\n                        sort: true,\r\n                      },\r\n                      {\r\n                        dataField: \"address\",\r\n                        text: \"Alamat\",\r\n                        sort: true,\r\n                      },\r\n                      {\r\n                        dataField: \"phone\",\r\n                        text: \"Phone Number\",\r\n                        sort: true,\r\n                      },\r\n                      {\r\n                        dataField: \"fax\",\r\n                        text: \"Fax\",\r\n                        sort: true,\r\n                      },\r\n                    {\r\n                      dataField: \"\", text: \"\", formatter: (cell, row, index) => {\r\n                        return (\r\n                          <ButtonGroup>\r\n                            <Button>\r\n                              <Link\r\n                                to={redirectPrefix + row.id}\r\n                                id={\"tooltip_\" + row.id}\r\n                              >\r\n                                <i className=\"fas fa-user-edit\" />\r\n                              </Link>\r\n                            </Button>\r\n                            <UncontrolledTooltip delay={0} target={\"tooltip_\" + row.id}>\r\n                              Edit\r\n                            </UncontrolledTooltip>\r\n                            <Button\r\n                              id=\"btn-acquirer\"\r\n                              onClick={() => setQuestionAlert(row.id)}\r\n                            >\r\n                              <i className=\"fas fa-trash\" />\r\n                            </Button>\r\n                            <UncontrolledTooltip\r\n                              delay={0}\r\n                              placement=\"top\"\r\n                              target=\"btn-acquirer\"\r\n                            >\r\n                              Delete Alamat\r\n                            </UncontrolledTooltip>\r\n                          </ButtonGroup>\r\n                        )\r\n                      }\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        rowEvents={rowEvents}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Address;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, Row, Col, CardBody, CardHeader, Container, UncontrolledTooltip, ButtonGroup } from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\n\r\nconst Account = () => {\r\n  const token = localStorage.token;\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  const redirectPrefix = `/admin/account/edit/`;\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n\r\n  const [allAccount, setAllAccount] = useState([]);\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort) => {\r\n    getAccount(page, perPage,sort);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort)\r\n    }\r\n  }\r\n\r\n  const toggle = tab => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAccount();\r\n  }, []);\r\n\r\n  const getAccount = () => {\r\n    const data = { page: page, per_page: perPage };\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/account`, data, { headers\r\n    })\r\n    .then(data => {\r\n        setAllAccount(data.data.response);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const delateAddress = (id) => {\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/account/delete/${id}`, null, {\r\n\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        setSuccessAlert();\r\n        getAccount();\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const setSuccessAlert = () => {\r\n    setAlert(\r\n      <SweetAlert\r\n        success\r\n        showConfirm\r\n        confirmBtnText=\"Ok\"\r\n        title=\"Account deleted\"\r\n        onCancel={hideAlert}\r\n        onConfirm={hideAlert}\r\n      />\r\n    )\r\n  }\r\n\r\n  const setQuestionAlert = (id) => {\r\n    setAlert(\r\n      <SweetAlert\r\n        warning\r\n        showCancel\r\n        confirmBtnText=\"Yes\"\r\n        confirmBtnBsStyle=\"danger\"\r\n        title=\"Are you sure?\"\r\n        onConfirm={() => delateAddress(id)}\r\n        onCancel={hideAlert}\r\n        focusCancelBtn\r\n      />\r\n    )\r\n  }\r\n\r\n  const hideAlert = () => {\r\n    setAlert(null);\r\n  }\r\n\r\n  const rowEvents = {\r\n    onDoubleClick: (e, row, rowIndex) => {\r\n      setHide(false);\r\n      setSelectedAcquirerId(row.acquirer_id);\r\n      setSelectAcquirerName(row.acquirer_name);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {alert}\r\n      <SimpleHeader name=\"Account\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>List Account</h3>\r\n                  <div style={{ textAlign: \"right\" }}>\r\n                    <Link className=\"btn btn-info\" to=\"/admin/account/create\">\r\n                      Add\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allAccount}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      }\r\n                    },\r\n                    {\r\n                      dataField: \"account_code\",\r\n                      text: \"Kode Account\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                        dataField: \"account_name\",\r\n                        text: \"Nama Account\",\r\n                        sort: true,\r\n                      },\r\n                      {\r\n                        dataField: \"account_type_id\",\r\n                        text: \"Type Account\",\r\n                        sort: true,\r\n                      },\r\n                    {\r\n                      dataField: \"\", text: \"\", formatter: (cell, row, index) => {\r\n                        return (\r\n                          <ButtonGroup>\r\n                            <Button>\r\n                              <Link\r\n                                to={redirectPrefix + row.id}\r\n                                id={\"tooltip_\" + row.id}\r\n                              >\r\n                                <i className=\"fas fa-user-edit\" />\r\n                              </Link>\r\n                            </Button>\r\n                            <UncontrolledTooltip delay={0} target={\"tooltip_\" + row.id}>\r\n                              Edit\r\n                            </UncontrolledTooltip>\r\n                            <Button\r\n                              id=\"btn-acquirer\"\r\n                              onClick={() => setQuestionAlert(row.id)}\r\n                            >\r\n                              <i className=\"fas fa-trash\" />\r\n                            </Button>\r\n                            <UncontrolledTooltip\r\n                              delay={0}\r\n                              placement=\"top\"\r\n                              target=\"btn-acquirer\"\r\n                            >\r\n                              Delete Alamat\r\n                            </UncontrolledTooltip>\r\n                          </ButtonGroup>\r\n                        )\r\n                      }\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        rowEvents={rowEvents}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Account;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, Row, Col, CardBody, CardHeader, Container, UncontrolledTooltip, ButtonGroup, Collapse, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport moment from \"moment\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\n\r\nconst Asset = (props) => {\r\n  const token = localStorage.token;\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  const redirectPrefix = `/admin/asset/edit/`;\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allAsset, setAllAsset] = useState([]);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n\r\n  const [nameAsset, setNameAsset] = useState(\"\");\r\n  const [codeAsset, setCodeAsset] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort,  nameAsset, codeAsset, startDate, endDate);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort, nameAsset, codeAsset, startDate, endDate) => {\r\n    getAsset(page, perPage, sort, nameAsset, codeAsset, startDate, endDate);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setNameAsset(nameAsset);\r\n    setCodeAsset(codeAsset);\r\n    setStartDate(startDate);\r\n    setEndDate(endDate);\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort,  nameAsset, codeAsset, startDate, endDate)\r\n    }\r\n  }\r\n\r\n  const toggle = tab => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAsset(page, perPage, currentSort, \"\", \"\", \"\", \"\", \"\");\r\n  }, []);\r\n\r\n  const getAsset = (page, perPage, currentSort, asset_name = null, asset_code = null, start_date = null, end_date = null) => {\r\n    let filter = { page: page, per_page: perPage }\r\n    if (asset_name !== null) {\r\n      filter = Object.assign(filter, { asset_name: asset_name })\r\n    }\r\n    if (asset_code !== null) {\r\n      filter = Object.assign(filter, { asset_code: asset_code })\r\n    }\r\n    if (start_date !== null) {\r\n      filter = Object.assign(filter, { start_date: start_date })\r\n    }   \r\n    if (end_date !== null) {\r\n      filter = Object.assign(filter, { end_date: end_date })\r\n    }\r\n    const data = filter;\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/asset`, data, { headers\r\n    })\r\n    .then(data => {\r\n        setAllAsset(data.data.response);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const delateAsset = (id) => {\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/asset/delete/${id}`, null, {\r\n\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        setSuccessAlert();\r\n        getAsset();\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const setSuccessAlert = () => {\r\n    setAlert(\r\n      <SweetAlert\r\n        success\r\n        showConfirm\r\n        confirmBtnText=\"Ok\"\r\n        title=\"Asset deleted\"\r\n        onCancel={hideAlert}\r\n        onConfirm={hideAlert}\r\n      />\r\n    )\r\n  }\r\n\r\n  const setQuestionAlert = (id) => {\r\n    setAlert(\r\n      <SweetAlert\r\n        warning\r\n        showCancel\r\n        confirmBtnText=\"Yes\"\r\n        confirmBtnBsStyle=\"danger\"\r\n        title=\"Are you sure?\"\r\n        onConfirm={() => delateAsset(id)}\r\n        onCancel={hideAlert}\r\n        focusCancelBtn\r\n      />\r\n    )\r\n  }\r\n\r\n  const hideAlert = () => {\r\n    setAlert(null);\r\n  }\r\n\r\n  const rowEvents = {\r\n    onDoubleClick: (e, row, rowIndex) => {\r\n      setHide(false);\r\n      setSelectedAcquirerId(row.acquirer_id);\r\n      setSelectAcquirerName(row.acquirer_name);\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setNameAsset(\"\");\r\n    setCodeAsset(\"\");\r\n    setStartDate(\"\");\r\n    setEndDate(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\", \"\", \"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {alert}\r\n      <SimpleHeader name=\"Asset\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>List Asset</h3>\r\n                  <div style={{ textAlign: \"right\" }}>\r\n                    <Link className=\"btn btn-info\" to=\"/admin/asset/create\">\r\n                      Add\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n              <h3 onClick={toggleOpen} >Filter &nbsp;\r\n                  {\r\n                    isOpen === true ? <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i> : <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  }\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                        <Row md=\"12\">\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Nama Asset</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Nama Asset\"\r\n                                value={nameAsset}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, e.target.value, codeAsset, startDate, endDate)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Kode Asset</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Kode Asset\"\r\n                                value={codeAsset}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, nameAsset, e.target.value, startDate, endDate)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Start Date</Label>\r\n                              <Input\r\n                                id=\"example-date-input\"\r\n                                type=\"date\"\r\n                                value={startDate}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, nameAsset, codeAsset, e.target.value, endDate)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">End Date</Label>\r\n                              <Input\r\n                                id=\"example-date-input\"\r\n                                type=\"date\"\r\n                                value={endDate}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, nameAsset, codeAsset, startDate, e.target.value)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Button type=\"button\" onClick={reset} color=\"secondary\">Reset</Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Collapse>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allAsset}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      }\r\n                    },\r\n                    {\r\n                      dataField: \"asset_code\",\r\n                      text: \"Kode Asset\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                        dataField: \"asset_name\",\r\n                        text: \"Nama Asset\",\r\n                        sort: true,\r\n                      },\r\n                      {\r\n                        dataField: \"asset_type\",\r\n                        text: \"Type Asset\",\r\n                        sort: true,\r\n                      },\r\n                      {\r\n                        dataField: \"buying_date\",\r\n                        text: \"Tanggal Beli\",\r\n                        sort: true,\r\n                        formatter: (cell, row) => {\r\n                          return moment(cell).format(\"L\")\r\n                        }\r\n                      },\r\n                      {\r\n                        dataField: \"entered_qty\",\r\n                        text: \"Jumlah\",\r\n                        sort: true,\r\n                      },\r\n                      {\r\n                        dataField: \"note\",\r\n                        text: \"Note\",\r\n                        sort: true,\r\n                      },\r\n                    {\r\n                      dataField: \"\", text: \"\", formatter: (cell, row, index) => {\r\n                        return (\r\n                          <ButtonGroup>\r\n                            <Button>\r\n                              <Link\r\n                                to={redirectPrefix + row.id}\r\n                                id={\"tooltip_\" + row.id}\r\n                              >\r\n                                <i className=\"fas fa-user-edit\" />\r\n                              </Link>\r\n                            </Button>\r\n                            <UncontrolledTooltip delay={0} target={\"tooltip_\" + row.id}>\r\n                              Edit\r\n                            </UncontrolledTooltip>\r\n                            <Button\r\n                              id=\"btn-acquirer\"\r\n                              onClick={() => setQuestionAlert(row.id)}\r\n                            >\r\n                              <i className=\"fas fa-trash\" />\r\n                            </Button>\r\n                            <UncontrolledTooltip\r\n                              delay={0}\r\n                              placement=\"top\"\r\n                              target=\"btn-acquirer\"\r\n                            >\r\n                              Delete Asset\r\n                            </UncontrolledTooltip>\r\n                          </ButtonGroup>\r\n                        )\r\n                      }\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        rowEvents={rowEvents}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Asset;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, Row, Col, CardBody, CardHeader, Container, UncontrolledTooltip, ButtonGroup, Collapse, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport moment from \"moment\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\n\r\nconst TypeAsset = () => {\r\n  const token = localStorage.token;\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  const redirectPrefix = `/admin/type-asset/edit/`;\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allAsset, setAllAsset] = useState([]);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, name);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort, name) => {\r\n    getAsset(page, perPage, sort, name);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setName(name);\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort,  name)\r\n    }\r\n  }\r\n\r\n  const toggle = tab => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAsset(page, perPage, currentSort, \"\");\r\n  }, []);\r\n\r\n  const getAsset = (page, perPage, currentSort, name = null) => {\r\n    let filter = { page: page, per_page: perPage }\r\n    if (name !== null) {\r\n      filter = Object.assign(filter, { name: name })\r\n    }\r\n    const data = filter;\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/asset-type`, data, { headers\r\n    })\r\n    .then(data => {\r\n        setAllAsset(data.data.response);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const delateAsset = (id) => {\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/asset-type/delete/${id}`, null, {\r\n\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        setSuccessAlert();\r\n        getAsset();\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const setSuccessAlert = () => {\r\n    setAlert(\r\n      <SweetAlert\r\n        success\r\n        showConfirm\r\n        confirmBtnText=\"Ok\"\r\n        title=\"Asset deleted\"\r\n        onCancel={hideAlert}\r\n        onConfirm={hideAlert}\r\n      />\r\n    )\r\n  }\r\n\r\n  const setQuestionAlert = (id) => {\r\n    setAlert(\r\n      <SweetAlert\r\n        warning\r\n        showCancel\r\n        confirmBtnText=\"Yes\"\r\n        confirmBtnBsStyle=\"danger\"\r\n        title=\"Are you sure?\"\r\n        onConfirm={() => delateAsset(id)}\r\n        onCancel={hideAlert}\r\n        focusCancelBtn\r\n      />\r\n    )\r\n  }\r\n\r\n  const hideAlert = () => {\r\n    setAlert(null);\r\n  }\r\n\r\n  const rowEvents = {\r\n    onDoubleClick: (e, row, rowIndex) => {\r\n      setHide(false);\r\n      setSelectedAcquirerId(row.acquirer_id);\r\n      setSelectAcquirerName(row.acquirer_name);\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {alert}\r\n      <SimpleHeader name=\"Type Asset\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>List Type Asset</h3>\r\n                  <div style={{ textAlign: \"right\" }}>\r\n                    <Link className=\"btn btn-info\" to=\"/admin/type-asset/create\">\r\n                      Add\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n              <h3 onClick={toggleOpen} >Filter &nbsp;\r\n                  {\r\n                    isOpen === true ? <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i> : <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  }\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                        <Row md=\"12\">\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Nama</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Nama\"\r\n                                value={name}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, e.target.value)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Button type=\"button\" onClick={reset} color=\"secondary\">Reset</Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Collapse>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allAsset}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      }\r\n                    },\r\n                    {\r\n                      dataField: \"name\",\r\n                      text: \"Nama\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"\", text: \"\", formatter: (cell, row, index) => {\r\n                        return (\r\n                          <ButtonGroup>\r\n                            <Button>\r\n                              <Link\r\n                                to={redirectPrefix + row.id}\r\n                                id={\"tooltip_\" + row.id}\r\n                              >\r\n                                <i className=\"fas fa-user-edit\" />\r\n                              </Link>\r\n                            </Button>\r\n                            <UncontrolledTooltip delay={0} target={\"tooltip_\" + row.id}>\r\n                              Edit\r\n                            </UncontrolledTooltip>\r\n                            <Button\r\n                              id=\"btn-acquirer\"\r\n                              onClick={() => setQuestionAlert(row.id)}\r\n                            >\r\n                              <i className=\"fas fa-trash\" />\r\n                            </Button>\r\n                            <UncontrolledTooltip\r\n                              delay={0}\r\n                              placement=\"top\"\r\n                              target=\"btn-acquirer\"\r\n                            >\r\n                              Delete Asset\r\n                            </UncontrolledTooltip>\r\n                          </ButtonGroup>\r\n                        )\r\n                      }\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        rowEvents={rowEvents}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TypeAsset;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  CardBody,\r\n  CardHeader,\r\n  Container,\r\n  UncontrolledTooltip,\r\n  ButtonGroup,\r\n  Collapse,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Absen = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n  const redirectPrefix = `/admin/alamat/edit/`;\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allBarcode, setAllBarcode] = useState([]);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n\r\n  const [barcode, setBarcode] = useState(\"\");\r\n  const [itemName, setItemName] = useState(\"\");\r\n  const [itemCode, setItemCode] = useState(\"\");\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, barcode, itemName, itemCode);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort);\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const updateDataTable = (\r\n    page,\r\n    perPage,\r\n    sort,\r\n    barcode,\r\n    itemName,\r\n    itemCode\r\n  ) => {\r\n    getAddress(page, perPage, sort, barcode, itemName, itemCode);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setBarcode(barcode);\r\n    setItemName(itemName);\r\n    setItemCode(itemCode);\r\n  };\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`;\r\n      updateDataTable(page, perPage, sort, barcode, itemName, itemCode);\r\n    }\r\n  };\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAddress(page, perPage, currentSort, \"\", \"\", \"\");\r\n  }, []);\r\n\r\n  const getAddress = (\r\n    page,\r\n    perPage,\r\n    currentSort,\r\n    barcode = null,\r\n    item_name = null,\r\n    kode_item = null\r\n  ) => {\r\n    let filter = { page: page, per_page: perPage, warehouse_id: warehouse };\r\n    if (barcode !== null) {\r\n      filter = Object.assign(filter, { barcode: barcode });\r\n    }\r\n    if (item_name !== null) {\r\n      filter = Object.assign(filter, { item_name: item_name });\r\n    }\r\n    if (kode_item !== null) {\r\n      filter = Object.assign(filter, { kode_item: kode_item });\r\n    }\r\n    const data = filter;\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/absen/page`, data, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setAllBarcode(data.data.response);\r\n        setPage(data.data.current_page);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const hideAlert = () => {\r\n    setAlert(null);\r\n  };\r\n\r\n  const updateStatus = (id) => {\r\n    let data = {\r\n      status: id,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/absen/update/${id}`, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then(function (response) {\r\n        if (id === 1) {\r\n          toast.dark(\"Hey 👋, Confirmed Success!\");\r\n        } else {\r\n          toast.error(\"Hey 👋, Rejected Success!\");\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  // const reset = () => {\r\n  //   setBarcode(\"\");\r\n  //   setItemName(\"\");\r\n  //   setItemCode(\"\");\r\n  //   updateDataTable(1, perPage, currentSort, \"\", \"\", \"\");\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      {alert}\r\n      <SimpleHeader name=\"Absen\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <h3>List Absen</h3>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                {/* <h3 onClick={toggleOpen}>\r\n                  Filter &nbsp;\r\n                  {isOpen === true ? (\r\n                    <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\r\n                  ) : (\r\n                    <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  )}\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                    <Row md=\"12\">\r\n                      <Col md=\"4\">\r\n                        <FormGroup>\r\n                          <Label htmlFor=\"exampleFormControlSelect3\">\r\n                            Barcode\r\n                          </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            placeholder=\"Masukan Barcode\"\r\n                            value={barcode}\r\n                            onChange={(e) =>\r\n                              updateDataTable(\r\n                                1,\r\n                                perPage,\r\n                                currentSort,\r\n                                e.target.value,\r\n                                itemName,\r\n                                itemCode\r\n                              )\r\n                            }\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"4\">\r\n                        <FormGroup>\r\n                          <Label htmlFor=\"exampleFormControlSelect3\">\r\n                            Nama Item\r\n                          </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            placeholder=\"Masukan Nama Item\"\r\n                            value={itemName}\r\n                            onChange={(e) =>\r\n                              updateDataTable(\r\n                                1,\r\n                                perPage,\r\n                                currentSort,\r\n                                barcode,\r\n                                e.target.value,\r\n                                itemCode\r\n                              )\r\n                            }\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"4\">\r\n                        <FormGroup>\r\n                          <Label htmlFor=\"exampleFormControlSelect3\">\r\n                            Kode Item\r\n                          </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            placeholder=\"Masukan Kode Item\"\r\n                            value={itemCode}\r\n                            onChange={(e) =>\r\n                              updateDataTable(\r\n                                1,\r\n                                perPage,\r\n                                currentSort,\r\n                                barcode,\r\n                                itemName,\r\n                                e.target.value\r\n                              )\r\n                            }\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>\r\n                        <Button type=\"button\" onClick={reset} color=\"secondary\">\r\n                          Reset\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                </Collapse> */}\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allBarcode}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: \"image\",\r\n                      text: \"Foto\",\r\n                      sort: true,\r\n                      formatter: (cell, row) => {\r\n                        return (\r\n                          <React.Fragment>\r\n                            <img style={{ width: \"50px\" }} src={cell} />\r\n                          </React.Fragment>\r\n                        );\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: \"name\",\r\n                      text: \"Nama\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"address\",\r\n                      text: \"Alamat\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"tgl_absen\",\r\n                      text: \"Tanggal Absen\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"check_in\",\r\n                      text: \"Masuk\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"check_out\",\r\n                      text: \"Keluar\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"\",\r\n                      text: \"\",\r\n                      formatter: (cell, row, index) => {\r\n                        return (\r\n                          <ButtonGroup>\r\n                            <Button\r\n                              id=\"btn-confirmed\"\r\n                              onClick={() => updateStatus(1)}\r\n                            >\r\n                              <i\r\n                                className=\"fas fa-check\"\r\n                                style={{ color: \"#008000\" }}\r\n                              />\r\n                            </Button>\r\n                            <UncontrolledTooltip\r\n                              delay={0}\r\n                              placement=\"top\"\r\n                              target=\"btn-confirmed\"\r\n                            >\r\n                              Confirmed\r\n                            </UncontrolledTooltip>\r\n                            <Button\r\n                              id=\"btn-rejected\"\r\n                              onClick={() => updateStatus(2)}\r\n                            >\r\n                              <i\r\n                                className=\"fa fa-times\"\r\n                                style={{ color: \"red\" }}\r\n                              />\r\n                            </Button>\r\n                            <UncontrolledTooltip\r\n                              delay={0}\r\n                              placement=\"top\"\r\n                              target=\"btn-rejected\"\r\n                            >\r\n                              Rejected\r\n                            </UncontrolledTooltip>\r\n                          </ButtonGroup>\r\n                        );\r\n                      },\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Absen;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, Row, Col, CardBody, CardHeader, Container, UncontrolledTooltip, ButtonGroup, Collapse, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport moment from \"moment\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\n\r\nconst Departemen = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  const redirectPrefix = `/admin/departemen/edit/`;\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allDepartemen, setAllDepartemen] = useState([]);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n\r\n  const [nameDepartment, setNameDepartment] = useState(\"\");\r\n  const [codeDepartment, setCodeDepartment] = useState(\"\");\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, nameDepartment, codeDepartment);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort, nameDepartment, codeDepartment) => {\r\n    getDepartemen(page, perPage, sort, nameDepartment, codeDepartment);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setNameDepartment(nameDepartment);\r\n    setCodeDepartment(codeDepartment);\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort,  nameDepartment, codeDepartment)\r\n    }\r\n  }\r\n\r\n  const toggle = tab => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getDepartemen(page, perPage, currentSort, \"\", \"\");\r\n  }, []);\r\n\r\n  const getDepartemen = async (page, perPage, currentSort, department_name = null, department_code = null) => {\r\n    let filter = { page: page, per_page: perPage, id_warehouse: parseInt(warehouse) }\r\n    if (department_name !== null) {\r\n      filter = Object.assign(filter, { department_name: department_name })\r\n    }\r\n    if (department_code !== null) {\r\n        filter = Object.assign(filter, { department_code: department_code })\r\n      }\r\n    const data = filter;\r\n    const headers = {\r\n      'Authorization': `Bearer ${token}`,\r\n    };\r\n    const res = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/department`, data, { headers })\r\n      setAllDepartemen(res.data.response);\r\n      setPage(res.data.current_page + 1);\r\n      setPerpage(res.data.per_page);\r\n      setTotalItem(res.data.total_item);\r\n    }\r\n\r\n  const delateDepartment = (id) => {\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/department/delete/${id}`, null, {\r\n\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        setSuccessAlert();\r\n        getDepartemen();\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const setSuccessAlert = () => {\r\n    setAlert(\r\n      <SweetAlert\r\n        success\r\n        showConfirm\r\n        confirmBtnText=\"Ok\"\r\n        title=\"Departemen deleted\"\r\n        onCancel={hideAlert}\r\n        onConfirm={hideAlert}\r\n      />\r\n    )\r\n  }\r\n\r\n  const setQuestionAlert = (id) => {\r\n    setAlert(\r\n      <SweetAlert\r\n        warning\r\n        showCancel\r\n        confirmBtnText=\"Yes\"\r\n        confirmBtnBsStyle=\"danger\"\r\n        title=\"Are you sure?\"\r\n        onConfirm={() => delateDepartment(id)}\r\n        onCancel={hideAlert}\r\n        focusCancelBtn\r\n      />\r\n    )\r\n  }\r\n\r\n  const hideAlert = () => {\r\n    setAlert(null);\r\n  }\r\n\r\n  const rowEvents = {\r\n    onDoubleClick: (e, row, rowIndex) => {\r\n      setHide(false);\r\n      setSelectedAcquirerId(row.acquirer_id);\r\n      setSelectAcquirerName(row.acquirer_name);\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setNameDepartment(\"\");\r\n    setCodeDepartment(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {alert}\r\n      <SimpleHeader name=\"Departemen\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>List Departemen</h3>\r\n                  <div style={{ textAlign: \"right\" }}>\r\n                    <Link className=\"btn btn-info\" to=\"/admin/departemen/create\">\r\n                      Add\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n              <h3 onClick={toggleOpen} >Filter &nbsp;\r\n                  {\r\n                    isOpen === true ? <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i> : <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  }\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                        <Row md=\"12\">\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Nama Departemen</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Nama Departemen\"\r\n                                value={nameDepartment}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, e.target.value, codeDepartment)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Kode Departemen</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Kode Departemen\"\r\n                                value={codeDepartment}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, nameDepartment, e.target.value)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Button type=\"button\" onClick={reset} color=\"secondary\">Reset</Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Collapse>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allDepartemen}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      }\r\n                    },\r\n                    {\r\n                      dataField: \"department_name\",\r\n                      text: \"Nama Departemen\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                        dataField: \"department_code\",\r\n                        text: \"Kode Departemen\",\r\n                        sort: true,\r\n                      },\r\n                      {\r\n                        dataField: \"warehouse_address\",\r\n                        text: \"Alamat\",\r\n                        sort: true,\r\n                      },\r\n                    {\r\n                      dataField: \"\", text: \"\", formatter: (cell, row, index) => {\r\n                        return (\r\n                          <ButtonGroup>\r\n                            <Button>\r\n                              <Link\r\n                                to={redirectPrefix + row.id}\r\n                                id={\"tooltip_\" + row.id}\r\n                              >\r\n                                <i className=\"fas fa-user-edit\" />\r\n                              </Link>\r\n                            </Button>\r\n                            <UncontrolledTooltip delay={0} target={\"tooltip_\" + row.id}>\r\n                              Edit\r\n                            </UncontrolledTooltip>\r\n                            <Button\r\n                              id=\"btn-acquirer\"\r\n                              onClick={() => setQuestionAlert(row.id)}\r\n                            >\r\n                              <i className=\"fas fa-trash\" />\r\n                            </Button>\r\n                            <UncontrolledTooltip\r\n                              delay={0}\r\n                              placement=\"top\"\r\n                              target=\"btn-acquirer\"\r\n                            >\r\n                              Delete Departemen\r\n                            </UncontrolledTooltip>\r\n                          </ButtonGroup>\r\n                        )\r\n                      }\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        rowEvents={rowEvents}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Departemen;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, Row, Col, CardBody, CardHeader, Container, UncontrolledTooltip, ButtonGroup, Collapse, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport moment from \"moment\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\n\r\nconst Satuan = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  const redirectPrefix = `/admin/satuan/edit/`;\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allUom, setAllUom] = useState([]);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n\r\n  const [nameDepartment, setNameDepartment] = useState(\"\");\r\n  const [codeDepartment, setCodeDepartment] = useState(\"\");\r\n\r\n  const [uomCode, setUomCode] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, uomCode, description);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort, uomCode, description) => {\r\n    getSatuan(page, perPage, sort, uomCode, description);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setUomCode(uomCode);\r\n    setDescription(description);\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort,  uomCode, description)\r\n    }\r\n  }\r\n\r\n  const toggle = tab => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getSatuan(page, perPage, currentSort, \"\", \"\");\r\n  }, []);\r\n\r\n  const getSatuan = async (page, perPage, currentSort, uom_code = null, description = null) => {\r\n    let filter = { page: page, per_page: perPage }\r\n    if (uom_code !== null) {\r\n      filter = Object.assign(filter, { uom_code: uom_code })\r\n    }\r\n    if (description !== null) {\r\n        filter = Object.assign(filter, { description: description })\r\n      }\r\n    const data = filter;\r\n    const headers = {\r\n      'Authorization': `Bearer ${token}`,\r\n    };\r\n    const res = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/uom`, data, { headers })\r\n      setAllUom(res.data.response);\r\n      setPage(res.data.current_page + 1);\r\n      setPerpage(res.data.per_page);\r\n      setTotalItem(res.data.total_item);\r\n    }\r\n\r\n  const delateSatuan = (id) => {\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/uom/delete/${id}`, null, {\r\n\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        setSuccessAlert();\r\n        getSatuan();\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const setSuccessAlert = () => {\r\n    setAlert(\r\n      <SweetAlert\r\n        success\r\n        showConfirm\r\n        confirmBtnText=\"Ok\"\r\n        title=\"Satuan deleted\"\r\n        onCancel={hideAlert}\r\n        onConfirm={hideAlert}\r\n      />\r\n    )\r\n  }\r\n\r\n  const setQuestionAlert = (id) => {\r\n    setAlert(\r\n      <SweetAlert\r\n        warning\r\n        showCancel\r\n        confirmBtnText=\"Yes\"\r\n        confirmBtnBsStyle=\"danger\"\r\n        title=\"Are you sure?\"\r\n        onConfirm={() => delateSatuan(id)}\r\n        onCancel={hideAlert}\r\n        focusCancelBtn\r\n      />\r\n    )\r\n  }\r\n\r\n  const hideAlert = () => {\r\n    setAlert(null);\r\n  }\r\n\r\n  const rowEvents = {\r\n    onDoubleClick: (e, row, rowIndex) => {\r\n      setHide(false);\r\n      setSelectedAcquirerId(row.acquirer_id);\r\n      setSelectAcquirerName(row.acquirer_name);\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setUomCode(\"\");\r\n    setDescription(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {alert}\r\n      <SimpleHeader name=\"Satuan\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>List Satuan</h3>\r\n                  <div style={{ textAlign: \"right\" }}>\r\n                    <Link className=\"btn btn-info\" to=\"/admin/satuan/create\">\r\n                      Add\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n              <h3 onClick={toggleOpen} >Filter &nbsp;\r\n                  {\r\n                    isOpen === true ? <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i> : <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  }\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                        <Row md=\"12\">\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Kode Uom</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Kode Uom\"\r\n                                value={uomCode}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, e.target.value, description)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Deskripsi</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Deskripsi\"\r\n                                value={description}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, uomCode, e.target.value)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Button type=\"button\" onClick={reset} color=\"secondary\">Reset</Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Collapse>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allUom}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      }\r\n                    },\r\n                    {\r\n                      dataField: \"uom_code\",\r\n                      text: \"Kode Satuan\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                        dataField: \"description\",\r\n                        text: \"Deskripsi\",\r\n                        sort: true,\r\n                      },\r\n                    {\r\n                      dataField: \"\", text: \"\", formatter: (cell, row, index) => {\r\n                        return (\r\n                          <ButtonGroup>\r\n                            <Button>\r\n                              <Link\r\n                                to={redirectPrefix + row.id}\r\n                                id={\"tooltip_\" + row.id}\r\n                              >\r\n                                <i className=\"fas fa-user-edit\" />\r\n                              </Link>\r\n                            </Button>\r\n                            <UncontrolledTooltip delay={0} target={\"tooltip_\" + row.id}>\r\n                              Edit\r\n                            </UncontrolledTooltip>\r\n                            <Button\r\n                              id=\"btn-acquirer\"\r\n                              onClick={() => setQuestionAlert(row.id)}\r\n                            >\r\n                              <i className=\"fas fa-trash\" />\r\n                            </Button>\r\n                            <UncontrolledTooltip\r\n                              delay={0}\r\n                              placement=\"top\"\r\n                              target=\"btn-acquirer\"\r\n                            >\r\n                              Delete Departemen\r\n                            </UncontrolledTooltip>\r\n                          </ButtonGroup>\r\n                        )\r\n                      }\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        rowEvents={rowEvents}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Satuan;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, Row, Col, CardBody, CardHeader, Container, UncontrolledTooltip, ButtonGroup, Collapse, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport moment from \"moment\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\n\r\nconst Customer = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  const redirectPrefix = `/admin/customer/edit/`;\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allCustomer, setAllCustomer] = useState([]);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [codeCustomer, setCodeCustomer] = useState(\"\");\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, name, codeCustomer);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort, name, codeCustomer) => {\r\n    getCustomer(page, perPage, sort, name, codeCustomer);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setName(name);\r\n    setCodeCustomer(codeCustomer);\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort,  name, codeCustomer)\r\n    }\r\n  }\r\n\r\n  const toggle = tab => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCustomer(page, perPage, currentSort, \"\", \"\");\r\n  }, []);\r\n\r\n  const getCustomer = async (page, perPage, currentSort, name = null, customer_code = null) => {\r\n    let filter = { page: page, per_page: perPage }\r\n    if (name !== null) {\r\n      filter = Object.assign(filter, { name: name })\r\n    }\r\n    if (customer_code !== null) {\r\n        filter = Object.assign(filter, { customer_code: customer_code })\r\n      }\r\n    const data = filter;\r\n    const headers = {\r\n      'Authorization': `Bearer ${token}`,\r\n    };\r\n    const res = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/customer`, data, { headers })\r\n      setAllCustomer(res.data.response);\r\n      setPage(res.data.current_page + 1);\r\n      setPerpage(res.data.per_page);\r\n      setTotalItem(res.data.total_item);\r\n    }\r\n\r\n  const delateSatuan = (id) => {\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/customer/delete/${id}`, null, {\r\n\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        setSuccessAlert();\r\n        getCustomer();\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const setSuccessAlert = () => {\r\n    setAlert(\r\n      <SweetAlert\r\n        success\r\n        showConfirm\r\n        confirmBtnText=\"Ok\"\r\n        title=\"Customer deleted\"\r\n        onCancel={hideAlert}\r\n        onConfirm={hideAlert}\r\n      />\r\n    )\r\n  }\r\n\r\n  const setQuestionAlert = (id) => {\r\n    setAlert(\r\n      <SweetAlert\r\n        warning\r\n        showCancel\r\n        confirmBtnText=\"Yes\"\r\n        confirmBtnBsStyle=\"danger\"\r\n        title=\"Are you sure?\"\r\n        onConfirm={() => delateSatuan(id)}\r\n        onCancel={hideAlert}\r\n        focusCancelBtn\r\n      />\r\n    )\r\n  }\r\n\r\n  const hideAlert = () => {\r\n    setAlert(null);\r\n  }\r\n\r\n  const rowEvents = {\r\n    onDoubleClick: (e, row, rowIndex) => {\r\n      setHide(false);\r\n      setSelectedAcquirerId(row.acquirer_id);\r\n      setSelectAcquirerName(row.acquirer_name);\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setCodeCustomer(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {alert}\r\n      <SimpleHeader name=\"Customer\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>List Customer</h3>\r\n                  <div style={{ textAlign: \"right\" }}>\r\n                    <Link className=\"btn btn-info\" to=\"/admin/customer/create\">\r\n                      Add\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n              <h3 onClick={toggleOpen} >Filter &nbsp;\r\n                  {\r\n                    isOpen === true ? <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i> : <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  }\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                        <Row md=\"12\">\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Nama</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Nama\"\r\n                                value={name}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, e.target.value, codeCustomer)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Kode Customer</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Kode Customer\"\r\n                                value={codeCustomer}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, name, e.target.value)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Button type=\"button\" onClick={reset} color=\"secondary\">Reset</Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Collapse>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allCustomer}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      }\r\n                    },\r\n                    {\r\n                        dataField: \"customer_code\",\r\n                        text: \"Kode Customer\",\r\n                        sort: true,\r\n                      },\r\n                    {\r\n                      dataField: \"name\",\r\n                      text: \"Nama\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"province\",\r\n                      text: \"Province\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"city\",\r\n                      text: \"City\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"address\",\r\n                      text: \"Address\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"\", text: \"\", formatter: (cell, row, index) => {\r\n                        return (\r\n                          <ButtonGroup>\r\n                            <Button>\r\n                              <Link\r\n                                to={redirectPrefix + row.id}\r\n                                id={\"tooltip_\" + row.id}\r\n                              >\r\n                                <i className=\"fas fa-user-edit\" />\r\n                              </Link>\r\n                            </Button>\r\n                            <UncontrolledTooltip delay={0} target={\"tooltip_\" + row.id}>\r\n                              Edit\r\n                            </UncontrolledTooltip>\r\n                            <Button\r\n                              id=\"btn-acquirer\"\r\n                              onClick={() => setQuestionAlert(row.id)}\r\n                            >\r\n                              <i className=\"fas fa-trash\" />\r\n                            </Button>\r\n                            <UncontrolledTooltip\r\n                              delay={0}\r\n                              placement=\"top\"\r\n                              target=\"btn-acquirer\"\r\n                            >\r\n                              Delete Departemen\r\n                            </UncontrolledTooltip>\r\n                          </ButtonGroup>\r\n                        )\r\n                      }\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        rowEvents={rowEvents}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Customer;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  CardBody,\r\n  CardHeader,\r\n  Container,\r\n  UncontrolledTooltip,\r\n  ButtonGroup,\r\n  Collapse,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\n\r\nconst Coa = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n  const redirectPrefix = `/admin/coa/edit/`;\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allCoa, setAllCoa] = useState([]);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n\r\n  const [codeCoa, setCodeCoa] = useState(\"\");\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, codeCoa);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort);\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const updateDataTable = (page, perPage, sort, codeCoa) => {\r\n    getCoa(page, perPage, sort, codeCoa);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setCodeCoa(codeCoa);\r\n  };\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`;\r\n      updateDataTable(page, perPage, sort, codeCoa);\r\n    }\r\n  };\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCoa(page, perPage, currentSort, \"\");\r\n  }, []);\r\n\r\n  const getCoa = async (page, perPage, currentSort, coa_code = null) => {\r\n    let filter = { page: page, per_page: perPage };\r\n    if (coa_code !== null) {\r\n      filter = Object.assign(filter, { coa_code: coa_code });\r\n    }\r\n    const data = filter;\r\n    const headers = {\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_BASE_URL}/coa`,\r\n      data,\r\n      { headers }\r\n    );\r\n    setAllCoa(res.data.response);\r\n    setPage(res.data.current_page + 1);\r\n    setPerpage(res.data.per_page);\r\n    setTotalItem(res.data.total_item);\r\n  };\r\n\r\n  const delateCoa = (id) => {\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/coa/delete/${id}`, null, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then(function (response) {\r\n        setSuccessAlert();\r\n        getCoa();\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const setSuccessAlert = () => {\r\n    setAlert(\r\n      <SweetAlert\r\n        success\r\n        showConfirm\r\n        confirmBtnText=\"Ok\"\r\n        title=\"Coa deleted\"\r\n        onCancel={hideAlert}\r\n        onConfirm={hideAlert}\r\n      />\r\n    );\r\n  };\r\n\r\n  const setQuestionAlert = (id) => {\r\n    setAlert(\r\n      <SweetAlert\r\n        warning\r\n        showCancel\r\n        confirmBtnText=\"Yes\"\r\n        confirmBtnBsStyle=\"danger\"\r\n        title=\"Are you sure?\"\r\n        onConfirm={() => delateCoa(id)}\r\n        onCancel={hideAlert}\r\n        focusCancelBtn\r\n      />\r\n    );\r\n  };\r\n\r\n  const hideAlert = () => {\r\n    setAlert(null);\r\n  };\r\n\r\n  const rowEvents = {\r\n    onDoubleClick: (e, row, rowIndex) => {\r\n      setHide(false);\r\n      setSelectedAcquirerId(row.acquirer_id);\r\n      setSelectAcquirerName(row.acquirer_name);\r\n    },\r\n  };\r\n\r\n  const reset = () => {\r\n    setCodeCoa(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {alert}\r\n      <SimpleHeader name=\"Coa\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <h3>List Coa</h3>\r\n                  <div style={{ textAlign: \"right\" }}>\r\n                    <Link className=\"btn btn-info\" to=\"/admin/coa/create\">\r\n                      Add\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <h3 onClick={toggleOpen}>\r\n                  Filter &nbsp;\r\n                  {isOpen === true ? (\r\n                    <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\r\n                  ) : (\r\n                    <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  )}\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                    <Row md=\"12\">\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label htmlFor=\"exampleFormControlSelect3\">\r\n                            Kode Coa\r\n                          </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            placeholder=\"Masukan Kode Coa\"\r\n                            value={codeCoa}\r\n                            onChange={(e) =>\r\n                              updateDataTable(\r\n                                1,\r\n                                perPage,\r\n                                currentSort,\r\n                                e.target.value\r\n                              )\r\n                            }\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>\r\n                        <Button type=\"button\" onClick={reset} color=\"secondary\">\r\n                          Reset\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                </Collapse>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allCoa}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: \"coa_code\",\r\n                      text: \"Kode Coa\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"coa_name\",\r\n                      text: \"Nama Coa\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"\",\r\n                      text: \"\",\r\n                      formatter: (cell, row, index) => {\r\n                        return (\r\n                          <ButtonGroup>\r\n                            <Button>\r\n                              <Link\r\n                                to={redirectPrefix + row.id}\r\n                                id={\"tooltip_\" + row.id}\r\n                              >\r\n                                <i className=\"fas fa-user-edit\" />\r\n                              </Link>\r\n                            </Button>\r\n                            <UncontrolledTooltip\r\n                              delay={0}\r\n                              target={\"tooltip_\" + row.id}\r\n                            >\r\n                              Edit\r\n                            </UncontrolledTooltip>\r\n                            <Button\r\n                              id=\"btn-acquirer\"\r\n                              onClick={() => setQuestionAlert(row.id)}\r\n                            >\r\n                              <i className=\"fas fa-trash\" />\r\n                            </Button>\r\n                            <UncontrolledTooltip\r\n                              delay={0}\r\n                              placement=\"top\"\r\n                              target=\"btn-acquirer\"\r\n                            >\r\n                              Delete Departemen\r\n                            </UncontrolledTooltip>\r\n                          </ButtonGroup>\r\n                        );\r\n                      },\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        rowEvents={rowEvents}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Coa;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, Row, Col, CardBody, CardHeader, Container, UncontrolledTooltip, ButtonGroup, Collapse, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport moment from \"moment\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\n\r\nconst ItemCategory = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  const redirectPrefix = `/admin/item-kategori/edit/`;\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n\r\n  const [itemCategory, setItemCategory] = useState([]);\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort) => {\r\n    getItemCategory(page, perPage, sort);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort)\r\n    }\r\n  }\r\n\r\n  const toggle = tab => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getItemCategory(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  const getItemCategory = async (page, perPage, currentSort) => {\r\n    const data = { page: page, per_page: perPage };\r\n    const headers = {\r\n      'Authorization': `Bearer ${token}`,\r\n    };\r\n    const res = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/item-kategori`, data, { headers })\r\n      setItemCategory(res.data.response);\r\n      setPage(res.data.current_page + 1);\r\n      setPerpage(res.data.per_page);\r\n      setTotalItem(res.data.total_item);\r\n    }\r\n\r\n  const hideAlert = () => {\r\n    setAlert(null);\r\n  }\r\n\r\n  const rowEvents = {\r\n    onDoubleClick: (e, row, rowIndex) => {\r\n      setHide(false);\r\n      setSelectedAcquirerId(row.acquirer_id);\r\n      setSelectAcquirerName(row.acquirer_name);\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setCodeCoa(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {alert}\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>List Item Kategori</h3>\r\n                  <div style={{ textAlign: \"right\" }}>\r\n                    <Link className=\"btn btn-info\" to=\"/admin/item-kategori/create\">\r\n                      Add\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={itemCategory}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      }\r\n                    },\r\n                    {\r\n                      dataField: \"name\",\r\n                      text: \"Nama\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"\", text: \"\", formatter: (cell, row, index) => {\r\n                        return (\r\n                          <ButtonGroup>\r\n                            <Button>\r\n                              <Link\r\n                                to={redirectPrefix + row.id}\r\n                                id={\"tooltip_\" + row.id}\r\n                              >\r\n                                <i className=\"fas fa-user-edit\" />\r\n                              </Link>\r\n                            </Button>\r\n                            <UncontrolledTooltip delay={0} target={\"tooltip_\" + row.id}>\r\n                              Edit\r\n                            </UncontrolledTooltip>\r\n                          </ButtonGroup>\r\n                        )\r\n                      }\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        rowEvents={rowEvents}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemCategory;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { \r\n  Card, \r\n  Row, \r\n  CardBody, \r\n  CardHeader,\r\n } from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst ItemSubCategory = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const redirectPrefix = `/admin/item-sub-kategori/edit/`;\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [itemCategory, setItemCategory] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort) => {\r\n    getItemCategory(page, perPage, sort);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getItemCategory(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  const getItemCategory = async (page, perPage, currentSort) => {\r\n    const data = { page: page, per_page: perPage };\r\n    const headers = {\r\n      'Authorization': `Bearer ${token}`,\r\n    };\r\n    const res = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/sub-kategori/page`, data, { headers })\r\n      setItemCategory(res.data.response);\r\n      setPage(res.data.current_page + 1);\r\n      setPerpage(res.data.per_page);\r\n      setTotalItem(res.data.total_item);\r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>List Item Sub Kategori</h3>\r\n                  <div style={{ textAlign: \"right\" }}>\r\n                    <Link className=\"btn btn-info\" to=\"/admin/item-sub-kategori/create\">\r\n                      Add\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={itemCategory}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      }\r\n                    },\r\n                    {\r\n                      dataField: \"name\",\r\n                      text: \"Nama Sub Kategori\",\r\n                      sort: true,\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemSubCategory;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { \r\n  Card,\r\n  Row,\r\n  CardBody,\r\n  CardHeader, \r\n} from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst ItemFunction = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [itemCategory, setItemCategory] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort) => {\r\n    getFunction(page, perPage, sort);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getFunction(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  const getFunction = async (page, perPage, currentSort) => {\r\n    const data = { page: page, per_page: perPage };\r\n    const headers = {\r\n      'Authorization': `Bearer ${token}`,\r\n    };\r\n    const res = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/item-function`, data, { headers })\r\n      setItemCategory(res.data.response);\r\n      setPage(res.data.current_page + 1);\r\n      setPerpage(res.data.per_page);\r\n      setTotalItem(res.data.total_item);\r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>List Item Function</h3>\r\n                  <div style={{ textAlign: \"right\" }}>\r\n                    <Link className=\"btn btn-info\" to=\"/admin/item-function/create\">\r\n                      Add\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={itemCategory}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      }\r\n                    },\r\n                    {\r\n                      dataField: \"name\",\r\n                      text: \"Nama Function\",\r\n                      sort: true,\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemFunction;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { \r\n  Card, \r\n  Row, \r\n  CardBody, \r\n  CardHeader, \r\n} from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst ItemSubFunction = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [itemCategory, setItemCategory] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort) => {\r\n    getFunction(page, perPage, sort);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getFunction(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  const getFunction = async (page, perPage, currentSort) => {\r\n    const data = { page: page, per_page: perPage };\r\n    const headers = {\r\n      'Authorization': `Bearer ${token}`,\r\n    };\r\n    const res = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/sub-function/page`, data, { headers })\r\n      setItemCategory(res.data.response);\r\n      setPage(res.data.current_page + 1);\r\n      setPerpage(res.data.per_page);\r\n      setTotalItem(res.data.total_item);\r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>List Item Sub Function</h3>\r\n                  <div style={{ textAlign: \"right\" }}>\r\n                    <Link className=\"btn btn-info\" to=\"/admin/item-sub-function/create\">\r\n                      Add\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={itemCategory}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      }\r\n                    },\r\n                    {\r\n                      dataField: \"name\",\r\n                      text: \"Nama Function\",\r\n                      sort: true,\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemSubFunction;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { \r\n  Card, \r\n  Row, \r\n  CardBody, \r\n  CardHeader\r\n} from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst ItemMerek = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [itemMerek, setItemMerek] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort) => {\r\n    getMerek(page, perPage, sort);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getMerek(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  const getMerek = async (page, perPage, currentSort) => {\r\n    const data = { page: page, per_page: perPage };\r\n    const headers = {\r\n      'Authorization': `Bearer ${token}`,\r\n    };\r\n    const res = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/merek`, data, { headers })\r\n      setItemMerek(res.data.response);\r\n      setPage(res.data.current_page + 1);\r\n      setPerpage(res.data.per_page);\r\n      setTotalItem(res.data.total_item);\r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>List Item Merek</h3>\r\n                  <div style={{ textAlign: \"right\" }}>\r\n                    <Link className=\"btn btn-info\" to=\"/admin/item-merek/create\">\r\n                      Add\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={itemMerek}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      }\r\n                    },\r\n                    {\r\n                        dataField: \"name\",\r\n                        text: \"Nama Merek\",\r\n                        sort: true,\r\n                      },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemMerek;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { \r\n    Card, \r\n    Row, \r\n    CardBody, \r\n    CardHeader,\r\n} from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst ItemSubMerek = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [ItemSubMerek, setItemSubMerek] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort) => {\r\n    getSubMerek(page, perPage, sort);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getSubMerek(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  const getSubMerek = async (page, perPage, currentSort) => {\r\n    const data = { page: page, per_page: perPage };\r\n    const headers = {\r\n      'Authorization': `Bearer ${token}`,\r\n    };\r\n    const res = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/sub-merek`, data, { headers })\r\n      setItemSubMerek(res.data.response_data);\r\n      setPage(res.data.current_page + 1);\r\n      setPerpage(res.data.per_page);\r\n      setTotalItem(res.data.total_item);\r\n    }\r\n                            \r\n  return (\r\n    <div>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>List Sub Item Merek</h3>\r\n                  <div style={{ textAlign: \"right\" }}>\r\n                    <Link className=\"btn btn-info\" to=\"/admin/item-sub-merek/create\">\r\n                      Add\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={ItemSubMerek}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      }\r\n                    },\r\n                    {\r\n                        dataField: \"name\",\r\n                        text: \"Nama Sub Merek\",\r\n                        sort: true,\r\n                      },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemSubMerek;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, Row, Col, CardBody, CardHeader, Container, UncontrolledTooltip, ButtonGroup, Collapse, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport moment from \"moment\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\n\r\nconst ItemGrade = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n\r\n  const [itemMerek, setItemMerek] = useState([]);\r\n\r\n  const [nilai, setNilai] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, nilai, description);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort, nilai, description) => {\r\n    getMerek(page, perPage, sort, nilai, description);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setNilai(nilai);\r\n    setDescription(description)\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort, nilai, description)\r\n    }\r\n  }\r\n\r\n  const toggle = tab => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getMerek(page, perPage, currentSort, \"\", \"\");\r\n  }, []);\r\n\r\n  const getMerek = async (page, perPage, currentSort, nilai = null, keterangan = null) => {\r\n    let filter = { page: page, per_page: perPage }\r\n    if (nilai !== null) {\r\n      filter = Object.assign(filter, { nilai: nilai })\r\n    }\r\n    if (keterangan !== null) {\r\n        filter = Object.assign(filter, { keterangan: keterangan })\r\n      }\r\n    const data = filter;\r\n    const headers = {\r\n      'Authorization': `Bearer ${token}`,\r\n    };\r\n    const res = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/item-grade`, data, { headers })\r\n      setItemMerek(res.data.response);\r\n      setPage(res.data.current_page + 1);\r\n      setPerpage(res.data.per_page);\r\n      setTotalItem(res.data.total_item);\r\n    }\r\n\r\n  const hideAlert = () => {\r\n    setAlert(null);\r\n  }\r\n\r\n  const rowEvents = {\r\n    onDoubleClick: (e, row, rowIndex) => {\r\n      setHide(false);\r\n      setSelectedAcquirerId(row.acquirer_id);\r\n      setSelectAcquirerName(row.acquirer_name);\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setNilai(\"\");\r\n    setDescription(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {alert}\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>List Item Grade</h3>\r\n                  <div style={{ textAlign: \"right\" }}>\r\n                    <Link className=\"btn btn-info\" to=\"/admin/item-grade/create\">\r\n                      Add\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n              <h3 onClick={toggleOpen} >Filter &nbsp;\r\n                  {\r\n                    isOpen === true ? <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i> : <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  }\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                    <Row md=\"12\">\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label htmlFor=\"exampleFormControlSelect3\">Nilai</Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            placeholder=\"Masukan Nilai\"\r\n                            value={nilai}\r\n                            onChange={e => updateDataTable(1, perPage, currentSort, e.target.value, description)}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label htmlFor=\"exampleFormControlSelect3\">Keterangan</Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            placeholder=\"Masukan Keterangan\"\r\n                            value={description}\r\n                            onChange={e => updateDataTable(1, perPage, currentSort, nilai, e.target.value)}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>\r\n                        <Button type=\"button\" onClick={reset} color=\"secondary\">Reset</Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                </Collapse>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={itemMerek}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      }\r\n                    },\r\n                    {\r\n                        dataField: \"nilai\",\r\n                        text: \"Nilai\",\r\n                        sort: true,\r\n                      },\r\n                    {\r\n                      dataField: \"keterangan\",\r\n                      text: \"Keterangan\",\r\n                      sort: true,\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        rowEvents={rowEvents}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemGrade;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  CardBody,\r\n  CardHeader,\r\n  UncontrolledTooltip,\r\n  ButtonGroup,\r\n  Collapse,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst Item = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n  const redirectPrefix = `/admin/item/edit/`;\r\n  const redirectDetail = `/admin/item/details/`;\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allItem, setAllItem] = useState([]);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n\r\n  const [nameItem, setNameItem] = useState(\"\");\r\n  const [codeItem, setCodeItem] = useState(\"\");\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, nameItem, codeItem);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort);\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const updateDataTable = (page, perPage, sort, nameItem, codeItem) => {\r\n    getItems(page, perPage, sort, nameItem, codeItem);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setNameItem(nameItem);\r\n    setCodeItem(codeItem);\r\n  };\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`;\r\n      updateDataTable(page, perPage, sort, nameItem, codeItem);\r\n    }\r\n  };\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getItems(page, perPage, currentSort, \"\", \"\");\r\n  }, []);\r\n\r\n  const getItems = async (\r\n    page,\r\n    perPage,\r\n    currentSort,\r\n    item_name = null,\r\n    item_code = null\r\n  ) => {\r\n    let filter = {\r\n      page: page,\r\n      per_page: perPage,\r\n      id_warehouse: parseInt(warehouse),\r\n    };\r\n    if (item_code !== null) {\r\n      filter = Object.assign(filter, { item_code: item_code });\r\n    }\r\n    const data = filter;\r\n    const headers = {\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_BASE_URL}/items `,\r\n      data,\r\n      { headers }\r\n    );\r\n    setAllItem(res.data.response);\r\n    setPage(res.data.current_page + 1);\r\n    setPerpage(res.data.per_page);\r\n    setTotalItem(res.data.total_item);\r\n  };\r\n\r\n  const reset = () => {\r\n    setNameItem(\"\");\r\n    setCodeItem(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <div className=\"col\">\r\n          <Card>\r\n            <CardHeader>\r\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                <h3>List Item</h3>\r\n                <div style={{ textAlign: \"right\" }}>\r\n                  <Link className=\"btn btn-info\" to=\"/admin/item/create\">\r\n                    Tambah Item\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <h3 onClick={toggleOpen}>\r\n                Search &nbsp;\r\n                {isOpen === true ? (\r\n                  <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\r\n                ) : (\r\n                  <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                )}\r\n              </h3>\r\n              <Collapse isOpen={isOpen}>\r\n                <Form>\r\n                  <Row md=\"12\">\r\n                    <Col md=\"3\">\r\n                      <FormGroup>\r\n                        <Label htmlFor=\"exampleFormControlSelect3\">\r\n                          Nama Item\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          placeholder=\"Masukan Nama Item\"\r\n                          value={nameItem}\r\n                          onChange={(e) =>\r\n                            updateDataTable(\r\n                              1,\r\n                              perPage,\r\n                              currentSort,\r\n                              e.target.value,\r\n                              codeItem\r\n                            )\r\n                          }\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <FormGroup>\r\n                        <Label htmlFor=\"exampleFormControlSelect3\">\r\n                          Kode Item\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          placeholder=\"Masukan Kode Item\"\r\n                          value={codeItem}\r\n                          onChange={(e) =>\r\n                            updateDataTable(\r\n                              1,\r\n                              perPage,\r\n                              currentSort,\r\n                              nameItem,\r\n                              e.target.value\r\n                            )\r\n                          }\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>\r\n                      <Button type=\"button\" onClick={reset} color=\"secondary\">\r\n                        Reset\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              </Collapse>\r\n              <ToolkitProvider\r\n                rowNumber={rowIndex}\r\n                data={allItem}\r\n                keyField=\"id\"\r\n                search={{\r\n                  defaultSearch: \"search something here\",\r\n                }}\r\n                columns={[\r\n                  {\r\n                    dataField: \"no\",\r\n                    text: \"#\",\r\n                    sort: true,\r\n                    page: 1,\r\n                    formatter: (cell, row, index) => {\r\n                      let currentRow = ++index;\r\n                      return currentRow + rowIndex;\r\n                    },\r\n                  },\r\n                  {\r\n                    dataField: \"item_code\",\r\n                    text: \"Kode Item\",\r\n                    sort: true,\r\n                  },\r\n                  {\r\n                    dataField: \"item_name\",\r\n                    text: \"Nama Item\",\r\n                    sort: true,\r\n                  },\r\n                  {\r\n                    dataField: \"kategori_name\",\r\n                    text: \"Kategori\",\r\n                    sort: true,\r\n                  },\r\n                  {\r\n                    dataField: \"function_name\",\r\n                    text: \"Fungsi\",\r\n                    sort: true,\r\n                  },\r\n                  {\r\n                    dataField: \"merek_name\",\r\n                    text: \"Merek\",\r\n                    sort: true,\r\n                  },\r\n                  {\r\n                    dataField: \"\",\r\n                    text: \"\",\r\n                    formatter: (cell, row, index) => {\r\n                      return (\r\n                        <ButtonGroup>\r\n                          <Button>\r\n                            <Link\r\n                              to={redirectPrefix + row.id}\r\n                              id={\"tooltip_\" + row.id}\r\n                            >\r\n                              <i className=\"fas fa-user-edit\" />\r\n                            </Link>\r\n                          </Button>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target={\"tooltip_\" + row.id}\r\n                          >\r\n                            Edit\r\n                          </UncontrolledTooltip>\r\n                          <Button>\r\n                            <Link\r\n                              to={redirectDetail + row.id}\r\n                              id={\"tooltip1_\" + row.id}\r\n                            >\r\n                              <i className=\"fas fa-eye\" />\r\n                            </Link>\r\n                          </Button>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target={\"tooltip1_\" + row.id}\r\n                          >\r\n                            Detail\r\n                          </UncontrolledTooltip>\r\n                        </ButtonGroup>\r\n                      );\r\n                    },\r\n                  },\r\n                ]}\r\n              >\r\n                {(props) => (\r\n                  <div className=\"py-4 table-responsive\">\r\n                    <BootstrapTable\r\n                      remote\r\n                      {...props.baseProps}\r\n                      bootstrap4={true}\r\n                      bordered={false}\r\n                      hover={true}\r\n                      pagination={paginationFactory({ ...paginationOption })}\r\n                      onTableChange={handleTableChange}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </ToolkitProvider>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  CardBody,\r\n  Form,\r\n  CardFooter,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Container,\r\n} from \"reactstrap\";\r\n\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nconst Create = () => {\r\n  const token = localStorage.token;\r\n  const warehouseId = localStorage.warehouse;\r\n  const username = localStorage.username;\r\n  const history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [nameItem, setNameItem] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [numberPart, setNumberPart] = useState(\"\");\r\n  const [allSatuan, setAllSatuan] = useState([]);\r\n  const [minimumstock, setMinimumStock] = useState(\"\");\r\n  const [satuan, setSatuan] = useState(\"\");\r\n  const [allGrade, setAllGrade] = useState([]);\r\n  const [grade, setGrade] = useState(\"\");\r\n  const [allAccount, setAllAccount] = useState([]);\r\n  const [account, setAccount] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [categories, setCategories] = useState([]);\r\n  const [subCategory, setSubCategory] = useState(\"\");\r\n  const [subCategories, setSubCategories] = useState([]);\r\n  const [nameFunction, setNameFunction] = useState(\"\");\r\n  const [nameFunctions, setNameFunctions] = useState([]);\r\n  const [nameSubFunction, setNameSubFunction] = useState(\"\");\r\n  const [nameSubFunctions, setNameSubFunctions] = useState([]);\r\n  const [supplier, setSupplier] = useState([]);\r\n  const [suppliers, setSuppliers] = useState([]);\r\n  const [merek, setMerek] = useState(\"\");\r\n  const [allMerek, setAllMerek] = useState([]);\r\n  const [submerek, setSubMerek] = useState(\"\");\r\n  const [allSubMerek, setAllSubMerek] = useState([]);\r\n  const [panjang, setPanjang] = useState(\"\");\r\n  const [lebar, setLebar] = useState(\"\");\r\n  const [tinggi, setTinggi] = useState(\"\");\r\n  const [nameType, setNameType] = useState(1);\r\n  const [status, setStatus] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getPerson();\r\n    getSatuan();\r\n    getCategory();\r\n    getSubCategory();\r\n    getFunction();\r\n    getSubFunction();\r\n    getMerek();\r\n    getSubMerek();\r\n    getGrade();\r\n    getAccount();\r\n  }, []);\r\n  \r\nconst getAccount = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/account/list`, { headers })\r\n      .then((data) => {\r\n        setAllAccount(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getGrade = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/item-grade/list`, { headers })\r\n      .then((data) => {\r\n        setAllGrade(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getSatuan = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/uom/list`, { headers })\r\n      .then((data) => {\r\n        setAllSatuan(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getCategory = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/item-kategori/list`, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setCategories(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getSubCategory = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/sub-kategori/list`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        setSubCategories(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getFunction = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/item-function/list`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        setNameFunctions(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getSubFunction = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/sub-function/list`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        setNameSubFunctions(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getMerek = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/merek/list`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        setAllMerek(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getSubMerek = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/sub-merek/list`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        setAllSubMerek(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getPerson = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/person/list`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        setSuppliers(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n  \r\n\r\n  function CreateData() {\r\n    setLoading(true);\r\n    CreateItem()\r\n  }\r\n  \r\n\r\n  const CreateItem = () => {\r\n    let data = {\r\n      warehouse_id: parseInt(warehouseId),\r\n      person_id: parseInt(supplier),\r\n      username: username,\r\n      item_description: description,\r\n      part_number: numberPart,\r\n      uom_id: parseInt(satuan),\r\n      kategori_id: parseInt(category),\r\n      subkategori_id: parseInt(subCategory),\r\n      grade_id: parseInt(grade),\r\n      account_id: parseInt(account),\r\n      function_id: parseInt(nameFunction),\r\n      subfunction_id: parseInt(nameSubFunction),\r\n      merek_id: parseInt(merek),\r\n      submerek_id : parseInt(submerek),\r\n      active_flag: parseInt(status),\r\n      item_name: nameItem,\r\n      minimum_stok : minimumstock,\r\n      panjang,\r\n      lebar,\r\n      tinggi,\r\n      stock: 0,\r\n      type: nameType,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/items/save`, data, {  headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      }, })\r\n      .then(function (response) \r\n      {\r\n        history.push(\"/admin/item\");\r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    {\r\n      CreateData();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SimpleHeader name=\"Tambah Item\" parentName=\"Master\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <Form onSubmit={handleSubmit}>\r\n                <CardBody>\r\n                  <Row md=\"12\">\r\n                      <Col md=\"6\">\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Nama Item\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"nameItem\"\r\n                              placeholder=\"Masukan Nama Item\"\r\n                              value={nameItem}\r\n                              onChange={(e) => {\r\n                                setNameItem(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Supplier\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              name=\"Supplier\"\r\n                              type=\"select\"\r\n                              value={supplier}\r\n                              onChange={(e) => {\r\n                                setSupplier(e.target.value);\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Pilih Supplier</option>\r\n                              {suppliers.map((suppliers, key) => {\r\n                                return (\r\n                                  <option key={key} value={suppliers.id}>\r\n                                    {suppliers.person_name}\r\n                                  </option>\r\n                                );\r\n                              })}\r\n                              </Input>\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Nomor Part\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"nomorPart\"\r\n                              placeholder=\"Masukan Nomor Part\"\r\n                              value={numberPart}\r\n                              onChange={(e) => {\r\n                                setNumberPart(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Satuan\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                          name=\"satuan\"\r\n                          type=\"select\"\r\n                          value={satuan}\r\n                          onChange={(e) => {\r\n                            setSatuan(e.target.value);\r\n                          }}\r\n                        >\r\n                          <option value=\"\">pilih Satuan</option>\r\n                          {allSatuan.map((satuan, key) => {\r\n                            return (\r\n                              <option key={key} value={satuan.id}>\r\n                                {satuan.description}\r\n                              </option>\r\n                            );\r\n                          })}\r\n                        </Input>\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Dimensi\r\n                          </Label>\r\n                          <Col sm={2}>\r\n                            <Input\r\n                            type=\"text\"\r\n                            name=\"panjang\"\r\n                            placeholder=\"Panjang\"\r\n                            value={panjang}\r\n                           onChange={(e) => {\r\n                              setPanjang(e.target.value);\r\n                            }}\r\n                            />\r\n                          </Col>\r\n                          <Col sm={3}>\r\n                            <Input\r\n                            type=\"text\"\r\n                            name=\"lebar\"\r\n                            placeholder=\"Lebar\"\r\n                            value={lebar}\r\n                            onChange={(e) => {\r\n                              setLebar(e.target.value);\r\n                             \r\n                            }}\r\n                            />\r\n                          </Col>\r\n                          <Col sm={2}>\r\n                            <Input\r\n                            type=\"text\"\r\n                            name=\"tinggi\"\r\n                            placeholder=\"Tinggi\"\r\n                            value={tinggi}\r\n                            onChange={(e) => {\r\n                              setTinggi(e.target.value);\r\n                             \r\n                            }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Minimum Stock\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                            type=\"number\"\r\n                            name=\"Minimum Stock\"\r\n                            placeholder=\"Masukan Stock\"\r\n                            value={minimumstock}\r\n                            onChange={(e) => {\r\n                              setMinimumStock(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                              >\r\n                                Status\r\n                              </Label>\r\n                                <Col sm={7}>\r\n                                  <div style={{ display: \"flex\" }}>\r\n                                    <div className=\"custom-control custom-radio mb-3\">\r\n                                      <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"customRadio11\"\r\n                                        name=\"custom-radio-4\"\r\n                                        type=\"checkbox\"\r\n                                        value={1}\r\n                                        checked={status === 1}\r\n                                        onChange={() => setStatus(1)}\r\n                                      />\r\n                                      <Label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"customRadio11\"\r\n                                      >\r\n                                        Aktif\r\n                                      </Label>\r\n                                    </div>\r\n                                    <div\r\n                                      className=\"custom-control custom-radio mb-3\"\r\n                                      style={{ marginLeft: \"20px\" }}\r\n                                    >\r\n                                      <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"customRadio12\"\r\n                                        name=\"custom-radio-4\"\r\n                                        type=\"radio\"\r\n                                        value={2}\r\n                                        checked={status === 2}\r\n                                        onChange={() => setStatus(2)}\r\n                                      />\r\n                                      <Label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"customRadio12\"\r\n                                      >\r\n                                        Tidak Aktif\r\n                                      </Label>\r\n                                    </div>\r\n                                  </div>\r\n                                </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                              >\r\n                                Deskripsi Item\r\n                              </Label>\r\n                              <Col sm={7}>\r\n                                <Input\r\n                                  type=\"textarea\"\r\n                                  name=\"descripsi\"\r\n                                  placeholder=\"Masukan Deskripsi\"\r\n                                  value={description}\r\n                                  onChange={(e) => {\r\n                                    setDescription(e.target.value);\r\n                                  }}\r\n                                />\r\n                              </Col>\r\n                            </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"6\">\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={3}\r\n                          >\r\n                            Tipe Item\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"select\"\r\n                              name=\"nameItem\"\r\n                              placeholder=\"Masukan Tipe Item\"\r\n                              value={nameType}\r\n                              onChange={(e) => {\r\n                                setNameType(e.target.value);\r\n                              \r\n                              }}\r\n                            >\r\n                              <option value={1}>Material</option>\r\n                              <option value={2}>Rakitan</option>\r\n                            </Input>\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={3}\r\n                          >\r\n                            Kategori\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              name=\"kategory\"\r\n                              type=\"select\"\r\n                              value={category}\r\n                              onChange={(e) => {\r\n                                setCategory(e.target.value);\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Pilih Kategori</option>\r\n                              {categories.map((category, key) => {\r\n                                return (\r\n                                  <option key={key} value={category.id}>\r\n                                    {category.name}\r\n                                  </option>\r\n                                );\r\n                              })}\r\n                              </Input>\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={3}\r\n                          >\r\n                            Sub Kategori\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                                  name=\"subKategory\"\r\n                                  type=\"select\"\r\n                                  value={subCategory}\r\n                                  onChange={(e) => {\r\n                                    setSubCategory(e.target.value);\r\n                                  }}\r\n                                >\r\n                                  <option value=\"\">Pilih Sub Kategori</option>\r\n                              {subCategories.map((category, key) => {\r\n                                return (\r\n                                  <option key={key} value={category.id}>\r\n                                    {category.name}\r\n                                  </option>\r\n                                );\r\n                              })}\r\n                            </Input>\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={3}\r\n                          >\r\n                            Function\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              name=\"function\"\r\n                              type=\"select\"\r\n                              value={nameFunction}\r\n                              onChange={(e) => {\r\n                                setNameFunction(e.target.value);\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Pilih Function</option>\r\n                              {nameFunctions.map((nameFunction, key) => {\r\n                                return (\r\n                                  <option key={key} value={nameFunction.id}>\r\n                                    {nameFunction.name}\r\n                                  </option>\r\n                                );\r\n                              })}\r\n                            </Input>\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={3}\r\n                          >\r\n                            Sub Function\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              name=\"subFunction\"\r\n                              type=\"select\"\r\n                              value={nameSubFunction}\r\n                              onChange={(e) => {\r\n                                setNameSubFunction(e.target.value);\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Pilih Sub Function</option>\r\n                              {nameSubFunctions.map((nameFunction, key) => {\r\n                                return (\r\n                                  <option key={key} value={nameFunction.id}>\r\n                                    {nameFunction.name}\r\n                                  </option>\r\n                                );\r\n                              })}\r\n                            </Input>\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={3}\r\n                          >\r\n                            Merek\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              name=\"merek\"\r\n                              type=\"select\"\r\n                              value={merek}\r\n                              onChange={(e) => {\r\n                                setMerek(e.target.value);\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Pilih Merek</option>\r\n                              {allMerek.map((m, key) => {\r\n                                return (\r\n                                  <option key={key} value={m.id}>\r\n                                    {m.name}\r\n                                  </option>\r\n                                );\r\n                              })}\r\n                            </Input>\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={3}\r\n                          >\r\n                            Sub Merk\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              name=\"merek\"\r\n                              type=\"select\"\r\n                              value={submerek}\r\n                              onChange={(e) => {\r\n                                setSubMerek(e.target.value);\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Pilih Merek</option>\r\n                              {allSubMerek.map((m, key) => {\r\n                                return (\r\n                                  <option key={key} value={m.id}>\r\n                                    {m.name}\r\n                                  </option>\r\n                                );\r\n                              })}\r\n                            </Input>\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={3}\r\n                          >\r\n                            Grade\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                          <Input\r\n                          name=\"grade\"\r\n                          type=\"select\"\r\n                          value={grade}\r\n                          onChange={(e) => {\r\n                            setGrade(e.target.value);\r\n                            }}\r\n                        >\r\n                          <option value=\"\">Pilih Grade</option>\r\n                          {allGrade.map((a, key) => {\r\n                            return (\r\n                              <option key={key} value={a.id}>\r\n                                {a.nilai}\r\n                              </option>\r\n                            );\r\n                          })}\r\n                        </Input>\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={3}\r\n                          >\r\n                            Account\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              name=\"account\"\r\n                              type=\"select\"\r\n                              value={account}\r\n                              onChange={(e) => {\r\n                                setAccount(e.target.value);\r\n                                }}\r\n                            >\r\n                              <option value=\"\">Pilih Account</option>\r\n                              {allAccount.map((a, key) => {\r\n                                return (\r\n                                  <option key={key} value={a.id}>\r\n                                    {a.account_name}\r\n                                  </option>\r\n                                );\r\n                              })}\r\n                              </Input>\r\n                          </Col>\r\n                        </FormGroup>\r\n                      </Col>\r\n                  </Row>\r\n                </CardBody>\r\n                <CardFooter>\r\n                    {!isLoading && (\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        Simpan\r\n                      </Button>\r\n                    )}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {\"\"}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/item\">\r\n                      Kembali\r\n                    </Link>\r\n                </CardFooter>\r\n               </Form>      \r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default Create;","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { \r\n  Card,\r\n  CardImg, \r\n  Row, \r\n  CardBody, \r\n  Col,\r\n  Label,\r\n  CardHeader, \r\n  FormGroup,\r\n  Input,\r\n  Container,\r\n  ButtonGroup,\r\n  Button,\r\n  Modal, \r\n  ModalHeader, \r\n  ModalBody, \r\n  ModalFooter\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst DetailItems = (props) => {\r\n  const token = localStorage.token;\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [hide, setHide] = useState(true);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  const [area ,setArea] = useState([]);\r\n  const [sisi, setSisi] = useState([]);\r\n  const [tingkat, setTingkat] = useState([]);\r\n  const [itemLocation, setItemLocation] = useState([]);\r\n  const [logPrice, setLogPrice] = useState([]);\r\n  const [itemParts, setItemParts] = useState([]);\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort);\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const updateDataTable = (page, perPage, sort) => {\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n  };\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`;\r\n      updateDataTable(page, perPage, sort);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getById();\r\n  }, []);\r\n\r\n  const getById = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/items/${props.match.params.id}`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        setItemLocation(data.data.response.items_location);\r\n        setLogPrice(data.data.response.log_price);\r\n        setItemParts(data.data.response.items_part);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const formatRupiah = (money) => {\r\n    return new Intl.NumberFormat('id-ID',\r\n      { style: 'currency', currency: 'IDR', minimumFractionDigits: 0 }\r\n    ).format(money);\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {alert}\r\n      <SimpleHeader name=\"Item Details\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <h3>Item Lokasi</h3>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={itemLocation}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: \"code_rak\",\r\n                      text: \"Kode Rak\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"qty_awal\",\r\n                      text: \"Quantity Awal\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"qty_masuk\",\r\n                      text: \"Quantity Masuk\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"qty_keluar\",\r\n                      text: \"Quantity Keluar\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"\",\r\n                      text: \"\",\r\n                      formatter: (cell, row, index) => {\r\n                        return (\r\n                          <ButtonGroup>\r\n                            <Button color=\"danger\" onClick={toggle}>\r\n                              DETAIL\r\n                            </Button>\r\n                          </ButtonGroup>\r\n                        );\r\n                      },\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n            <Card>\r\n              <CardHeader>\r\n                <div\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <h3>Item Part</h3>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={itemParts}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: \"item_code\",\r\n                      text: \"Kode Item\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"item_name\",\r\n                      text: \"Nama Item\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"harga\",\r\n                      text: \"Harga\",\r\n                      sort: true,\r\n                      formatter: (cell, row) => {\r\n                        return formatRupiah(row.harga)\r\n                      }\r\n                    },\r\n                    {\r\n                      dataField: \"qty\",\r\n                      text: \"Quantity\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"sub_total\",\r\n                      text: \"Sub Total\",\r\n                      sort: true,\r\n                      formatter: (cell, row) => {\r\n                        return formatRupiah(row.sub_total)\r\n                      }\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n            <Card>\r\n              <CardHeader>\r\n                <div\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <h3>Log Harga</h3>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={logPrice}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: \"username\",\r\n                      text: \"Username\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"nominal_1\",\r\n                      text: \"Nominal 1\",\r\n                      sort: true,\r\n                      formatter: (cell, row) => {\r\n                        return formatRupiah(row.nominal_1)\r\n                      }\r\n                    },\r\n                    {\r\n                      dataField: \"nominal_2\",\r\n                      text: \"Nominal 2\",\r\n                      sort: true,\r\n                      formatter: (cell, row) => {\r\n                        return formatRupiah(row.nominal_2)\r\n                      }\r\n                    },\r\n                    {\r\n                      dataField: \"min_qty_1\",\r\n                      text: \"Minimal Quantity 1\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"min_qty_2\",\r\n                      text: \"Minimal Quantity 2\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"harga_beli\",\r\n                      text: \"Harga Beli\",\r\n                      sort: true,\r\n                      formatter: (cell, row) => {\r\n                        return formatRupiah(row.harga_beli)\r\n                      }\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n      {/* modal */}\r\n      <Modal size=\"xl\" isOpen={modal} toggle={toggle} {...props}>\r\n        <ModalHeader toggle={toggle}>RAK LOCATION</ModalHeader>\r\n        <ModalBody >\r\n          <Card >\r\n            <CardBody>\r\n              <CardImg\r\n                alt=\"Card image Planogram\"\r\n                src=\"https://picsum.photos/900/270?grayscale\"\r\n                style={{\r\n                  height: 400\r\n                }}\r\n                width=\"200%\"\r\n              />\r\n              <hr />\r\n              <FormGroup row>\r\n                <Label\r\n                  for=\"exampleEmail\"\r\n                  sm={2}\r\n                >\r\n                  Area\r\n                </Label>\r\n                <Col sm={7}>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"Area\"\r\n                    value={area}\r\n                    onChange={(e) => {\r\n                    setArea(e.target.value);\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </FormGroup>\r\n              <FormGroup row>\r\n                <Label\r\n                  for=\"exampleEmail\"\r\n                  sm={2}\r\n                >\r\n                  Sisi\r\n                </Label>\r\n                <Col sm={7}>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"Sisi\"\r\n                    value={sisi}\r\n                    onChange={(e) => {\r\n                      setSisi(e.target.value);\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </FormGroup>\r\n              <FormGroup row>\r\n                <Label\r\n                  for=\"exampleEmail\"\r\n                  sm={2}\r\n                >\r\n                  Tingkat\r\n                </Label>\r\n                <Col sm={7}>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"tingkat\"\r\n                    value={tingkat}\r\n                    onChange={(e) => {\r\n                      setTingkat(e.target.value);\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </FormGroup>\r\n            </CardBody>\r\n          </Card>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailItems;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { \r\n  Card, \r\n  Button, \r\n  Row, \r\n  Col, \r\n  CardBody, \r\n  CardHeader, \r\n  Collapse, \r\n  UncontrolledTooltip,\r\n  ButtonGroup,\r\n  Form, \r\n  FormGroup, \r\n  Label, \r\n  Input \r\n} from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst IndexWarehousePusat = () => {\r\n  const token = localStorage.token;\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allWarehousePusat, setAllWarehousePusat] = useState([]);\r\n  const redirectPrefix = `/admin/warehouse-pusat/edit/`;\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n  const [name, setName] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  \r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, name);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort, name) => {\r\n    getWareHousePusat(page, perPage, sort, name);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setName(name);\r\n    \r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort, name)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getWareHousePusat(page, perPage, currentSort, \"\", \"\");\r\n  }, []);\r\n\r\n  const getWareHousePusat= async (page, perPage, currentSort, name = null) => {\r\n    let filter = {\r\n       page: page, \r\n       per_page: perPage,\r\n       level:1,\r\n      }\r\n      if (name !== null) {\r\n        filter = Object.assign(filter, { name: name })\r\n      }\r\n    const data = filter;\r\n    const headers = {\r\n      'Authorization': `Bearer ${token}`,\r\n    };\r\n    const res = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/warehouse/pusat `, data, { headers })\r\n      setAllWarehousePusat(res.data.response);\r\n      setPage(res.data.current_page + 1);\r\n      setPerpage(res.data.per_page);\r\n      setTotalItem(res.data.total_item);\r\n    }\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n       <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>List Warehouse Pusat</h3>\r\n                  <div style={{ textAlign: \"right\" }}>\r\n                    <Link className=\"btn btn-info\" to=\"/admin/warehouse-pusat/create\">\r\n                      Tambah Warehouse\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <h3 onClick={toggleOpen} >Search &nbsp;\r\n                  {\r\n                    isOpen === true ? <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i> : <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  }\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                        <Row md=\"12\">\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Nama Warehouse </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Nama Warehouse\"\r\n                                value={name}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, e.target.value, name)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Button type=\"button\" onClick={reset} color=\"secondary\">Reset</Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Collapse>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allWarehousePusat}\r\n                  keyField=\"id\"\r\n                  search={ {\r\n                    defaultSearch: 'search something here'\r\n                  } }\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: \"warehouse_name\",\r\n                      text: \"Nama Pusat\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"province_name\",\r\n                      text: \"Provinsi\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"city_name\",\r\n                      text: \"Kota\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"jumlah_gudang\",\r\n                      text: \"Jumlah Gudang\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"jumlah_toko\",\r\n                      text: \"Jumlah Toko\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"warehouse_phone\",\r\n                      text: \"Nomor Telepon\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"\",\r\n                      text: \"\",\r\n                      formatter: (cell, row, index) => {\r\n                        return (\r\n                          <ButtonGroup>\r\n                            <Link\r\n                              to={redirectPrefix + row.id}\r\n                              id={\"tooltip_\" + row.id}\r\n                              className=\"btn btn-secondary\"\r\n                            >\r\n                              <i\r\n                                className=\"fas fa-user-edit\"\r\n                                style={{ color: \"#5E72E4\" }}\r\n                              />\r\n                            </Link>\r\n                            <UncontrolledTooltip\r\n                              delay={0}\r\n                              target={\"tooltip_\" + row.id}\r\n                            >\r\n                              Edit\r\n                            </UncontrolledTooltip>\r\n                          </ButtonGroup>\r\n                        );\r\n                      },\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n       </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IndexWarehousePusat;","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { \r\n  Card, \r\n  Button, \r\n  Row, \r\n  Col, \r\n  CardBody, \r\n  CardHeader, \r\n  Collapse, \r\n  Form, \r\n  UncontrolledTooltip,\r\n  ButtonGroup,\r\n  FormGroup, \r\n  Label, \r\n  Input \r\n} from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst IndexWarehouseToko = () => {\r\n  const token = localStorage.token;\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allWarehouseToko, setAllWarehouseToko] = useState([]);\r\n  const redirectPrefix = `/admin/warehouse-toko/edit/`;\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n  const [name, setName] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  \r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, name);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort, name) => {\r\n    getWareHouseToko(page, perPage, sort, name);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setName(name);\r\n    \r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort, name)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getWareHouseToko(page, perPage, currentSort, \"\", \"\");\r\n  }, []);\r\n\r\n  const getWareHouseToko= async (page, perPage, currentSort, name = null) => {\r\n    let filter = {\r\n       page: page, \r\n       per_page: perPage\r\n      }\r\n      if (name !== null) {\r\n        filter = Object.assign(filter, { name: name })\r\n      }\r\n    const data = filter;\r\n    const headers = {\r\n      'Authorization': `Bearer ${token}`,\r\n    };\r\n    const res = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/warehouse/toko `, data, { headers })\r\n      setAllWarehouseToko(res.data.response);\r\n      setPage(res.data.current_page + 1);\r\n      setPerpage(res.data.per_page);\r\n      setTotalItem(res.data.total_item);\r\n    }\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n       <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>List Warehouse Toko</h3>\r\n                  <div style={{ textAlign: \"right\" }}>\r\n                    <Link className=\"btn btn-info\" to=\"/admin/warehouse-toko/create\">\r\n                      Tambah Warehouse\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <h3 onClick={toggleOpen} >Search &nbsp;\r\n                  {\r\n                    isOpen === true ? <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i> : <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  }\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                        <Row md=\"12\">\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Nama Warehouse </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Nama Warehouse\"\r\n                                value={name}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, e.target.value, name)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Button type=\"button\" onClick={reset} color=\"secondary\">Reset</Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Collapse>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allWarehouseToko}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: \"pusat_name\",\r\n                      text: \"Nama Pusat\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                        dataField: \"warehouse_name\",\r\n                        text: \"Nama Toko\",\r\n                        sort: true,\r\n                      },\r\n                    {\r\n                      dataField: \"province_name\",\r\n                      text: \"Provinsi\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"city_name\",\r\n                      text: \"Kota\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"warehouse_phone\",\r\n                      text: \"Nomor Telepon\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                        dataField: \"\",\r\n                        text: \"\",\r\n                        formatter: (cell, row, index) => {\r\n                          return (\r\n                            <ButtonGroup>\r\n                              <Button>\r\n                                <Link\r\n                                  to={redirectPrefix + row.id}\r\n                                  id={\"tooltip_\" + row.id}\r\n                                >\r\n                                  <i className=\"fas fa-user-edit\" />\r\n                                </Link>\r\n                              </Button>\r\n                              <UncontrolledTooltip\r\n                                delay={0}\r\n                                target={\"tooltip_\" + row.id}\r\n                              >\r\n                                Edit\r\n                              </UncontrolledTooltip>\r\n                            </ButtonGroup>\r\n                          );\r\n                        },\r\n                      },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n       </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IndexWarehouseToko;","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { \r\n  Card, \r\n  Button, \r\n  Row, \r\n  Col, \r\n  CardBody, \r\n  CardHeader, \r\n  Collapse, \r\n  UncontrolledTooltip,\r\n  ButtonGroup,\r\n  Form, \r\n  FormGroup, \r\n  Label, \r\n  Input \r\n} from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst IndexWarehouseGudang = () => {\r\n  const token = localStorage.token;\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allWarehouseGudang, setAllWarehouseGudang] = useState([]);\r\n  const redirectPrefix = `/admin/warehouse-gudang/edit/`;\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n  const [name, setName] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  \r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, name);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort, name) => {\r\n    getWareHouseGudang(page, perPage, sort, name);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setName(name);\r\n    \r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort, name)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getWareHouseGudang(page, perPage, currentSort, \"\", \"\");\r\n  }, []);\r\n\r\n  const getWareHouseGudang= async (page, perPage, currentSort, name = null) => {\r\n    let filter = {\r\n       page: page, \r\n       per_page: perPage,\r\n       level:3,\r\n      }\r\n      if (name !== null) {\r\n        filter = Object.assign(filter, { name: name })\r\n      }\r\n    const data = filter;\r\n    const headers = {\r\n      'Authorization': `Bearer ${token}`,\r\n    };\r\n    const res = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/warehouse/gudang `, data, { headers })\r\n      setAllWarehouseGudang(res.data.response);\r\n      setPage(res.data.current_page + 1);\r\n      setPerpage(res.data.per_page);\r\n      setTotalItem(res.data.total_item);\r\n    }\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n       <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>List Warehouse Gudang</h3>\r\n                  <div style={{ textAlign: \"right\" }}>\r\n                    <Link className=\"btn btn-info\" to=\"/admin/warehouse-gudang/create\">\r\n                      Tambah Warehouse\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <h3 onClick={toggleOpen} >Search &nbsp;\r\n                  {\r\n                    isOpen === true ? <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i> : <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  }\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                        <Row md=\"12\">\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Nama Warehouse </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Nama Warehouse\"\r\n                                value={name}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, e.target.value, name)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Button type=\"button\" onClick={reset} color=\"secondary\">Reset</Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Collapse>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allWarehouseGudang}\r\n                  keyField=\"id\"\r\n                  search={ {\r\n                    defaultSearch: 'search something here'\r\n                  } }\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: \"pusat_name\",\r\n                      text: \"Nama Pusat\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"toko_name\",\r\n                      text: \"Nama Toko\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"warehouse_name\",\r\n                      text: \"Nama Gudang\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"province_name\",\r\n                      text: \"Provinsi\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"city_name\",\r\n                      text: \"Kota\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"warehouse_phone\",\r\n                      text: \"Nomor Telepon\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"\",\r\n                      text: \"\",\r\n                      formatter: (cell, row, index) => {\r\n                        return (\r\n                          <ButtonGroup>\r\n                            <Link\r\n                              to={redirectPrefix + row.id}\r\n                              id={\"tooltip_\" + row.id}\r\n                              className=\"btn btn-secondary\"\r\n                            >\r\n                              <i\r\n                                className=\"fas fa-user-edit\"\r\n                                style={{ color: \"#5E72E4\" }}\r\n                              />\r\n                            </Link>\r\n                            <UncontrolledTooltip\r\n                              delay={0}\r\n                              target={\"tooltip_\" + row.id}\r\n                            >\r\n                              Edit\r\n                            </UncontrolledTooltip>\r\n                          </ButtonGroup>\r\n                        );\r\n                      },\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n       </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IndexWarehouseGudang;","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  CardBody,\r\n  Form,\r\n  CardFooter,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Container,\r\n} from \"reactstrap\";\r\n\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nconst CreateWarehouse = () => {\r\n  const token = localStorage.token;\r\n  const history = useHistory();\r\n\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [city,setCity] = useState([]);\r\n  const [longitude, setLongitude] = useState([]);\r\n  const [latitude, setLatitude] = useState([]);\r\n  const [province, setProvince] = useState([]);\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [fax, setFax] = useState(\"\");\r\n  const [status,setStatus] = useState([]); \r\n  const [npwp, setNpwp] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [citys, setCitys] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getProvinsi();\r\n  }, []);\r\n\r\n  const getProvinsi = () => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/province/list`, { headers\r\n    })\r\n    .then(data => {\r\n      setProvinces(data.data.response_data);\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const getKota = (id) => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/city?province_id=${id}`, { headers\r\n    })\r\n    .then(data => {\r\n      setCitys(data.data.response_data);\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  function CreateData() {\r\n    setLoading(true);{\r\n    CreateRak();\r\n    }\r\n  }\r\n  \r\n  const CreateRak = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    \r\n    const myjson = JSON.stringify ({\r\n        \r\n        name,\r\n        is_indent:parseInt(status),\r\n        active_flag:1,\r\n        address,\r\n        city : parseInt(city),\r\n        longitude,\r\n        latitude,\r\n        province:parseInt(province),\r\n        phone,\r\n        fax,\r\n        npwp\r\n\r\n    });     \r\n    let data = new FormData();\r\n    data.append(\"body\",myjson)\r\n    data.append(\"desain\",image)\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/warehouse/pusat/save`, data, { headers })\r\n      .then(function (response) {\r\n        history.push(\"/admin/warehouse\");\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    {\r\n      CreateData();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SimpleHeader name=\"Warehouse Pusat\" parentName=\"Master\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <Form onSubmit={handleSubmit}>\r\n                <CardBody>\r\n                  <Row md=\"12\">\r\n                      <Col md=\"6\">\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Nama\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Nama\"\r\n                              placeholder=\"Masukan Nama\"\r\n                              value={name}\r\n                              onChange={(e) => {\r\n                                setName(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Alamat\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Alamat\"\r\n                              placeholder=\"Masukan Alamat\"\r\n                              value={address}\r\n                              onChange={(e) => {\r\n                                setAddress(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                            >\r\n                                Provinsi\r\n                                <span className=\"text-danger\">*</span>\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    value={province}\r\n                                    onChange={(e) => {\r\n                                    setProvince(e.target.value);\r\n                                    getKota(e.target.value);\r\n                                    }}\r\n                                >\r\n                                    <option>Pilih Provinsi</option>\r\n                                    {\r\n                                    provinces.map((a, key) => {\r\n                                        return <option key={key} value={a.id}>{a.name}</option>\r\n                                    })\r\n                                    }\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                            >\r\n                                Kota\r\n                                <span className=\"text-danger\">*</span>\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                                <Input\r\n                                    name=\"function\"\r\n                                    type=\"select\"\r\n                                    value={city}\r\n                                    onChange={(e) => {\r\n                                    setCity(e.target.value);\r\n                                    }}\r\n                                >\r\n                                    <option>Pilih Kota</option>\r\n                                    {\r\n                                    citys.map((b, key) => {\r\n                                        return <option key={key} value={b.id}>{b.name}</option>\r\n                                    })\r\n                                    }\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Longitude\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Longitude\"\r\n                              placeholder=\"Masukan Longitude\"\r\n                              value={longitude}\r\n                              onChange={(e) => {\r\n                                setLongitude(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Latitude\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Latitude\"\r\n                              placeholder=\"Masukan Latitude\"\r\n                              value={latitude}\r\n                              onChange={(e) => {\r\n                                setLatitude(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"6\">\r\n                      <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Phone\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Phone\"\r\n                              placeholder=\"Masukan Phone\"\r\n                              value={phone}\r\n                              onChange={(e) => {\r\n                                setPhone(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Fax\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Fax\"\r\n                              placeholder=\"Masukan Fax\"\r\n                              value={fax}\r\n                              onChange={(e) => {\r\n                                setFax(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Npwp\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Npwp\"\r\n                              placeholder=\"Masukan Npwp\"\r\n                              value={npwp}\r\n                              onChange={(e) => {\r\n                                setNpwp(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                              >\r\n                                Status\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                                <Col sm={7}>\r\n                                  <div style={{ display: \"flex\" }}>\r\n                                    <div className=\"custom-control custom-radio mb-3\">\r\n                                      <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"customRadio11\"\r\n                                        name=\"custom-radio-4\"\r\n                                        type=\"checkbox\"\r\n                                        value={1}\r\n                                        checked={status === 1}\r\n                                        onChange={() => setStatus(1)}\r\n                                      />\r\n                                      <Label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"customRadio11\"\r\n                                      >\r\n                                        STOK GUDANG\r\n                                      </Label>\r\n                                    </div>\r\n                                    <div\r\n                                      className=\"custom-control custom-radio mb-3\"\r\n                                      style={{ marginLeft: \"20px\" }}\r\n                                    >\r\n                                      <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"customRadio12\"\r\n                                        name=\"custom-radio-4\"\r\n                                        type=\"radio\"\r\n                                        value={2}\r\n                                        checked={status === 2}\r\n                                        onChange={() => setStatus(2)}\r\n                                      />\r\n                                      <Label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"customRadio12\"\r\n                                      >\r\n                                        STOK INDENT\r\n                                      </Label>\r\n                                    </div>\r\n                                  </div>\r\n                                </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                            >\r\n                                FOTO \r\n                                <span className=\"text-danger\">*</span>\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                                id=\"exampleFile\"\r\n                                name=\"file\"\r\n                                type=\"file\"\r\n                                onChange={(event) => {\r\n                                    setImage(event.target.files[0]);\r\n                                }}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                      </Col>\r\n                  </Row>\r\n                </CardBody>\r\n                <CardFooter>\r\n                    {!isLoading && (<Button color=\"primary\" type=\"submit\">\r\n                      Simpan\r\n                    </Button>)}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {\"\"}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/warehouse\">\r\n                      Kembali\r\n                    </Link>\r\n                </CardFooter>\r\n               </Form>      \r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default CreateWarehouse;","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  CardBody,\r\n  Form,\r\n  CardFooter,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Container,\r\n} from \"reactstrap\";\r\n\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nconst CreateWarehouse = () => {\r\n  const token = localStorage.token;\r\n  const history = useHistory();\r\n\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [city,setCity] = useState([]);\r\n  const [longitude, setLongitude] = useState([]);\r\n  const [latitude, setLatitude] = useState([]);\r\n  const [province, setProvince] = useState([]);\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [fax, setFax] = useState(\"\");\r\n  const [status,setStatus] = useState([]); \r\n  const [npwp, setNpwp] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [warehousepusat, setWarehousePusat] = useState([]);\r\n  const [warehousepusats, setWarehousePusats] = useState([]);\r\n  const [citys, setCitys] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getProvinsi();\r\n    getPusat();\r\n  }, []);\r\n\r\n  const getProvinsi = () => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/province/list`, { headers\r\n    })\r\n    .then(data => {\r\n      setProvinces(data.data.response_data);\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const getKota = (id) => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/city?province_id=${id}`, { headers\r\n    })\r\n    .then(data => {\r\n      setCitys(data.data.response_data);\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const getPusat = () => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/warehouse/pusat/list`, { headers\r\n    })\r\n    .then(data => {\r\n      setWarehousePusats(data.data.response);\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n  \r\n  function CreateData() {\r\n    setLoading(true);{\r\n    CreateRak();\r\n    }\r\n  }\r\n\r\n  const CreateRak = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    \r\n    const myjson = JSON.stringify ({\r\n        \r\n        name,\r\n        is_indent:parseInt(status),\r\n        active_flag:1,\r\n        pusat_id:parseInt(warehousepusat),\r\n        address,\r\n        level:2,\r\n        city : parseInt(city),\r\n        longitude,\r\n        latitude,\r\n        province:parseInt(province),\r\n        phone,\r\n        fax,\r\n        npwp\r\n\r\n    });     \r\n    let data = new FormData();\r\n    data.append(\"body\",myjson)\r\n    data.append(\"logo\",image)\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/warehouse/toko/save`, data, { headers })\r\n      .then(function (response) {\r\n        history.push(\"/admin/warehouse\");\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    {\r\n      CreateData();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SimpleHeader name=\"Warehouse Toko\" parentName=\"Master\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <Form onSubmit={handleSubmit}>\r\n                <CardBody>\r\n                  <Row md=\"12\">\r\n                      <Col md=\"6\">\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Nama\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Nama\"\r\n                              placeholder=\"Masukan Nama\"\r\n                              value={name}\r\n                              onChange={(e) => {\r\n                                setName(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Alamat\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Alamat\"\r\n                              placeholder=\"Masukan Alamat\"\r\n                              value={address}\r\n                              onChange={(e) => {\r\n                                setAddress(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                            >\r\n                                Pusat\r\n                                <span className=\"text-danger\">*</span>\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    value={warehousepusat}\r\n                                    onChange={(e) => {\r\n                                    setWarehousePusat(e.target.value);\r\n                                    \r\n                                    }}\r\n                                >\r\n                                    <option>Pilih Warehouse Pusat</option>\r\n                                    {\r\n                                    warehousepusats.map((a, key) => {\r\n                                        return <option key={key} value={a.id}>{a.name}</option>\r\n                                    })\r\n                                    }\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                            >\r\n                                Provinsi\r\n                                <span className=\"text-danger\">*</span>\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    value={province}\r\n                                    onChange={(e) => {\r\n                                    setProvince(e.target.value);\r\n                                    getKota(e.target.value);\r\n                                    }}\r\n                                >\r\n                                    <option>Pilih Provinsi</option>\r\n                                    {\r\n                                    provinces.map((a, key) => {\r\n                                        return <option key={key} value={a.id}>{a.name}</option>\r\n                                    })\r\n                                    }\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                            >\r\n                                Kota\r\n                                <span className=\"text-danger\">*</span>\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                                <Input\r\n                                    name=\"function\"\r\n                                    type=\"select\"\r\n                                    value={city}\r\n                                    onChange={(e) => {\r\n                                    setCity(e.target.value);\r\n                                    }}\r\n                                >\r\n                                    <option>Pilih Kota</option>\r\n                                    {\r\n                                    citys.map((b, key) => {\r\n                                        return <option key={key} value={b.id}>{b.name}</option>\r\n                                    })\r\n                                    }\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Longitude\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Longitude\"\r\n                              placeholder=\"Masukan Longitude\"\r\n                              value={longitude}\r\n                              onChange={(e) => {\r\n                                setLongitude(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Latitude\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Latitude\"\r\n                              placeholder=\"Masukan Latitude\"\r\n                              value={latitude}\r\n                              onChange={(e) => {\r\n                                setLatitude(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"6\">\r\n                      <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Phone\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Phone\"\r\n                              placeholder=\"Masukan Phone\"\r\n                              value={phone}\r\n                              onChange={(e) => {\r\n                                setPhone(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Fax\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Fax\"\r\n                              placeholder=\"Masukan Fax\"\r\n                              value={fax}\r\n                              onChange={(e) => {\r\n                                setFax(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Npwp\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Npwp\"\r\n                              placeholder=\"Masukan Npwp\"\r\n                              value={npwp}\r\n                              onChange={(e) => {\r\n                                setNpwp(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                              >\r\n                                Status\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                                <Col sm={7}>\r\n                                  <div style={{ display: \"flex\" }}>\r\n                                    <div className=\"custom-control custom-radio mb-3\">\r\n                                      <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"customRadio11\"\r\n                                        name=\"custom-radio-4\"\r\n                                        type=\"checkbox\"\r\n                                        value={1}\r\n                                        checked={status === 1}\r\n                                        onChange={() => setStatus(1)}\r\n                                      />\r\n                                      <Label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"customRadio11\"\r\n                                      >\r\n                                        STOK GUDANG\r\n                                      </Label>\r\n                                    </div>\r\n                                    <div\r\n                                      className=\"custom-control custom-radio mb-3\"\r\n                                      style={{ marginLeft: \"20px\" }}\r\n                                    >\r\n                                      <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"customRadio12\"\r\n                                        name=\"custom-radio-4\"\r\n                                        type=\"radio\"\r\n                                        value={2}\r\n                                        checked={status === 2}\r\n                                        onChange={() => setStatus(2)}\r\n                                      />\r\n                                      <Label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"customRadio12\"\r\n                                      >\r\n                                        STOK INDENT\r\n                                      </Label>\r\n                                    </div>\r\n                                  </div>\r\n                                </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                            >\r\n                                FOTO \r\n                                <span className=\"text-danger\">*</span>\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                                id=\"exampleFile\"\r\n                                name=\"file\"\r\n                                type=\"file\"\r\n                                onChange={(event) => {\r\n                                    setImage(event.target.files[0]);\r\n                                }}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                      </Col>\r\n                  </Row>\r\n                </CardBody>\r\n                <CardFooter>\r\n                    {!isLoading && (<Button color=\"primary\" type=\"submit\">\r\n                      Simpan\r\n                    </Button>)}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {\"\"}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/warehouse\">\r\n                      Kembali\r\n                    </Link>\r\n                </CardFooter>\r\n               </Form>      \r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default CreateWarehouse;","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  CardBody,\r\n  Form,\r\n  CardFooter,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Container,\r\n} from \"reactstrap\";\r\n\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nconst CreateWarehouseGudang = () => {\r\n  const token = localStorage.token;\r\n  const history = useHistory();\r\n\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [city,setCity] = useState([]);\r\n  const [longitude, setLongitude] = useState([]);\r\n  const [latitude, setLatitude] = useState([]);\r\n  const [province, setProvince] = useState([]);\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [fax, setFax] = useState(\"\");\r\n  const [status,setStatus] = useState([]); \r\n  const [npwp, setNpwp] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [warehousepusat, setWarehousePusat] = useState([]);\r\n  const [warehousepusats, setWarehousePusats] = useState([]);\r\n  const [warehousetoko, setWarehouseToko] = useState([]);\r\n  const [warehousetokos, setWarehouseTokos] = useState([]);\r\n  const [citys, setCitys] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getProvinsi();\r\n    getPusat();\r\n  }, []);\r\n\r\n  const getProvinsi = () => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/province/list`, { headers\r\n    })\r\n    .then(data => {\r\n      setProvinces(data.data.response_data);\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const getKota = (id) => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/city?province_id=${id}`, { headers\r\n    })\r\n    .then(data => {\r\n      setCitys(data.data.response_data);\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const getPusat = () => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/warehouse/pusat/list`, { headers\r\n    })\r\n    .then(data => {\r\n      setWarehousePusats(data.data.response);\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const getToko = (id) => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/warehouse/toko/list?pusat_id=${id}`, { headers\r\n    })\r\n    .then(data => {\r\n      setWarehouseTokos(data.data.response);\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n  \r\n  function CreateData() {\r\n    setLoading(true);{\r\n    CreateWarehouseGudang();\r\n    }\r\n  }\r\n\r\n  const CreateWarehouseGudang = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    \r\n    const myjson = JSON.stringify ({\r\n        \r\n        name,\r\n        is_indent:parseInt(status),\r\n        active_flag:1,\r\n        pusat_id:parseInt(warehousepusat),\r\n        toko_id:parseInt(warehousetoko),\r\n        address,\r\n        level:2,\r\n        city : parseInt(city),\r\n        longitude,\r\n        latitude,\r\n        province:parseInt(province),\r\n        phone,\r\n        fax,\r\n        npwp\r\n\r\n    });     \r\n    let data = new FormData();\r\n    data.append(\"body\",myjson)\r\n    data.append(\"logo\",image)\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/warehouse/gudang/save`, data, { headers })\r\n      .then(function (response) {\r\n        history.push(\"/admin/warehouse\");\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    {\r\n      CreateData();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SimpleHeader name=\"Warehouse Gudang\" parentName=\"Master\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <Form onSubmit={handleSubmit}>\r\n                <CardBody>\r\n                  <Row md=\"12\">\r\n                      <Col md=\"6\">\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Nama\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Nama\"\r\n                              placeholder=\"Masukan Nama\"\r\n                              value={name}\r\n                              onChange={(e) => {\r\n                                setName(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Alamat\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Alamat\"\r\n                              placeholder=\"Masukan Alamat\"\r\n                              value={address}\r\n                              onChange={(e) => {\r\n                                setAddress(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                            >\r\n                                Pusat\r\n                                <span className=\"text-danger\">*</span>\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    value={warehousepusat}\r\n                                    onChange={(e) => {\r\n                                    setWarehousePusat(e.target.value);\r\n                                    getToko(e.target.value);\r\n                                    }}\r\n                                >\r\n                                    <option>Pilih Warehouse Pusat</option>\r\n                                    {\r\n                                    warehousepusats.map((a, key) => {\r\n                                        return <option key={key} value={a.id}>{a.name}</option>\r\n                                    })\r\n                                    }\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                            >\r\n                                Toko\r\n                                <span className=\"text-danger\">*</span>\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    value={warehousetoko}\r\n                                    onChange={(e) => {\r\n                                    setWarehouseToko(e.target.value);\r\n                                    \r\n                                    }}\r\n                                >\r\n                                    <option>Pilih Warehouse Toko</option>\r\n                                    {\r\n                                    warehousetokos.map((a, key) => {\r\n                                        return <option key={key} value={a.id}>{a.name}</option>\r\n                                    })\r\n                                    }\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                            >\r\n                                Provinsi\r\n                                <span className=\"text-danger\">*</span>\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    value={province}\r\n                                    onChange={(e) => {\r\n                                    setProvince(e.target.value);\r\n                                    getKota(e.target.value);\r\n                                    }}\r\n                                >\r\n                                    <option>Pilih Provinsi</option>\r\n                                    {\r\n                                    provinces.map((a, key) => {\r\n                                        return <option key={key} value={a.id}>{a.name}</option>\r\n                                    })\r\n                                    }\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                            >\r\n                                Kota\r\n                                <span className=\"text-danger\">*</span>\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                                <Input\r\n                                    name=\"function\"\r\n                                    type=\"select\"\r\n                                    value={city}\r\n                                    onChange={(e) => {\r\n                                    setCity(e.target.value);\r\n                                    }}\r\n                                >\r\n                                    <option>Pilih Kota</option>\r\n                                    {\r\n                                    citys.map((b, key) => {\r\n                                        return <option key={key} value={b.id}>{b.name}</option>\r\n                                    })\r\n                                    }\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Longitude\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Longitude\"\r\n                              placeholder=\"Masukan Longitude\"\r\n                              value={longitude}\r\n                              onChange={(e) => {\r\n                                setLongitude(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Latitude\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Latitude\"\r\n                              placeholder=\"Masukan Latitude\"\r\n                              value={latitude}\r\n                              onChange={(e) => {\r\n                                setLatitude(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"6\">\r\n                      <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Phone\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Phone\"\r\n                              placeholder=\"Masukan Phone\"\r\n                              value={phone}\r\n                              onChange={(e) => {\r\n                                setPhone(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Fax\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Fax\"\r\n                              placeholder=\"Masukan Fax\"\r\n                              value={fax}\r\n                              onChange={(e) => {\r\n                                setFax(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Npwp\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Npwp\"\r\n                              placeholder=\"Masukan Npwp\"\r\n                              value={npwp}\r\n                              onChange={(e) => {\r\n                                setNpwp(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                              >\r\n                                Status\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                                <Col sm={7}>\r\n                                  <div style={{ display: \"flex\" }}>\r\n                                    <div className=\"custom-control custom-radio mb-3\">\r\n                                      <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"customRadio11\"\r\n                                        name=\"custom-radio-4\"\r\n                                        type=\"checkbox\"\r\n                                        value={1}\r\n                                        checked={status === 1}\r\n                                        onChange={() => setStatus(1)}\r\n                                      />\r\n                                      <Label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"customRadio11\"\r\n                                      >\r\n                                        STOK GUDANG\r\n                                      </Label>\r\n                                    </div>\r\n                                    <div\r\n                                      className=\"custom-control custom-radio mb-3\"\r\n                                      style={{ marginLeft: \"20px\" }}\r\n                                    >\r\n                                      <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"customRadio12\"\r\n                                        name=\"custom-radio-4\"\r\n                                        type=\"radio\"\r\n                                        value={2}\r\n                                        checked={status === 2}\r\n                                        onChange={() => setStatus(2)}\r\n                                      />\r\n                                      <Label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"customRadio12\"\r\n                                      >\r\n                                        STOK INDENT\r\n                                      </Label>\r\n                                    </div>\r\n                                  </div>\r\n                                </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                            >\r\n                                FOTO \r\n                                <span className=\"text-danger\">*</span>\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                                id=\"exampleFile\"\r\n                                name=\"file\"\r\n                                type=\"file\"\r\n                                onChange={(event) => {\r\n                                    setImage(event.target.files[0]);\r\n                                }}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                      </Col>\r\n                  </Row>\r\n                </CardBody>\r\n                <CardFooter>\r\n                    {!isLoading && (<Button color=\"primary\" type=\"submit\">\r\n                      Simpan\r\n                    </Button>)}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {\"\"}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/warehouse\">\r\n                      Kembali\r\n                    </Link>\r\n                </CardFooter>\r\n               </Form>      \r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default CreateWarehouseGudang;","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, Row, Col, CardBody, CardHeader, Container, UncontrolledTooltip, ButtonGroup, Collapse, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport moment from \"moment\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\n\r\nconst Karyawan = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  const redirectPrefix = `/admin/karyawan/edit/`;\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n\r\n  const [allKaryawan, setAllKaryawan] = useState([]);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\")\r\n  const [department, setDepartment] = useState(\"\");\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, name, username, department);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort, name, username, department) => {\r\n    getKaryawan(page, perPage, sort, name, username, department);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setName(name);\r\n    setUsername(username);\r\n    setDepartment(department);\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort,  name, username, department)\r\n    }\r\n  }\r\n\r\n  const toggle = tab => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getKaryawan(page, perPage, currentSort, \"\", \"\", \"\");\r\n  }, []);\r\n\r\n  const getKaryawan = async (page, perPage, currentSort, name = null, username = null, dept_name = null) => {\r\n    let filter = { page: page, per_page: perPage, id_warehouse: parseInt(warehouse) }\r\n    if (name !== null) {\r\n      filter = Object.assign(filter, { name: name })\r\n    }\r\n    if (username !== null) {\r\n      filter = Object.assign(filter, { username: username })\r\n    }\r\n    if (dept_name !== null) {\r\n      filter = Object.assign(filter, { dept_name: dept_name })\r\n    }\r\n    const data = filter;\r\n    const headers = {\r\n      'Authorization': `Bearer ${token}`,\r\n    };\r\n    const res = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/karyawan`, data, { headers })\r\n      setAllKaryawan(res.data.response);\r\n      setPage(res.data.current_page + 1);\r\n      setPerpage(res.data.per_page);\r\n      setTotalItem(res.data.total_item);\r\n    }\r\n\r\n  const delateDepartment = (id) => {\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/department/delete/${id}`, null, {\r\n\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        setSuccessAlert();\r\n        getKaryawan();\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const setSuccessAlert = () => {\r\n    setAlert(\r\n      <SweetAlert\r\n        success\r\n        showConfirm\r\n        confirmBtnText=\"Ok\"\r\n        title=\"Departemen deleted\"\r\n        onCancel={hideAlert}\r\n        onConfirm={hideAlert}\r\n      />\r\n    )\r\n  }\r\n\r\n  const setQuestionAlert = (id) => {\r\n    setAlert(\r\n      <SweetAlert\r\n        warning\r\n        showCancel\r\n        confirmBtnText=\"Yes\"\r\n        confirmBtnBsStyle=\"danger\"\r\n        title=\"Are you sure?\"\r\n        onConfirm={() => delateDepartment(id)}\r\n        onCancel={hideAlert}\r\n        focusCancelBtn\r\n      />\r\n    )\r\n  }\r\n\r\n  const hideAlert = () => {\r\n    setAlert(null);\r\n  }\r\n\r\n  const rowEvents = {\r\n    onDoubleClick: (e, row, rowIndex) => {\r\n      setHide(false);\r\n      setSelectedAcquirerId(row.acquirer_id);\r\n      setSelectAcquirerName(row.acquirer_name);\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setUsername(\"\");\r\n    setDepartment(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\", \"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {alert}\r\n      <SimpleHeader name=\"Karyawan\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>List Karyawan</h3>\r\n                  <div style={{ textAlign: \"right\" }}>\r\n                    {/* <Link className=\"btn btn-info\" to=\"/admin/karyawan/create\">\r\n                      Add\r\n                    </Link> */}\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n              <h3 onClick={toggleOpen} >Filter &nbsp;\r\n                  {\r\n                    isOpen === true ? <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i> : <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  }\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                        <Row md=\"12\">\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Nama</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Nama\"\r\n                                value={name}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, e.target.value, username, department)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Username</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Username\"\r\n                                value={username}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, name, e.target.value, department)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Departemen</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Departemen\"\r\n                                value={department}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, name, username, e.target.value)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Button type=\"button\" onClick={reset} color=\"secondary\">Reset</Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Collapse>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allKaryawan}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      }\r\n                    },\r\n                    {\r\n                      dataField: \"name\",\r\n                      text: \"Nama\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"username\",\r\n                      text: \"Username\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"dept_name\",\r\n                      text: \"Nama Departemen\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"warehouse_address\",\r\n                      text: \"Alamat\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"description\",\r\n                      text: \"Keterangan\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"\", text: \"\", formatter: (cell, row, index) => {\r\n                        return (\r\n                          <ButtonGroup>\r\n                            <Button>\r\n                              <Link\r\n                                to={redirectPrefix + row.id}\r\n                                id={\"tooltip_\" + row.id}\r\n                              >\r\n                                <i className=\"fas fa-user-edit\" />\r\n                              </Link>\r\n                            </Button>\r\n                            <UncontrolledTooltip delay={0} target={\"tooltip_\" + row.id}>\r\n                              Edit\r\n                            </UncontrolledTooltip>\r\n                          </ButtonGroup>\r\n                        )\r\n                      }\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        rowEvents={rowEvents}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Karyawan;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, Row, Col, CardBody, CardHeader, Container, UncontrolledTooltip, ButtonGroup, Collapse, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport moment from \"moment\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\n\r\nconst Komisi = () => {\r\n  const token = localStorage.token;\r\n  const userId = parseInt(localStorage.userId);\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  const redirectPrefix = `/admin/departemen/edit/`;\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n\r\n  const [allKomisi, setAllKomisi] = useState([]);\r\n\r\n  const [codeTransaction, setCodeTransaction] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, codeTransaction, startDate, endDate);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort, codeTransaction, startDate, endDate) => {\r\n    getKomisi(page, perPage, sort, codeTransaction, startDate, endDate);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setCodeTransaction(codeTransaction);\r\n    setStartDate(startDate);\r\n    setEndDate(endDate)\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort,  codeTransaction, startDate, endDate)\r\n    }\r\n  }\r\n\r\n  const toggle = tab => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getKomisi(page, perPage, currentSort, \"\", \"\", \"\");\r\n  }, []);\r\n\r\n  const getKomisi = async (page, perPage, currentSort, trans_code  = null, start_date  = null, end_date  = null) => {\r\n    let filter = { page: page, per_page: perPage, user_id: parseInt(userId) }\r\n    if (trans_code !== null) {\r\n      filter = Object.assign(filter, { trans_code: trans_code })\r\n    }\r\n    if (start_date !== null) {\r\n      filter = Object.assign(filter, { start_date: start_date })\r\n    }\r\n    if (end_date !== null) {\r\n      filter = Object.assign(filter, { end_date: end_date })\r\n    }\r\n    const data = filter;\r\n    const headers = {\r\n      'Authorization': `Bearer ${token}`,\r\n    };\r\n    const res = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/komisi/page`, data, { headers })\r\n      setAllKomisi(res.data.response);\r\n      setPage(res.data.current_page + 1);\r\n      setPerpage(res.data.per_page);\r\n      setTotalItem(res.data.total_item);\r\n    }\r\n\r\n  const delateDepartment = (id) => {\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/department/delete/${id}`, null, {\r\n\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        setSuccessAlert();\r\n        getKomisi();\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const setSuccessAlert = () => {\r\n    setAlert(\r\n      <SweetAlert\r\n        success\r\n        showConfirm\r\n        confirmBtnText=\"Ok\"\r\n        title=\"Departemen deleted\"\r\n        onCancel={hideAlert}\r\n        onConfirm={hideAlert}\r\n      />\r\n    )\r\n  }\r\n\r\n  const setQuestionAlert = (id) => {\r\n    setAlert(\r\n      <SweetAlert\r\n        warning\r\n        showCancel\r\n        confirmBtnText=\"Yes\"\r\n        confirmBtnBsStyle=\"danger\"\r\n        title=\"Are you sure?\"\r\n        onConfirm={() => delateDepartment(id)}\r\n        onCancel={hideAlert}\r\n        focusCancelBtn\r\n      />\r\n    )\r\n  }\r\n\r\n  const hideAlert = () => {\r\n    setAlert(null);\r\n  }\r\n\r\n  const rowEvents = {\r\n    onDoubleClick: (e, row, rowIndex) => {\r\n      setHide(false);\r\n      setSelectedAcquirerId(row.acquirer_id);\r\n      setSelectAcquirerName(row.acquirer_name);\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setCodeTransaction(\"\");\r\n    setStartDate(\"\");\r\n    setEndDate(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\", \"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {alert}\r\n      <SimpleHeader name=\"Komisi\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>List Komisi</h3>\r\n                  <div style={{ textAlign: \"right\" }}>\r\n                    {/* <Link className=\"btn btn-info\" to=\"/admin/departemen/create\">\r\n                      Add\r\n                    </Link> */}\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n              <h3 onClick={toggleOpen} >Filter &nbsp;\r\n                  {\r\n                    isOpen === true ? <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i> : <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  }\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                        <Row md=\"12\">\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Kode Transaksi</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Kode Transaksi\"\r\n                                value={codeTransaction}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, e.target.value, startDate, endDate)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Start Date</Label>\r\n                              <Input\r\n                                id=\"example-date-input\"\r\n                                type=\"date\"\r\n                                value={startDate}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, codeTransaction, e.target.value, endDate)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">End Date</Label>\r\n                              <Input\r\n                                id=\"example-date-input\"\r\n                                type=\"date\"\r\n                                value={endDate}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, codeTransaction, startDate, e.target.value)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Button type=\"button\" onClick={reset} color=\"secondary\">Reset</Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Collapse>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allKomisi}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      }\r\n                    },\r\n                    {\r\n                      dataField: \"name\",\r\n                      text: \"Nama\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"trans_code\",\r\n                      text: \"Kode Transaksi\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"komisi\",\r\n                      text: \"Kode\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"tanggal\",\r\n                      text: \"Tanggal\",\r\n                      sort: true,\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        rowEvents={rowEvents}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Komisi;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  CardBody,\r\n  CardHeader,\r\n  Container,\r\n  UncontrolledTooltip,\r\n  ButtonGroup,\r\n  Collapse,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\n\r\nconst Salary = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n  const redirectPrefix = `/admin/departemen/edit/`;\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n\r\n  const [allSalary, setAllSalary] = useState([]);\r\n\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, name);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort);\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const updateDataTable = (page, perPage, sort, name) => {\r\n    getSalary(page, perPage, sort, name);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setName(name);\r\n  };\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`;\r\n      updateDataTable(page, perPage, sort, name);\r\n    }\r\n  };\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSalary(page, perPage, currentSort, \"\");\r\n  }, []);\r\n\r\n  const getSalary = async (page, perPage, currentSort, name = null) => {\r\n    let filter = {\r\n      page: page,\r\n      per_page: perPage,\r\n      warehouse_id: parseInt(warehouse),\r\n    };\r\n    if (name !== null) {\r\n      filter = Object.assign(filter, { name: name });\r\n    }\r\n    const data = filter;\r\n    const headers = {\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_BASE_URL}/salary/page`,\r\n      data,\r\n      { headers }\r\n    );\r\n    setAllSalary(res.data.response);\r\n    setPage(res.data.current_page + 1);\r\n    setPerpage(res.data.per_page);\r\n    setTotalItem(res.data.total_item);\r\n  };\r\n\r\n  const delateDepartment = (id) => {\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/department/delete/${id}`,\r\n        null,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setSuccessAlert();\r\n        getSalary();\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const setSuccessAlert = () => {\r\n    setAlert(\r\n      <SweetAlert\r\n        success\r\n        showConfirm\r\n        confirmBtnText=\"Ok\"\r\n        title=\"Departemen deleted\"\r\n        onCancel={hideAlert}\r\n        onConfirm={hideAlert}\r\n      />\r\n    );\r\n  };\r\n\r\n  const setQuestionAlert = (id) => {\r\n    setAlert(\r\n      <SweetAlert\r\n        warning\r\n        showCancel\r\n        confirmBtnText=\"Yes\"\r\n        confirmBtnBsStyle=\"danger\"\r\n        title=\"Are you sure?\"\r\n        onConfirm={() => delateDepartment(id)}\r\n        onCancel={hideAlert}\r\n        focusCancelBtn\r\n      />\r\n    );\r\n  };\r\n\r\n  const hideAlert = () => {\r\n    setAlert(null);\r\n  };\r\n\r\n  const rowEvents = {\r\n    onDoubleClick: (e, row, rowIndex) => {\r\n      setHide(false);\r\n      setSelectedAcquirerId(row.acquirer_id);\r\n      setSelectAcquirerName(row.acquirer_name);\r\n    },\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {alert}\r\n      <SimpleHeader name=\"Salary\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <h3>List Salary</h3>\r\n                  <div style={{ textAlign: \"right\" }}>\r\n                    {/* <Link className=\"btn btn-info\" to=\"/admin/departemen/create\">\r\n                      Add\r\n                    </Link> */}\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <h3 onClick={toggleOpen}>\r\n                  Filter &nbsp;\r\n                  {isOpen === true ? (\r\n                    <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\r\n                  ) : (\r\n                    <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  )}\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                    <Row md=\"12\">\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label htmlFor=\"exampleFormControlSelect3\">\r\n                            Nama\r\n                          </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            placeholder=\"Masukan Nama\"\r\n                            value={name}\r\n                            onChange={(e) =>\r\n                              updateDataTable(\r\n                                1,\r\n                                perPage,\r\n                                currentSort,\r\n                                e.target.value\r\n                              )\r\n                            }\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>\r\n                        <Button type=\"button\" onClick={reset} color=\"secondary\">\r\n                          Reset\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                </Collapse>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allSalary}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: \"name\",\r\n                      text: \"Nama\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"komisi_value\",\r\n                      text: \"Komisi\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"salary\",\r\n                      text: \"Salary\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"tunjangan\",\r\n                      text: \"Tunjangan\",\r\n                      sort: true,\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        rowEvents={rowEvents}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Salary;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { \r\n  Card, \r\n  Button, \r\n  Row,\r\n  Col, \r\n  CardBody, \r\n  CardHeader, \r\n  Container, \r\n  UncontrolledTooltip, \r\n  ButtonGroup,\r\n  Collapse, \r\n  Form, \r\n  FormGroup, \r\n  Label, \r\n  Input } from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\n\r\nconst Person = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  const redirectPrefix = `/admin/person/edit/`;\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allDepartemen, setAllDepartemen] = useState([]);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n\r\n  const [kode, setKode] = useState(\"\");\r\n  const [nama, setNama] = useState(\"\");\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, kode, nama);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort, kode, nama) => {\r\n    getSupplier(page, perPage, sort, kode, nama);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setKode(kode);\r\n    setNama(nama);\r\n\r\n\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort, kode, nama)\r\n    }\r\n  }\r\n\r\n  const toggle = tab => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getSupplier(page, perPage, currentSort, \"\", \"\");\r\n  }, []);\r\n\r\n  const getSupplier = async (page, perPage, currentSort, person_code = null, person_name = null ) => {\r\n    let filter = { \r\n      page: page, \r\n      per_page: perPage \r\n    }\r\n    if (person_code !== null) {\r\n      filter = Object.assign(filter, { person_code: person_code })\r\n    }\r\n    if (person_name !== null) {\r\n      filter = Object.assign(filter, { person_name: person_name })\r\n    }\r\n    const data = filter;\r\n    const headers = {\r\n      'Authorization': `Bearer ${token}`,\r\n    };\r\n    const res = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/person`, data, { headers })\r\n      setAllDepartemen(res.data.response);\r\n      setPage(res.data.current_page + 1);\r\n      setPerpage(res.data.per_page);\r\n      setTotalItem(res.data.total_item);\r\n    }\r\n\r\n  const delateSupplier = (id) => {\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/person/delete/${id}`, null, {\r\n\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        setSuccessAlert();\r\n        getSupplier();\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const setSuccessAlert = () => {\r\n    setAlert(\r\n      <SweetAlert\r\n        success\r\n        showConfirm\r\n        confirmBtnText=\"Ok\"\r\n        title=\"Supplier deleted\"\r\n        onCancel={hideAlert}\r\n        onConfirm={hideAlert}\r\n      />\r\n    )\r\n  }\r\n\r\n  const setQuestionAlert = (id) => {\r\n    setAlert(\r\n      <SweetAlert\r\n        warning\r\n        showCancel\r\n        confirmBtnText=\"Yes\"\r\n        confirmBtnBsStyle=\"danger\"\r\n        title=\"Are you sure?\"\r\n        onConfirm={() => delateSupplier(id)}\r\n        onCancel={hideAlert}\r\n        focusCancelBtn\r\n      />\r\n    )\r\n  }\r\n\r\n  const hideAlert = () => {\r\n    setAlert(null);\r\n  }\r\n\r\n  const rowEvents = {\r\n    onDoubleClick: (e, row, rowIndex) => {\r\n      setHide(false);\r\n      setSelectedAcquirerId(row.acquirer_id);\r\n      setSelectAcquirerName(row.acquirer_name);\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setNama(\"\");\r\n    setKode(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\");\r\n  }\r\n\r\n  const formatRupiah = (money) => {\r\n    return new Intl.NumberFormat('id-ID',\r\n      { style: 'currency', currency: 'IDR', minimumFractionDigits: 0 }\r\n    ).format(money);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {alert}\r\n      <SimpleHeader name=\"Supplier\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>List Supplier</h3>\r\n                  <div style={{ textAlign: \"right\" }}>\r\n                    <Link className=\"btn btn-info\" to=\"/admin/person/create\">\r\n                      Add\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n              <h3 onClick={toggleOpen} >Search &nbsp;\r\n                  {\r\n                    isOpen === true ? <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i> : <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  }\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                        <Row md=\"12\">\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Kode Supplier</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Kode Supplier\"\r\n                                value={kode}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, e.target.value, nama)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Nama Supplier</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Nama Supplier\"\r\n                                value={nama}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, kode, e.target.value)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Button type=\"button\" onClick={reset} color=\"secondary\">Reset</Button>\r\n                          </Col>\r\n                        </Row>\r\n                  </Form>\r\n                </Collapse>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allDepartemen}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      }\r\n                    },\r\n                    {\r\n                      dataField: \"person_code\",\r\n                      text: \"Kode Supplier\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"person_name\",\r\n                      text: \"Nama Supplier\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"limit_hutang\",\r\n                      text: \"Limit Hutang\",\r\n                      sort: true,\r\n                      formatter: (cell, row) => {\r\n                        return formatRupiah(row.limit_hutang)\r\n                      }\r\n                    },\r\n                    {\r\n                      dataField: \"limit_piutang\",\r\n                      text: \"Limit Piutang\",\r\n                      sort: true,\r\n                      formatter: (cell, row) => {\r\n                        return formatRupiah(row.limit_piutang)\r\n                      }\r\n                    },\r\n                    {\r\n                      dataField: \"description\",\r\n                      text: \"Keterangan\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"\", text: \"\", formatter: (cell, row, index) => {\r\n                        return (\r\n                          <ButtonGroup>\r\n                            <Button>\r\n                              <Link\r\n                                to={redirectPrefix + row.id}\r\n                                id={\"tooltip_\" + row.id}\r\n                              >\r\n                                <i className=\"fas fa-user-edit\" />\r\n                              </Link>\r\n                            </Button>\r\n                            <UncontrolledTooltip delay={0} target={\"tooltip_\" + row.id}>\r\n                              Edit\r\n                            </UncontrolledTooltip>\r\n                            <Button\r\n                              id=\"btn-acquirer\"\r\n                              onClick={() => setQuestionAlert(row.id)}\r\n                            >\r\n                              <i className=\"fas fa-trash\" />\r\n                            </Button>\r\n                            <UncontrolledTooltip\r\n                              delay={0}\r\n                              placement=\"top\"\r\n                              target=\"btn-acquirer\"\r\n                            >\r\n                              Delete Supplier\r\n                            </UncontrolledTooltip>\r\n                          </ButtonGroup>\r\n                        )\r\n                      }\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        rowEvents={rowEvents}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Person;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  CardBody,\r\n  CardHeader,\r\n  Container,\r\n  UncontrolledTooltip,\r\n  ButtonGroup,\r\n  Collapse,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\n\r\nconst Pajak = (props) => {\r\n  const token = localStorage.token;\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n  const redirectPrefix = `/admin/pajak/edit/`;\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n\r\n  const [allPajak, setAllPajak] = useState([]);\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort);\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const updateDataTable = (page, perPage, sort) => {\r\n    getPajak(page, perPage, sort);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n  };\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`;\r\n      updateDataTable(page, perPage, sort);\r\n    }\r\n  };\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPajak(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  const getPajak = (page, perPage, currentSort) => {\r\n    let filter = { page: page, per_page: perPage };\r\n    const data = filter;\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/pajak`, data, { headers })\r\n      .then((data) => {\r\n        setAllPajak(data.data.response);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const delatePajak = (id) => {\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/pajak/delete/${id}`, null, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then(function (response) {\r\n        setSuccessAlert();\r\n        getPajak();\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const setSuccessAlert = () => {\r\n    setAlert(\r\n      <SweetAlert\r\n        success\r\n        showConfirm\r\n        confirmBtnText=\"Ok\"\r\n        title=\"Pejak deleted\"\r\n        onCancel={hideAlert}\r\n        onConfirm={hideAlert}\r\n      />\r\n    );\r\n  };\r\n\r\n  const setQuestionAlert = (id) => {\r\n    setAlert(\r\n      <SweetAlert\r\n        warning\r\n        showCancel\r\n        confirmBtnText=\"Yes\"\r\n        confirmBtnBsStyle=\"danger\"\r\n        title=\"Are you sure?\"\r\n        onConfirm={() => delatePajak(id)}\r\n        onCancel={hideAlert}\r\n        focusCancelBtn\r\n      />\r\n    );\r\n  };\r\n\r\n  const hideAlert = () => {\r\n    setAlert(null);\r\n  };\r\n\r\n  const rowEvents = {\r\n    onDoubleClick: (e, row, rowIndex) => {\r\n      setHide(false);\r\n      setSelectedAcquirerId(row.acquirer_id);\r\n      setSelectAcquirerName(row.acquirer_name);\r\n    },\r\n  };\r\n\r\n  const reset = () => {\r\n    setProvince(\"\");\r\n    setCity(\"\");\r\n    setAddress(\"\");\r\n    setPhoneNumber(\"\");\r\n    setNpwp(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\", \"\", \"\", \"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {alert}\r\n      <SimpleHeader name=\"Pajak\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <h3>List Pajak</h3>\r\n                  <div style={{ textAlign: \"right\" }}>\r\n                    <Link className=\"btn btn-info\" to=\"/admin/pajak/create\">\r\n                      Add\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allPajak}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: \"persentase\",\r\n                      text: \"Persentase\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"keterangan\",\r\n                      text: \"Keterangan\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"\",\r\n                      text: \"\",\r\n                      formatter: (cell, row, index) => {\r\n                        return (\r\n                          <ButtonGroup>\r\n                            <Button>\r\n                              <Link\r\n                                to={redirectPrefix + row.id}\r\n                                id={\"tooltip_\" + row.id}\r\n                              >\r\n                                <i className=\"fas fa-user-edit\" />\r\n                              </Link>\r\n                            </Button>\r\n                            <UncontrolledTooltip\r\n                              delay={0}\r\n                              target={\"tooltip_\" + row.id}\r\n                            >\r\n                              Edit\r\n                            </UncontrolledTooltip>\r\n                            <Button\r\n                              id=\"btn-acquirer\"\r\n                              onClick={() => setQuestionAlert(row.id)}\r\n                            >\r\n                              <i className=\"fas fa-trash\" />\r\n                            </Button>\r\n                            <UncontrolledTooltip\r\n                              delay={0}\r\n                              placement=\"top\"\r\n                              target=\"btn-acquirer\"\r\n                            >\r\n                              Delete Alamat\r\n                            </UncontrolledTooltip>\r\n                          </ButtonGroup>\r\n                        );\r\n                      },\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        rowEvents={rowEvents}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pajak;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { \r\n  Card, \r\n  Button, \r\n  Row, \r\n  Col, \r\n  CardBody, \r\n  CardHeader, \r\n  Collapse, \r\n  Container,\r\n  Form, \r\n  FormGroup, \r\n  Label, \r\n  Input \r\n} from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst rak = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allRak, setAllRak] = useState([]);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n  const [rakCode, setRakCode] = useState(\"\");\r\n  const [keterangan, setKeterangan] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  \r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, rakCode, keterangan);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort, rakCode, keterangan) => {\r\n    getRak(page, perPage, sort, rakCode, keterangan);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setRakCode(rakCode);\r\n    setKeterangan(keterangan);\r\n    \r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort, rakCode, keterangan)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getRak(page, perPage, currentSort, \"\", \"\");\r\n  }, []);\r\n\r\n  const getRak = async (page, perPage, currentSort, rak_code = null, keterangan = null) => {\r\n    let filter = {\r\n       page: page, \r\n       per_page: perPage,\r\n       id_warehouse: parseInt(warehouse) \r\n      }\r\n      if (rak_code !== null) {\r\n        filter = Object.assign(filter, { rak_code: rak_code })\r\n      }\r\n      if (keterangan !== null) {\r\n        filter = Object.assign(filter, { keterangan: keterangan })\r\n      }\r\n    const data = filter;\r\n    const headers = {\r\n      'Authorization': `Bearer ${token}`,\r\n    };\r\n    const res = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/rak `, data, { headers })\r\n      setAllRak(res.data.response);\r\n      setPage(res.data.current_page + 1);\r\n      setPerpage(res.data.per_page);\r\n      setTotalItem(res.data.total_item);\r\n    }\r\n\r\n  const reset = () => {\r\n    setKeterangan(\"\");\r\n    setRakCode(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n     <SimpleHeader name=\"Rak\" parentName=\"Inventory\" />\r\n      <Container className=\"mt--6\" fluid>\r\n       <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>List Rak</h3>\r\n                  <div style={{ textAlign: \"right\" }}>\r\n                    <Link className=\"btn btn-info\" to=\"/admin/rak/create\">\r\n                      Tambah Rak\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <h3 onClick={toggleOpen} >Search &nbsp;\r\n                  {\r\n                    isOpen === true ? <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i> : <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  }\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                        <Row md=\"12\">\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Kode Rak</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Kode Rak\"\r\n                                value={rakCode}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, e.target.value, rakCode)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Button type=\"button\" onClick={reset} color=\"secondary\">Reset</Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Collapse>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allRak}\r\n                  keyField=\"id\"\r\n                  search={ {\r\n                    defaultSearch: 'search something here'\r\n                  } }\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      }\r\n                    },\r\n                    {\r\n                      dataField: \"rak_code\",\r\n                      text: \"Kode Rak\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"keterangan\",\r\n                      text: \"Keterangan\",\r\n                      sort: true,\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n       </Row>\r\n     </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default rak;","/*eslint-disable*/\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  CardBody,\r\n  Form,\r\n  CardFooter,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Container,\r\n} from \"reactstrap\";\r\n\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nconst CreateRak = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = localStorage.warehouse;\r\n  const username = localStorage.username;\r\n  const history = useHistory();\r\n\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [keterangan, setKeterangan] = useState(\"\");\r\n  const [minimumstock, setMinimumStock] = useState([]);\r\n  const [area, setArea] = useState([]);\r\n  const [sisi, setSisi] = useState([]);\r\n  const [tingkat, setTingkat] = useState([]);\r\n  const [panjang, setPanjang] = useState([]);\r\n  const [lebar, setLebar] = useState([]);\r\n  const [tinggi, setTinggi] = useState([]);\r\n  const [status, setStatus] = useState([]);\r\n  const [image, setImage] = useState(\"\");\r\n\r\n  function CreateData() {\r\n    setLoading(true);{\r\n    CreateRak();\r\n    }\r\n  }\r\n  const CreateRak = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    \r\n    const myjson = JSON.stringify ({\r\n        warehouse_id: parseInt(warehouse) ,\r\n        area,\r\n        sisi,\r\n        tingkat,\r\n        panjang,\r\n        lebar,\r\n        tinggi,\r\n        minimum_stok: parseInt(minimumstock),   \r\n        active_flag: status,\r\n        keterangan,\r\n        active_flag:1\r\n    });     \r\n    let data = new FormData();\r\n    data.append(\"body\",myjson)\r\n    data.append(\"desain\",image)\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/rak/save`, data, { headers })\r\n      .then(function (response) {\r\n        history.push(\"/admin/rak\");\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    {\r\n      CreateData();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SimpleHeader name=\"Tambah Rak\" parentName=\"Master\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <Form onSubmit={handleSubmit}>\r\n                <CardBody>\r\n                  <Row md=\"12\">\r\n                      <Col md=\"6\">\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Area\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Area\"\r\n                              placeholder=\"Masukan Area\"\r\n                              value={area}\r\n                              onChange={(e) => {\r\n                                setArea(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Sisi\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"SISI\"\r\n                              placeholder=\"Masukan sisi\"\r\n                              value={sisi}\r\n                              onChange={(e) => {\r\n                                setSisi(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Tingkat\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Tinggi\"\r\n                              placeholder=\"Masukan Tingkat\"\r\n                              value={tingkat}\r\n                              onChange={(e) => {\r\n                                setTingkat(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Dimensi\r\n                          </Label>\r\n                          <Col sm={2}>\r\n                            <Input\r\n                            type=\"text\"\r\n                            name=\"panjang\"\r\n                            placeholder=\"P\"\r\n                            value={panjang}\r\n                           onChange={(e) => {\r\n                              setPanjang(e.target.value);\r\n                            }}\r\n                            />\r\n                          </Col>\r\n                          <Col sm={3}>\r\n                            <Input\r\n                            type=\"text\"\r\n                            name=\"lebar\"\r\n                            placeholder=\"L\"\r\n                            value={lebar}\r\n                            onChange={(e) => {\r\n                              setLebar(e.target.value);\r\n                             \r\n                            }}\r\n                            />\r\n                          </Col>\r\n                          <Col sm={2}>\r\n                            <Input\r\n                            type=\"text\"\r\n                            name=\"tinggi\"\r\n                            placeholder=\"T\"\r\n                            value={tinggi}\r\n                            onChange={(e) => {\r\n                              setTinggi(e.target.value);\r\n                             \r\n                            }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"6\">\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Minimum Stock\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                            type=\"text\"\r\n                            name=\"Minimum Stock\"\r\n                            placeholder=\"Masukan Stock\"\r\n                            value={minimumstock}\r\n                            onChange={(e) => {\r\n                              setMinimumStock(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                              >\r\n                                Status\r\n                              </Label>\r\n                                <Col sm={7}>\r\n                                  <div style={{ display: \"flex\" }}>\r\n                                    <div className=\"custom-control custom-radio mb-3\">\r\n                                      <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"customRadio11\"\r\n                                        name=\"custom-radio-4\"\r\n                                        type=\"checkbox\"\r\n                                        value={1}\r\n                                        checked={status === 1}\r\n                                        onChange={() => setStatus(1)}\r\n                                      />\r\n                                      <Label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"customRadio11\"\r\n                                      >\r\n                                        Aktif\r\n                                      </Label>\r\n                                    </div>\r\n                                    <div\r\n                                      className=\"custom-control custom-radio mb-3\"\r\n                                      style={{ marginLeft: \"20px\" }}\r\n                                    >\r\n                                      <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"customRadio12\"\r\n                                        name=\"custom-radio-4\"\r\n                                        type=\"radio\"\r\n                                        value={2}\r\n                                        checked={status === 2}\r\n                                        onChange={() => setStatus(2)}\r\n                                      />\r\n                                      <Label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"customRadio12\"\r\n                                      >\r\n                                        Tidak Aktif\r\n                                      </Label>\r\n                                    </div>\r\n                                  </div>\r\n                                </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                            >\r\n                                FOTO \r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                                id=\"exampleFile\"\r\n                                name=\"file\"\r\n                                type=\"file\"\r\n                                onChange={(event) => {\r\n                                    setImage(event.target.files[0]);\r\n                                }}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                              >\r\n                                Keterangan\r\n                              </Label>\r\n                              <Col sm={7}>\r\n                                <Input\r\n                                  type=\"textarea\"\r\n                                  name=\"keterangan\"\r\n                                  placeholder=\"Masukan keterangan\"\r\n                                  value={keterangan}\r\n                                  onChange={(e) => {\r\n                                    setKeterangan(e.target.value);\r\n                                  }}\r\n                                />\r\n                              </Col>\r\n                        </FormGroup>\r\n                      </Col>\r\n                  </Row>\r\n                </CardBody>\r\n                <CardFooter>\r\n                    {!isLoading && (<Button color=\"primary\" type=\"submit\">\r\n                      Simpan\r\n                    </Button>)}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {\"\"}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/item\">\r\n                      Kembali\r\n                    </Link>\r\n                </CardFooter>\r\n               </Form>      \r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default CreateRak;","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  CardBody,\r\n  CardHeader,\r\n  Container,\r\n  UncontrolledTooltip,\r\n  ButtonGroup,\r\n  Collapse,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\n\r\nconst Info = (props) => {\r\n  const token = localStorage.token;\r\n  const warehouse = localStorage.warehouse;\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n  const redirectPrefix = `/admin/alamat/edit/`;\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allAddress, setAllAddress] = useState([]);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n\r\n  const [province, setProvince] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [npwp, setNpwp] = useState(\"\");\r\n\r\n  const [allInfo, setAllInfo] = useState([]);\r\n  const [menu, setMenu] = useState(\"\");\r\n  const [action, setAction] = useState(\"\");\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(\r\n        page,\r\n        perPage,\r\n        currentSort,\r\n        province,\r\n        city,\r\n        address,\r\n        phoneNumber,\r\n        npwp\r\n      );\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort);\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const updateDataTable = (\r\n    page,\r\n    perPage,\r\n    sort,\r\n    province,\r\n    city,\r\n    address,\r\n    phoneNumber,\r\n    npwp\r\n  ) => {\r\n    getAddress(page, perPage, sort, province, city, address, phoneNumber, npwp);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setProvince(province);\r\n    setCity(city);\r\n    setAddress(address);\r\n    setPhoneNumber(phoneNumber);\r\n    setNpwp(npwp);\r\n  };\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`;\r\n      updateDataTable(\r\n        page,\r\n        perPage,\r\n        sort,\r\n        province,\r\n        city,\r\n        address,\r\n        phoneNumber,\r\n        npwp\r\n      );\r\n    }\r\n  };\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAddress(page, perPage, currentSort, \"\", \"\");\r\n  }, []);\r\n\r\n  const getAddress = (\r\n    page,\r\n    perPage,\r\n    currentSort,\r\n    menu = null,\r\n    action = null\r\n  ) => {\r\n    let filter = {\r\n      page: page,\r\n      per_page: perPage,\r\n      warehouse_id: parseInt(warehouse),\r\n    };\r\n    if (menu !== null) {\r\n      filter = Object.assign(filter, { menu: menu });\r\n    }\r\n    if (action !== null) {\r\n      filter = Object.assign(filter, { action: action });\r\n    }\r\n    const data = filter;\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/history-actions/page`,\r\n        data,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        console.log(data);\r\n        setAllInfo(data.data.response);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const delateAddress = (id) => {\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/address/delete/${id}`,\r\n        null,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setSuccessAlert();\r\n        getAddress();\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const setSuccessAlert = () => {\r\n    setAlert(\r\n      <SweetAlert\r\n        success\r\n        showConfirm\r\n        confirmBtnText=\"Ok\"\r\n        title=\"Alamat deleted\"\r\n        onCancel={hideAlert}\r\n        onConfirm={hideAlert}\r\n      />\r\n    );\r\n  };\r\n\r\n  const setQuestionAlert = (id) => {\r\n    setAlert(\r\n      <SweetAlert\r\n        warning\r\n        showCancel\r\n        confirmBtnText=\"Yes\"\r\n        confirmBtnBsStyle=\"danger\"\r\n        title=\"Are you sure?\"\r\n        onConfirm={() => delateAddress(id)}\r\n        onCancel={hideAlert}\r\n        focusCancelBtn\r\n      />\r\n    );\r\n  };\r\n\r\n  const hideAlert = () => {\r\n    setAlert(null);\r\n  };\r\n\r\n  const rowEvents = {\r\n    onDoubleClick: (e, row, rowIndex) => {\r\n      setHide(false);\r\n      setSelectedAcquirerId(row.acquirer_id);\r\n      setSelectAcquirerName(row.acquirer_name);\r\n    },\r\n  };\r\n\r\n  const reset = () => {\r\n    setProvince(\"\");\r\n    setCity(\"\");\r\n    setAddress(\"\");\r\n    setPhoneNumber(\"\");\r\n    setNpwp(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {alert}\r\n      <SimpleHeader name=\"Info\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <h3>List Info</h3>\r\n                  <div style={{ textAlign: \"right\" }}>\r\n                    {/* <Link className=\"btn btn-info\" to=\"/admin/alamat/create\">\r\n                      Add\r\n                    </Link> */}\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allInfo}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: \"username\",\r\n                      text: \"Username\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"menu\",\r\n                      text: \"Menu\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"action\",\r\n                      text: \"Action\",\r\n                      sort: true,\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        rowEvents={rowEvents}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Info;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  \r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  CardBody,\r\n  CardHeader,\r\n  CardFooter,\r\n  Table,\r\n  ButtonGroup,\r\n  Form,\r\n  FormGroup,\r\n  UncontrolledTooltip,\r\n  Label,\r\n  Input,\r\n  \r\n} from \"reactstrap\";\r\nimport { Link,useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst PenawaranPo = () => {\r\n  const token = localStorage.token;\r\n  const username = localStorage.username;\r\n  const warehouse = localStorage.warehouse;\r\n  let history = useHistory();\r\n  \r\n  // const warehouse = parseInt(localStorage.warehouse);\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const redirectPrefix = `/admin/item/edit/`;\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n  const [page, setPage] = useState(1);\r\n  const [hargatotal,setHargaTotal] = useState(\"\");\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n  const [nameItem, setNameItem] = useState(\"\");\r\n  const [satuan, setSatuan] = useState(\"\");\r\n  const [allSatuan, setAllSatuan] = useState([]);\r\n  const [allPo, setAllPo] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [usernamePo, setUsernamePo] = useState(username);\r\n  const [Item_Code,setItemCode] = useState(\"\");\r\n  const [qty,setQty] = useState([]);\r\n  const [harga, setHarga] = useState(\"\");\r\n  const [poType, setPoType] = useState(\"\");\r\n  const [persons, setPersons] = useState([]);\r\n  const [person, setPerson] = useState(\"\");\r\n  const [payment_method,setPaymentMethod] = useState([]);\r\n  const [durasipo,setDurasiPo] = useState(\"\");\r\n  const [descriptionPayment,setDescriptionPayment] = useState(\"\");\r\n  const [descriptionPo,setDescriptionPo] = useState(\"\");\r\n  const [jangkaWaktu,setJangkaWaktu] = useState([]);\r\n  const [is_cicil,setIsCicil] = useState([]);\r\n\r\n  const [inputList, setInputList] = useState([\r\n    {\r\n      item_id: \"\",\r\n      qty: \"\",\r\n      satuan: \"\",\r\n      harga: \"\",\r\n      qty_fisik: \"\",\r\n      keterangan_fisik: \"\",\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    getPerson();\r\n    getSatuan();\r\n\r\n  }, []);\r\n\r\n  const getPerson = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/person/list`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        setPersons(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getSatuan = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/uom/list`, { headers })\r\n      .then((data) => {\r\n        setAllSatuan(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n\r\n  function CreateData() {\r\n    setLoading(true);\r\n    \r\n   }\r\n\r\n \r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, nameItem);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort);\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const updateDataTable = (page, perPage, sort, nameItem) => {\r\n    getItem(page, perPage, sort, nameItem);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setNameItem(nameItem);\r\n    getPrice(page, perPage, sort);\r\n  };\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`;\r\n      updateDataTable(page, perPage, sort, nameItem);\r\n    }\r\n  };\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  // ambil data dari harga\r\n\r\n  useEffect(() => {\r\n    getPo(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  // fungsi dari ambil data\r\n  const getPo = (page, perPage, currentSort) => {\r\n    \r\n    let filter = {\r\n       page: page,\r\n       per_page: perPage, \r\n      };\r\n\r\n    const data = filter;\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/purchase-order/page`, data, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setAllPo(data.data.response);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n\r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...inputList];\r\n    list.splice(index, 1);\r\n    setInputList(list);\r\n  };\r\n\r\n  // handle click event of the Add button\r\n  const handleAddClick = () => {\r\n    setInputList([\r\n      ...inputList,\r\n      {\r\n        item_id: \"\",\r\n        qty: \"\",\r\n        satuan: \"\",\r\n        harga: \"\",\r\n        qty_fisik: \"\",\r\n        keterangan_fisik: \"\",\r\n      },\r\n    ]);\r\n  };\r\n\r\n  function CreateData() {\r\n    setLoading(true);\r\n    let data = {\r\n      warehouse_id : parseInt(warehouse),\r\n      username_po : \"\",\r\n      payment_method : [],\r\n      jangka_waktu: parseInt(jangkaWaktu),\r\n      keterangan_payment: descriptionPayment,\r\n      is_cicil: parseInt(is_cicil),\r\n      person: parseInt(person),\r\n      po_type : poType,\r\n      durasi_po: durasipo,\r\n      keterangan_po : descriptionPo ,\r\n      approve : 0,\r\n      username_admin: \"\",\r\n      admin_approval: 0,\r\n      keterangan_admin: \"\",\r\n      username_validator : \"\",\r\n      clear : 0,\r\n      keterangan_validator : \"\" ,\r\n      username_gudang : \"\",\r\n      status_barang : 0,\r\n      keterangan_gudang : \"\",\r\n      username_kurir : \"\",\r\n      \r\n      items : []\r\n      \r\n    };\r\n    axios\r\n        .post(\r\n          `${process.env.REACT_APP_API_BASE_URL}/purchase-order/save`,\r\n          data,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        )\r\n        .then(function (response) {\r\n          history.push(\"/admin/po\");\r\n        })\r\n        .then((json) => {\r\n          setLoading(false);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n  }\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    {\r\n      CreateData();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n        <Row>\r\n          <div className=\"col\">\r\n              <Card>\r\n                <Form onSubmit={handleSubmit}>\r\n                <CardBody>\r\n                    <CardHeader>\r\n                      <h3>Daftar Purchase Order</h3>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                      <Row md=\"12\">\r\n                          <Col md=\"6\">\r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={5}\r\n                              >\r\n                                Supplier\r\n                              </Label>\r\n                              <Col sm={7}>\r\n                              <Input\r\n                                  name=\"person\"\r\n                                  type=\"select\"\r\n                                  value={person}\r\n                                  onChange={(e) => {\r\n                                    setPerson(e.target.value);\r\n                                  }}\r\n                                >\r\n                                  <option value=''>Pilih Supplier</option>\r\n                                  {persons.map((person, key) => {\r\n                                      return (\r\n                                        <option key={key} value={person.id}>\r\n                                          {person.person_name}\r\n                                        </option>\r\n                                      );\r\n                                    })}\r\n                                  </Input>\r\n                              </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={5}\r\n                              >\r\n                                Keterangan PO\r\n                              </Label>\r\n                              <Col sm={7}>\r\n                                <Input\r\n                                  type=\"text\"\r\n                                  name=\"desc\"\r\n                                  placeholder=\"Masukan Keterangan PO\"\r\n                                  value={descriptionPo}\r\n                                  onChange={(e) => {\r\n                                    setDescriptionPo(e.target.value);\r\n                                  }}\r\n                                />\r\n                              </Col>                             \r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={5}\r\n                            >\r\n                              Tipe PO\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                                name=\"Tipe Po\"\r\n                                type=\"select\"\r\n                                value={poType}\r\n                                onChange={(e) => {\r\n                                  setPoType(e.target.value);\r\n                                }}\r\n                              >\r\n                                <option value={1}>Ready</option>\r\n                                <option value={2}>Indent</option>\r\n                              </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={5}\r\n                              >\r\n                                Metode Pembayaran\r\n                              </Label>\r\n                              <Col sm={7}>\r\n                                  <Input                                 \r\n                                  name=\"satuan\"\r\n                                  type=\"select\"\r\n                                  value={payment_method}\r\n                                  onChange={(e) => {\r\n                                    setPaymentMethod(e.target.value);\r\n                                  }}\r\n                                >\r\n                                  <option value={1}>Tunai/Transfer</option>\r\n                                  <option value={2}>Termin/Tempo</option>\r\n                                  <option value={3}>Deposito</option>\r\n                                </Input>\r\n                              </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={5}\r\n                              >\r\n                                Keterangan Pembayaran\r\n                              </Label>\r\n                              <Col sm={7}>\r\n                                  <Input                                 \r\n                                  name=\"satuan\"\r\n                                  type=\"select\"\r\n                                  value={descriptionPayment}\r\n                                  onChange={(e) => {\r\n                                    setDescriptionPayment(e.target.value);\r\n                                  }}\r\n                                >\r\n                                  <option value={1}>Tunai/Transfer</option>\r\n                                  <option value={2}>Termin/Tempo</option>\r\n                                  <option value={3}>Deposito</option>\r\n                                </Input>\r\n                              </Col>\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"6\">\r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={5}\r\n                              >\r\n                                Durasi PO\r\n                              </Label>\r\n                              <Col sm={7}>\r\n                              <Input\r\n                                  type=\"text\"\r\n                                  name=\"barcode\"\r\n                                  placeholder=\"Masukan Durasi Tempo\"\r\n                                  value={durasipo}\r\n                                  onChange={(e) => {\r\n                                    setDurasiPo(e.target.value);\r\n                                  }}\r\n                                />\r\n                              </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={5}\r\n                              >\r\n                                Jangka Waktu\r\n                              </Label>\r\n                              <Col sm={7}>\r\n                              <Input\r\n                                  type=\"number\"\r\n                                  name=\"jangka waktu\"\r\n                                  placeholder=\"Masukan Jangka Waktu\"\r\n                                  value={jangkaWaktu}\r\n                                  onChange={(e) => {\r\n                                    setJangkaWaktu(e.target.value);\r\n                                  }}\r\n                                />\r\n                              </Col>\r\n                            </FormGroup>\r\n                            \r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={5}\r\n                              >\r\n                                Cicilan\r\n                              </Label>\r\n                              <Col sm={7}>\r\n                              <Input\r\n                              name=\"satuan\"\r\n                              type=\"select\"\r\n                              value={is_cicil}\r\n                              onChange={(e) => {\r\n                                setSatuan(e.target.value);\r\n                              }}\r\n                            >\r\n                              <option value={1}>Lunas</option>\r\n                              <option value={2}>Belum Lunas</option>\r\n                            </Input>\r\n                              </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={5}\r\n                              >\r\n                                Nominal Cicilan\r\n                              </Label>\r\n                              <Col sm={7}>\r\n                                <Input\r\n                                  type=\"text\"\r\n                                  name=\"desc\"\r\n                                  placeholder=\"Masukan Nominal Cicilan\"\r\n                                  value={is_cicil}\r\n                                  onChange={(e) => {\r\n                                    setIsCicil(e.target.value);\r\n                                  }}\r\n                                />\r\n                              </Col>\r\n                            </FormGroup>\r\n                          </Col>\r\n                      </Row>\r\n                      <Table>\r\n                              <thead>\r\n                                <tr>\r\n                                  <th>\r\n                                    <center>Nama Item</center>\r\n                                  </th>\r\n                                  <th>\r\n                                    <center>Kode Item</center>\r\n                                  </th>\r\n                                  <th>\r\n                                    <center>Quantity</center>\r\n                                  </th>\r\n                                  <th>\r\n                                    <center>Satuan</center>\r\n                                  </th>\r\n                                  <th>\r\n                                    <center>Harga</center>\r\n                                  </th>\r\n                                  <th>\r\n                                    <center>Aksi</center>\r\n                                  </th>\r\n                                </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                            </tbody>\r\n                      </Table>\r\n                      {inputList.map((x, i) => {\r\n                        return (\r\n                          <div key={i}>\r\n                            <Table className=\"Table\">\r\n                              <tbody>\r\n                                <tr>\r\n                                  <td>\r\n                                  <Input\r\n                                      type=\"text\"\r\n                                      name=\"desc\"\r\n                                      placeholder=\"Nama Item\"\r\n                                      value={nameItem}\r\n                                      onChange={(e) => {\r\n                                        setNameItem(e.target.value);\r\n                                      }}\r\n                                    />\r\n                                  </td>\r\n                                  <td>\r\n                                  <Input\r\n                                      type=\"text\"\r\n                                      name=\"desc\"\r\n                                      placeholder=\"Kode Item\"\r\n                                      value={Item_Code}\r\n                                      onChange={(e) => {\r\n                                        setItemCode(e.target.value);\r\n                                      }}\r\n                                    />\r\n                                  </td>\r\n                                  <td>\r\n                                  <Input\r\n                                      type=\"text\"\r\n                                      name=\"desc\"\r\n                                      placeholder=\"Masukan Quantity\"\r\n                                      value={qty}\r\n                                      onChange={(e) => {\r\n                                        setQty(e.target.value);\r\n                                      }}\r\n                                    />\r\n                                  </td>\r\n                                  <td>\r\n                                  <Input\r\n                                      name=\"Pilih Satuan\"\r\n                                      type=\"select\"\r\n                                      value={satuan}\r\n                                      onChange={(e) => {\r\n                                      setSatuan(e.target.value);\r\n                                      }}\r\n                                  >\r\n                                      <option value=\"\">Pilih Satuan</option>\r\n                                      {allSatuan.map((s, key) => {\r\n                                      return (\r\n                                          <option key={key} value={s.name}>\r\n                                          {s.description}\r\n                                          </option>\r\n                                      );\r\n                                      })}\r\n                                  </Input>\r\n                                  </td>\r\n                                  <td>\r\n                                  <Input\r\n                                      type=\"text\"\r\n                                      name=\"desc\"\r\n                                      placeholder=\"Masukan Harga\"\r\n                                      value={harga}\r\n                                      onChange={(e) => {\r\n                                        setHarga(e.target.value);\r\n                                      }}\r\n                                    />\r\n                                  </td>\r\n                                  <td>\r\n                                    {inputList.length !== 1 && (\r\n                                      <Button\r\n                                        color=\"primare\"\r\n                                        onClick={() => handleRemoveClick(i)}\r\n                                      >\r\n                                        <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                                      </Button>\r\n                                    )}\r\n                                    {inputList.length - 1 === i && (\r\n                                      <Button\r\n                                        color=\"primare\"\r\n                                        onClick={handleAddClick}\r\n                                      >\r\n                                        <i className=\"fa fa-plus\"></i>\r\n                                      </Button>\r\n                                    )}\r\n                                  </td>\r\n                                </tr>\r\n                              </tbody>\r\n                            </Table>\r\n                          </div>\r\n                        );  \r\n                      })}\r\n                    </CardBody>\r\n                    <CardFooter >\r\n                    <Row md=\"12\">\r\n                          <Col md=\"8\">\r\n                          </Col>\r\n                          <Col md=\"4\">\r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                              >\r\n                                Harga Total\r\n                              </Label>\r\n                              <Col sm={6}>\r\n                              <Input\r\n                                  type=\"text\"\r\n                                  name=\"barcode\"\r\n                                  placeholder=\"Harga Total\"\r\n                                  value={hargatotal}\r\n                                  onChange={(e) => {\r\n                                    setHargaTotal(e.target.value);\r\n                                  }}\r\n                                />\r\n                              </Col>\r\n                            </FormGroup>\r\n                          </Col>\r\n                      </Row>\r\n                    </CardFooter>\r\n                </CardBody>\r\n                <CardFooter>\r\n                      {!isLoading && (\r\n                        <Button color=\"primary\" type=\"submit\">\r\n                          Simpan\r\n                        </Button>\r\n                      )}\r\n                      {isLoading && (\r\n                        <Button color=\"primary\" disabled>\r\n                          <i className=\"fas fa-spinner fa-spin\"></i>\r\n                          {\"\"}\r\n                          loading...\r\n                        </Button>\r\n                      )}\r\n                      <Link className=\"btn btn-info\" to=\"/admin/po\">\r\n                        Kembali\r\n                      </Link>\r\n                </CardFooter>\r\n                </Form>\r\n                <CardBody>\r\n                  <h3>Data PO </h3>\r\n                  <ToolkitProvider\r\n                    rowNumber={rowIndex}\r\n                    data={allPo}\r\n                    keyField=\"id\"\r\n                    columns={[\r\n                      {\r\n                        dataField: \"no\",\r\n                        text: \"#\",\r\n                        sort: true,\r\n                        page: 1,\r\n                        formatter: (cell, row, index) => {\r\n                          let currentRow = ++index;\r\n                          return currentRow + rowIndex;\r\n                        },\r\n                      },\r\n                      {\r\n                        dataField: \"order_code\",\r\n                        text: \"Kode PO\",\r\n                        sort: true,\r\n                      },\r\n                      {\r\n                        dataField: \"supplier\",\r\n                        text: \"Supplier\",\r\n                        sort: true,\r\n                      },\r\n                      {\r\n                        dataField: \"keterangan_payment\",\r\n                        text: \"keterangan Pembayaran\",\r\n                        sort: true,\r\n                      },\r\n                      {\r\n                        dataField: \"is_cicil\",\r\n                        text: \"Termin\",\r\n                        sort: true,\r\n                      },\r\n                      {\r\n                        dataField: \"keterangan_po\",\r\n                        text: \"Keterangan Po\",\r\n                        sort: true,\r\n                      },\r\n                      {\r\n                        dataField: \"approve\",\r\n                        text: \"Status\",\r\n                        sort: true,\r\n                        formatter: (cell, row) => {\r\n                          return row.approve === 0\r\n                            ? 'proses'\r\n                            : row.approve === 1\r\n                            ? 'Setuju'\r\n                            : 'Tidak Setuju';\r\n                        },\r\n                      },\r\n                      {\r\n                        dataField: \"po_type\",\r\n                        text: \"Tipe PO\",\r\n                        sort: true,\r\n                      },\r\n                      {\r\n                        dataField: \"aksi\", text: \"Aksi\", formatter: (cell, row, index) => {\r\n                          return (\r\n                            <ButtonGroup>\r\n                              <Button>\r\n                                <Link\r\n                                  to={redirectPrefix + row.id}\r\n                                  id={\"tooltip_\" + row.id}\r\n                                >\r\n                                  <i className=\"fas fa-user-edit\" />\r\n                                </Link>\r\n                              </Button>\r\n                              <UncontrolledTooltip delay={0} target={\"tooltip_\" + row.id}>\r\n                                VALIDASI\r\n                              </UncontrolledTooltip>\r\n                            </ButtonGroup>\r\n                          )\r\n                        }\r\n                      },\r\n                    ]}\r\n                  >\r\n                    {(props) => (\r\n                      <div className=\"py-4 table-responsive\">\r\n                        <BootstrapTable\r\n                          remote\r\n                          {...props.baseProps}\r\n                          bootstrap4={true}\r\n                          bordered={false}\r\n                          hover={true}\r\n                          pagination={paginationFactory({ ...paginationOption })}\r\n                          onTableChange={handleTableChange}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </ToolkitProvider>\r\n                </CardBody>\r\n              </Card>\r\n          </div>\r\n        </Row>  \r\n    </>\r\n  );\r\n}\r\n\r\nexport default PenawaranPo;","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Card, Button, Row, Col, CardBody, CardHeader, UncontrolledTooltip, ButtonGroup, Collapse, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst Validator = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  const redirectPrefix = `/admin/purchase-order/validasi-pimpinan-po/edit/`;\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [allPo, setAllPo] = useState([]);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n  const [uomCode, setUomCode] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, uomCode, description);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort, uomCode, description) => {\r\n    getPo(page, perPage, sort, uomCode, description);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setUomCode(uomCode);\r\n    setDescription(description);\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort,  uomCode, description)\r\n    }\r\n  }\r\n\r\n  const toggle = tab => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  }\r\n  useEffect(() => {\r\n    getPo(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  // fungsi dari ambil data\r\n  const getPo = (page, perPage, currentSort) => {\r\n    \r\n    let filter = {\r\n      page: page, \r\n      per_page: perPage,\r\n      approve:1,\r\n      admin_approval: 1,\r\n      clear : 0,\r\n      \r\n      };\r\n    const data = filter;\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/purchase-order/page`, data, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setAllPo(data.data.response);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const reset = () => {\r\n    setUomCode(\"\");\r\n    setDescription(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\");\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>Validasi Pimpinan</h3>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n              <h3 onClick={toggleOpen} >Search &nbsp;\r\n                  {\r\n                    isOpen === true ? <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i> : <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  }\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                        <Row md=\"12\">\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Kode Uom</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Kode Uom\"\r\n                                value={uomCode}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, e.target.value, description)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Deskripsi</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Deskripsi\"\r\n                                value={description}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, uomCode, e.target.value)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Button type=\"button\" onClick={reset} color=\"secondary\">Reset</Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Collapse>\r\n                    <ToolkitProvider\r\n                            rowNumber={rowIndex}\r\n                            data={allPo}\r\n                            keyField=\"id\"\r\n                            columns={[\r\n                            {\r\n                                dataField: \"no\",\r\n                                text: \"#\",\r\n                                sort: true,\r\n                                page: 1,\r\n                                formatter: (cell, row, index) => {\r\n                                let currentRow = ++index;\r\n                                return currentRow + rowIndex;\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"order_code\",\r\n                                text: \"Kode PO\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"total_qty\",\r\n                                text: \"Total Qty\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"keterangan_payment\",\r\n                                text: \"keterangan Pembayaran\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"is_cicil\",\r\n                                text: \"Termin\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"keterangan_po\",\r\n                                text: \"Keterangan Po\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"approve\",\r\n                                text: \"Status\",\r\n                                sort: true,\r\n                                formatter: (cell, row) => {\r\n                                  return row.status_barang === 0\r\n                                    ? 'proses'\r\n                                    : row.status_barang === 1\r\n                                    ? 'Setuju'\r\n                                    : 'Tidak Setuju';\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"po_type\",\r\n                                text: \"Tipe PO\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"aksi\", text: \"Aksi\", formatter: (cell, row, index) => {\r\n                                return (\r\n                                    <ButtonGroup>\r\n                                    <Button>\r\n                                        <Link\r\n                                        to={redirectPrefix + row.id}\r\n                                        id={\"tooltip_\" + row.id}\r\n                                        >\r\n                                        <i className=\"fas fa-user-edit\" />\r\n                                        </Link>\r\n                                    </Button>\r\n                                    <UncontrolledTooltip delay={0} target={\"tooltip_\" + row.id}>\r\n                                        VALIDASI\r\n                                    </UncontrolledTooltip>\r\n                                    </ButtonGroup>\r\n                                )\r\n                                }\r\n                            },\r\n                            ]}\r\n                        >\r\n                            {(props) => (\r\n                            <div className=\"py-4 table-responsive\">\r\n                                <BootstrapTable\r\n                                remote\r\n                                {...props.baseProps}\r\n                                bootstrap4={true}\r\n                                bordered={false}\r\n                                hover={true}\r\n                                pagination={paginationFactory({ ...paginationOption })}\r\n                                onTableChange={handleTableChange}\r\n                                />\r\n                            </div>\r\n                            )}\r\n                    </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Validator;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport {Card, Button, Row, Col, CardBody, CardHeader, UncontrolledTooltip, ButtonGroup, Collapse, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\n\r\nconst AdminApprovePo = () => {\r\n  const token = localStorage.token;\r\n  const redirectPrefix = `/admin/purchase-order/validasi-admin-approve-po/edit/`;\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allPo, setAllPo] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n  const [uomCode, setUomCode] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n  \r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, uomCode, description);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort, uomCode, description) => {\r\n    getPo(page, perPage, sort, uomCode, description);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setUomCode(uomCode);\r\n    setDescription(description);\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort,  uomCode, description)\r\n    }\r\n  }\r\n\r\n  \r\n  useEffect(() => {\r\n    getPo(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  // fungsi dari ambil data\r\n  const getPo = (page, perPage, currentSort) => {\r\n    \r\n    let filter = { \r\n      \r\n      page: page, \r\n      per_page: perPage,\r\n      approve : 1,\r\n      admin_approval: 0,\r\n      \r\n     \r\n    };\r\n    const data = filter;\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/purchase-order/page`, data, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setAllPo(data.data.response);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const reset = () => {\r\n    setUomCode(\"\");\r\n    setDescription(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>Validasi Admin Approve</h3>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n              <h3 onClick={toggleOpen} >Filter &nbsp;\r\n                  {\r\n                    isOpen === true ? <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i> : <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  }\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                        <Row md=\"12\">\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Kode Uom</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Kode Uom\"\r\n                                value={uomCode}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, e.target.value, description)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Deskripsi</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Deskripsi\"\r\n                                value={description}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, uomCode, e.target.value)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Button type=\"button\" onClick={reset} color=\"secondary\">Reset</Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Collapse>\r\n                    <ToolkitProvider\r\n                rowNumber={rowIndex}\r\n                data={allPo}\r\n                keyField=\"id\"\r\n                columns={[\r\n                  {\r\n                    dataField: \"no\",\r\n                    text: \"#\",\r\n                    sort: true,\r\n                    page: 1,\r\n                    formatter: (cell, row, index) => {\r\n                      let currentRow = ++index;\r\n                      return currentRow + rowIndex;\r\n                    },\r\n                  },\r\n                  {\r\n                    dataField: \"order_code\",\r\n                    text: \"Kode PO\",\r\n                    sort: true,\r\n                  },\r\n                  {\r\n                    dataField: \"keterangan_payment\",\r\n                    text: \"keterangan Pembayaran\",\r\n                    sort: true,\r\n                  },\r\n                  {\r\n                    dataField: \"is_cicil\",\r\n                    text: \"Termin\",\r\n                    sort: true,\r\n                  },\r\n                  {\r\n                    dataField: \"keterangan_po\",\r\n                    text: \"Keterangan Po\",\r\n                    sort: true,\r\n                  },\r\n                  {\r\n                    dataField: \"admin_approval\",\r\n                    text: \"Status\",\r\n                    sort: true,\r\n                    formatter: (cell, row) => {\r\n                      return row.status_barang === 0\r\n                        ? 'proses'\r\n                        : row.status_barang === 1\r\n                        ? 'Setuju'\r\n                        : 'Tidak Setuju';\r\n                    },\r\n                  },\r\n                  {\r\n                    dataField: \"po_type\",\r\n                    text: \"Tipe PO\",\r\n                    sort: true,\r\n                    formatter: (cell, row) => {\r\n                        return row.approve === 1 ? \"Ready\" : \"Indent\" ;\r\n                      },\r\n                  },\r\n                  {\r\n                    dataField: \"aksi\", text: \"Aksi\", formatter: (cell, row, index) => {\r\n                      return (\r\n                        <ButtonGroup>\r\n                          <Button>\r\n                            <Link\r\n                              to={redirectPrefix + row.id}\r\n                              id={\"tooltip_\" + row.id}\r\n                            >\r\n                              <i className=\"fas fa-user-edit\" />\r\n                            </Link>\r\n                          </Button>\r\n                          <UncontrolledTooltip delay={0} target={\"tooltip_\" + row.id}>\r\n                            VALIDASI\r\n                          </UncontrolledTooltip>\r\n                        </ButtonGroup>\r\n                      )\r\n                    }\r\n                  },\r\n                ]}\r\n              >\r\n                {(props) => (\r\n                  <div className=\"py-4 table-responsive\">\r\n                    <BootstrapTable\r\n                      remote\r\n                      {...props.baseProps}\r\n                      bootstrap4={true}\r\n                      bordered={false}\r\n                      hover={true}\r\n                      pagination={paginationFactory({ ...paginationOption })}\r\n                      onTableChange={handleTableChange}\r\n                    />\r\n                  </div>\r\n                )}\r\n                    </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminApprovePo;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Card, Button, Row, Col, CardBody, CardHeader, UncontrolledTooltip, ButtonGroup, Collapse, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst ValidasiPo = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const redirectPrefix = `/admin/po/validasi-penawaran-po/edit/`;\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allPo, setAllPo] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n  const [uomCode, setUomCode] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n  \r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, uomCode, description);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort, uomCode, description) => {\r\n    getPo(page, perPage, sort, uomCode, description);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setUomCode(uomCode);\r\n    setDescription(description);\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort,  uomCode, description)\r\n    }\r\n  }\r\n\r\n  \r\n  useEffect(() => {\r\n    getPo(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  // fungsi dari ambil data\r\n  const getPo = (page, perPage, currentSort) => {\r\n    \r\n    let filter = { \r\n      \r\n      page: page, \r\n      per_page: perPage, \r\n      approve: 0,\r\n      admin_approval: 0,\r\n      clear : 0,\r\n      \r\n    \r\n    };\r\n    const data = filter;\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/purchase-order/page`, data, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setAllPo(data.data.response);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const reset = () => {\r\n    setUomCode(\"\");\r\n    setDescription(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>Validasi Penawaran PO</h3>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n              <h3 onClick={toggleOpen} >Search &nbsp;\r\n                  {\r\n                    isOpen === true ? <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i> : <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  }\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                        <Row md=\"12\">\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Kode Uom</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Kode Uom\"\r\n                                value={uomCode}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, e.target.value, description)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Deskripsi</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Deskripsi\"\r\n                                value={description}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, uomCode, e.target.value)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Button type=\"button\" onClick={reset} color=\"secondary\">Reset</Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Collapse>\r\n                    <ToolkitProvider\r\n                            rowNumber={rowIndex}\r\n                            data={allPo}\r\n                            keyField=\"id\"\r\n                            columns={[\r\n                            {\r\n                                dataField: \"no\",\r\n                                text: \"#\",\r\n                                sort: true,\r\n                                page: 1,\r\n                                formatter: (cell, row, index) => {\r\n                                let currentRow = ++index;\r\n                                return currentRow + rowIndex;\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"order_code\",\r\n                                text: \"Kode PO\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"total_qty\",\r\n                                text: \"Total Qty\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"keterangan_payment\",\r\n                                text: \"keterangan Pembayaran\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"is_cicil\",\r\n                                text: \"Termin\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"keterangan_po\",\r\n                                text: \"Keterangan Po\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"approve\",\r\n                                text: \"Status\",\r\n                                sort: true,\r\n                                formatter: (cell, row) => {\r\n                                  return row.status_barang === 0\r\n                                    ? 'proses'\r\n                                    : row.status_barang === 1\r\n                                    ? 'Setuju'\r\n                                    : 'Tidak Setuju';\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"po_type\",\r\n                                text: \"Tipe PO\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"aksi\", text: \"Aksi\", formatter: (cell, row, index) => {\r\n                                return (\r\n                                    <ButtonGroup>\r\n                                    <Button>\r\n                                        <Link\r\n                                        to={redirectPrefix + row.id}\r\n                                        id={\"tooltip_\" + row.id}\r\n                                        >\r\n                                        <i className=\"fas fa-user-edit\" />\r\n                                        </Link>\r\n                                    </Button>\r\n                                    <UncontrolledTooltip delay={0} target={\"tooltip_\" + row.id}>\r\n                                        VALIDASI\r\n                                    </UncontrolledTooltip>\r\n                                    </ButtonGroup>\r\n                                )\r\n                                }\r\n                            },\r\n                            ]}\r\n                        >\r\n                            {(props) => (\r\n                            <div className=\"py-4 table-responsive\">\r\n                                <BootstrapTable\r\n                                remote\r\n                                {...props.baseProps}\r\n                                bootstrap4={true}\r\n                                bordered={false}\r\n                                hover={true}\r\n                                pagination={paginationFactory({ ...paginationOption })}\r\n                                onTableChange={handleTableChange}\r\n                                />\r\n                            </div>\r\n                            )}\r\n                    </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ValidasiPo;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  Row,\r\n  CardBody,\r\n  CardHeader,\r\n  Container,\r\n  UncontrolledTooltip,\r\n  ButtonGroup,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst receivingSo = () => {\r\n  const token = localStorage.token;\r\n  const redirectPrefix = `/admin/receiving-so/edit/`;\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [AllSo, setAllSo] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getAllSo(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  const getAllSo = async (page, perPage, currentSort) => {\r\n    let filter = {\r\n      page: page,\r\n      per_page: perPage,\r\n      approve: 1,\r\n      admin_approval: 1,\r\n      clear : 1,\r\n      status_barang: 0,\r\n    };\r\n    const data = filter;\r\n    const headers = {\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_BASE_URL}/sales-order/page`,\r\n      data,\r\n      { headers }\r\n    );\r\n    setAllSo(res.data.response_data);\r\n    setPage(res.data.current_page + 1);\r\n    setPerpage(res.data.per_page);\r\n    setTotalItem(res.data.total_item);\r\n  };\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort);\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const updateDataTable = (page, perPage, sort) => {\r\n    getAllSo(page, perPage, sort);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n  };\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`;\r\n      updateDataTable(page, perPage, sort);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SimpleHeader name=\"Receiving SO\" parentName=\"Inventory\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <h3>Receiving SO</h3>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={AllSo}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: \"order_code\",\r\n                      text: \"kode SO\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"person\",\r\n                      text: \"Customer\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"keterangan_so\",\r\n                      text: \"Keterangan SO\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"clear\",\r\n                      text: \"Validasi Pimpinan\",\r\n                      sort: true,\r\n                      formatter: (cell, row) => {\r\n                        return row.approve === 1 ? \"DiTerima\" : \"DiTolak\"    ;\r\n                        },\r\n                    },\r\n                    {\r\n                      dataField: \"status_barang\",\r\n                      text: \"Status Barang\",\r\n                      sort: true,\r\n                      formatter: (cell, row) => {\r\n                        return row.status_barang === 0\r\n                          ? 'proses'\r\n                          : row.status_barang === 1\r\n                          ? 'Lengkap'\r\n                          : 'Tidak Lengkap';\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: \"\",\r\n                      text: \"Aksi\",\r\n                      formatter: (cell, row, index) => {\r\n                        return (\r\n                            <ButtonGroup>\r\n                            <Button>\r\n                              <Link\r\n                                to={redirectPrefix + row.id}\r\n                                id={\"tooltip_\" + row.id}\r\n                              >\r\n                                <i className=\"fas fa-user-edit\" />\r\n                              </Link>\r\n                            </Button>\r\n                            <UncontrolledTooltip delay={0} target={\"tooltip_\" + row.id}>\r\n                              VALIDASI\r\n                            </UncontrolledTooltip>\r\n                          </ButtonGroup>\r\n                        );\r\n                      },\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default receivingSo;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { \r\n    Card, \r\n    Button, \r\n    Row, \r\n    Col, \r\n    CardBody, \r\n    CardHeader, \r\n    UncontrolledTooltip, \r\n    ButtonGroup, \r\n    Collapse, \r\n    Form, \r\n    FormGroup, \r\n    Label, \r\n    Input \r\n} from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst ReceivingPo = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const redirectPrefix = `/admin/po/receiving-po/edit/`;\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allReceivingPo, setAllv] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n  const [uomCode, setUomCode] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n  \r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, uomCode, description);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort, uomCode, description) => {\r\n    getReceivingPo(page, perPage, sort, uomCode, description);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setUomCode(uomCode);\r\n    setDescription(description);\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort,  uomCode, description)\r\n    }\r\n  }\r\n\r\n  \r\n  useEffect(() => {\r\n    getReceivingPo(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  // fungsi dari ambil data\r\n  const getReceivingPo = (page, perPage, currentSort) => {\r\n    \r\n    let filter = { \r\n      \r\n      page: page, \r\n      per_page: perPage, \r\n      status: 0,\r\n      \r\n    };\r\n    const data = filter;\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/receiving-po/page`, data, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setAllReceivingPo(data.data.response);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const reset = () => {\r\n    setUomCode(\"\");\r\n    setDescription(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        \r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>Receiving PO</h3>\r\n                  <div style={{ textAlign: 'right' }}>\r\n                    <Link className=\"btn btn-info\" to=\"/admin/receiving-po/create\">\r\n                      Buat Receiving PO\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n              <h3 onClick={toggleOpen} >Search &nbsp;\r\n                  {\r\n                    isOpen === true ? <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i> : <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  }\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                        <Row md=\"12\">\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Kode RFQ</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Kode Uom\"\r\n                                value={uomCode}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, e.target.value, description)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Keterangan</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Deskripsi\"\r\n                                value={description}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, uomCode, e.target.value)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Button type=\"button\" onClick={reset} color=\"secondary\">Reset</Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Collapse>\r\n                    <ToolkitProvider\r\n                            rowNumber={rowIndex}\r\n                            data={allReceivingPo}\r\n                            keyField=\"id\"\r\n                            columns={[\r\n                            {\r\n                                dataField: \"no\",\r\n                                text: \"#\",\r\n                                sort: true,\r\n                                page: 1,\r\n                                formatter: (cell, row, index) => {\r\n                                let currentRow = ++index;\r\n                                return currentRow + rowIndex;\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"receiving_code\",\r\n                                text: \"Kode Receiving\",\r\n                                sort: true,\r\n                            },\r\n                            \r\n                            {\r\n                                dataField: \"code_po\",\r\n                                text: \"Kode Po\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"person_id\",\r\n                                text: \"Supplier\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"qty_total\",\r\n                                text: \"Jumlah Total\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"fisik_total\",\r\n                                text: \"Fisik Total\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"status_receive\",\r\n                                text: \"Status\",\r\n                                sort: true,\r\n                                formatter: (cell, row) => {\r\n                                  return row.status_barang === 0\r\n                                    ? 'proses'\r\n                                    : row.status_barang === 1\r\n                                    ? 'Setuju'\r\n                                    : 'Tidak Setuju';\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"aksi\", text: \"Aksi\", formatter: (cell, row, index) => {\r\n                                return (\r\n                                    <ButtonGroup>\r\n                                    <Button>\r\n                                        <Link\r\n                                        to={redirectPrefix + row.id}\r\n                                        id={\"tooltip_\" + row.id}\r\n                                        >\r\n                                        <i className=\"fas fa-user-edit\" />\r\n                                        </Link>\r\n                                    </Button>\r\n                                    <UncontrolledTooltip delay={0} target={\"tooltip_\" + row.id}>\r\n                                        Edit\r\n                                    </UncontrolledTooltip>\r\n                                    </ButtonGroup>\r\n                                )\r\n                                }\r\n                            },\r\n                            ]}\r\n                        >\r\n                            {(props) => (\r\n                            <div className=\"py-4 table-responsive\">\r\n                                <BootstrapTable\r\n                                remote\r\n                                {...props.baseProps}\r\n                                bootstrap4={true}\r\n                                bordered={false}\r\n                                hover={true}\r\n                                pagination={paginationFactory({ ...paginationOption })}\r\n                                onTableChange={handleTableChange}\r\n                                />\r\n                            </div>\r\n                            )}\r\n                    </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReceivingPo;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { \r\n    Card, \r\n    Button, \r\n    Row, \r\n    Col, \r\n    CardBody, \r\n    CardHeader, \r\n    UncontrolledTooltip, \r\n    ButtonGroup, \r\n    Collapse, \r\n    Form, \r\n    FormGroup, \r\n    Label, \r\n    Input \r\n} from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst ValidasiReceivingPo = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const redirectPrefix = `/admin/po/validasi-receiving-po/edit/`;\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allReceivingPo, setAllv] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n  const [uomCode, setUomCode] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n  \r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, uomCode, description);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort, uomCode, description) => {\r\n    getReceivingPo(page, perPage, sort, uomCode, description);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setUomCode(uomCode);\r\n    setDescription(description);\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort,  uomCode, description)\r\n    }\r\n  }\r\n\r\n  \r\n  useEffect(() => {\r\n    getReceivingPo(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  // fungsi dari ambil data\r\n  const getReceivingPo = (page, perPage, currentSort) => {\r\n    \r\n    let filter = { \r\n      \r\n      page: page, \r\n      per_page: perPage, \r\n      status: 0,\r\n      \r\n    };\r\n    const data = filter;\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/rfq-po/page`, data, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setAllReceivingPo(data.data.response);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const reset = () => {\r\n    setUomCode(\"\");\r\n    setDescription(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>Validasi Receiving PO</h3>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n              <h3 onClick={toggleOpen} >Search &nbsp;\r\n                  {\r\n                    isOpen === true ? <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i> : <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  }\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                        <Row md=\"12\">\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Kode Receivin PO</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Kode Uom\"\r\n                                value={uomCode}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, e.target.value, description)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Keterangan</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Deskripsi\"\r\n                                value={description}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, uomCode, e.target.value)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Button type=\"button\" onClick={reset} color=\"secondary\">Reset</Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Collapse>\r\n                    <ToolkitProvider\r\n                            rowNumber={rowIndex}\r\n                            data={allReceivingPo}\r\n                            keyField=\"id\"\r\n                            columns={[\r\n                            {\r\n                                dataField: \"no\",\r\n                                text: \"#\",\r\n                                sort: true,\r\n                                page: 1,\r\n                                formatter: (cell, row, index) => {\r\n                                let currentRow = ++index;\r\n                                return currentRow + rowIndex;\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"receiving_code\",\r\n                                text: \"Kode Receiving\",\r\n                                sort: true,\r\n                            },\r\n                            \r\n                            {\r\n                                dataField: \"code_po\",\r\n                                text: \"Kode Po\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"person_id\",\r\n                                text: \"Supplier\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"qty_total\",\r\n                                text: \"Jumlah Total\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"fisik_total\",\r\n                                text: \"Fisik Total\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"status_receive\",\r\n                                text: \"Status\",\r\n                                sort: true,\r\n                                formatter: (cell, row) => {\r\n                                  return row.status_barang === 0\r\n                                    ? 'proses'\r\n                                    : row.status_barang === 1\r\n                                    ? 'Setuju'\r\n                                    : 'Tidak Setuju';\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"aksi\", text: \"Aksi\", formatter: (cell, row, index) => {\r\n                                return (\r\n                                    <ButtonGroup>\r\n                                    <Button>\r\n                                        <Link\r\n                                        to={redirectPrefix + row.id}\r\n                                        id={\"tooltip_\" + row.id}\r\n                                        >\r\n                                        <i className=\"fas fa-user-edit\" />\r\n                                        </Link>\r\n                                    </Button>\r\n                                    <UncontrolledTooltip delay={0} target={\"tooltip_\" + row.id}>\r\n                                        Edit\r\n                                    </UncontrolledTooltip>\r\n                                    </ButtonGroup>\r\n                                )\r\n                                }\r\n                            },\r\n                            ]}\r\n                        >\r\n                            {(props) => (\r\n                            <div className=\"py-4 table-responsive\">\r\n                                <BootstrapTable\r\n                                remote\r\n                                {...props.baseProps}\r\n                                bootstrap4={true}\r\n                                bordered={false}\r\n                                hover={true}\r\n                                pagination={paginationFactory({ ...paginationOption })}\r\n                                onTableChange={handleTableChange}\r\n                                />\r\n                            </div>\r\n                            )}\r\n                    </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ValidasiReceivingPo;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  CardBody,\r\n  CardHeader,\r\n  Container,\r\n  UncontrolledTooltip,\r\n  ButtonGroup,\r\n  Collapse,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst HistoryPo = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n  const [allHistory, setAllHistory] = useState([]);\r\n\r\n  const [orderCode, setOrderCode] = useState(\"\");\r\n  const [poType, setPoType] = useState(\"\");\r\n  const [person, setPerson] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const [persons, setPersons] = useState([]);\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(\r\n        page,\r\n        perPage,\r\n        currentSort,\r\n        orderCode,\r\n        poType,\r\n        person,\r\n        startDate,\r\n        endDate\r\n      );\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort);\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const updateDataTable = (\r\n    page,\r\n    perPage,\r\n    sort,\r\n    orderCode,\r\n    poType,\r\n    person,\r\n    startDate,\r\n    endDate\r\n  ) => {\r\n    getHistoryPo(\r\n      page,\r\n      perPage,\r\n      sort,\r\n      orderCode,\r\n      poType,\r\n      person,\r\n      startDate,\r\n      endDate\r\n    );\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setOrderCode(orderCode);\r\n    setPoType(poType);\r\n    setPerson(person);\r\n    setStartDate(startDate);\r\n    setEndDate(endDate);\r\n  };\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`;\r\n      updateDataTable(\r\n        page,\r\n        perPage,\r\n        currentSort,\r\n        orderCode,\r\n        poType,\r\n        person,\r\n        startDate,\r\n        endDate\r\n      );\r\n    }\r\n  };\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getHistoryPo(page, perPage, currentSort, \"\", \"\", \"\", \"\", \"\");\r\n    getPerson();\r\n  }, []);\r\n\r\n  const getHistoryPo = async (\r\n    page,\r\n    perPage,\r\n    currentSort,\r\n    order_code = null,\r\n    po_type = 0,\r\n    person = 0,\r\n    start_date = null,\r\n    end_date = null\r\n  ) => {\r\n    let filter = {\r\n      page: page,\r\n      per_page: perPage,\r\n      warehouse_id: parseInt(warehouse),\r\n    };\r\n    if (order_code !== null) {\r\n      filter = Object.assign(filter, { order_code: order_code });\r\n    }\r\n    if (po_type !== 0) {\r\n      filter = Object.assign(filter, { po_type: parseInt(po_type) });\r\n    }\r\n    if (person !== 0) {\r\n      filter = Object.assign(filter, { person: parseInt(person) });\r\n    }\r\n    if (start_date !== null) {\r\n      filter = Object.assign(filter, { start_date: start_date });\r\n    }\r\n    if (end_date !== null) {\r\n      filter = Object.assign(filter, { end_date: end_date });\r\n    }\r\n    const data = filter;\r\n    const headers = {\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_BASE_URL}/purchase-order/history`,\r\n      data,\r\n      { headers }\r\n    );\r\n    setAllHistory(res.data.response_data);\r\n    setPage(res.data.current_page + 1);\r\n    setPerpage(res.data.per_page);\r\n    setTotalItem(res.data.total_item);\r\n  };\r\n\r\n  const getPerson = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/person/list`, { headers })\r\n      .then((data) => {\r\n        setPersons(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const reset = () => {\r\n    setOrderCode(\"\");\r\n    setPoType(\"\");\r\n    setPerson(\"\");\r\n    setStartDate(\"\");\r\n    setEndDate(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\", \"\", \"\", \"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {alert}\r\n      <SimpleHeader name=\"History PO\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <h3>List History PO</h3>\r\n                  <div style={{ textAlign: \"right\" }}></div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <h3 onClick={toggleOpen}>\r\n                  Filter &nbsp;\r\n                  {isOpen === true ? (\r\n                    <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\r\n                  ) : (\r\n                    <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  )}\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                    <Row md=\"12\">\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label htmlFor=\"exampleFormControlSelect3\">\r\n                            Order Code\r\n                          </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            placeholder=\"Masukan Order Code\"\r\n                            value={orderCode}\r\n                            onChange={(e) =>\r\n                              updateDataTable(\r\n                                1,\r\n                                perPage,\r\n                                currentSort,\r\n                                e.target.value,\r\n                                poType,\r\n                                person,\r\n                                startDate,\r\n                                endDate\r\n                              )\r\n                            }\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label\r\n                            className=\"form-control-label\"\r\n                            htmlFor=\"exampleFormControlSelect3\"\r\n                          >\r\n                            PO Type\r\n                          </Label>\r\n                          <Input\r\n                            name=\"paymentMethod\"\r\n                            type=\"select\"\r\n                            value={poType}\r\n                            onChange={(e) =>\r\n                              updateDataTable(\r\n                                1,\r\n                                perPage,\r\n                                currentSort,\r\n                                orderCode,\r\n                                e.target.value,\r\n                                person,\r\n                                startDate,\r\n                                endDate\r\n                              )\r\n                            }\r\n                          >\r\n                            <option value=\"\">Pilih Payment Method</option>\r\n                            <option value={1}>Konvensional</option>\r\n                            <option value={2}>Indent</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label\r\n                            className=\"form-control-label\"\r\n                            htmlFor=\"exampleFormControlSelect3\"\r\n                          >\r\n                            Person\r\n                          </Label>\r\n                          <Input\r\n                            name=\"person\"\r\n                            type=\"select\"\r\n                            value={person}\r\n                            onChange={(e) =>\r\n                              updateDataTable(\r\n                                1,\r\n                                perPage,\r\n                                currentSort,\r\n                                orderCode,\r\n                                poType,\r\n                                e.target.value,\r\n                                startDate,\r\n                                endDate\r\n                              )\r\n                            }\r\n                          >\r\n                            <option value=\"\">Pilih Person</option>\r\n                            {persons.map((person, key) => {\r\n                              return (\r\n                                <option key={key} value={person.id}>\r\n                                  {person.person_name}\r\n                                </option>\r\n                              );\r\n                            })}\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label htmlFor=\"exampleFormControlSelect3\">\r\n                            Start Date\r\n                          </Label>\r\n                          <Input\r\n                            id=\"example-date-input\"\r\n                            type=\"date\"\r\n                            value={startDate}\r\n                            onChange={(e) =>\r\n                              updateDataTable(\r\n                                1,\r\n                                perPage,\r\n                                currentSort,\r\n                                orderCode,\r\n                                poType,\r\n                                person,\r\n                                e.target.value,\r\n                                endDate\r\n                              )\r\n                            }\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label htmlFor=\"exampleFormControlSelect3\">\r\n                            End Date\r\n                          </Label>\r\n                          <Input\r\n                            id=\"example-date-input\"\r\n                            type=\"date\"\r\n                            value={endDate}\r\n                            onChange={(e) =>\r\n                              updateDataTable(\r\n                                1,\r\n                                perPage,\r\n                                currentSort,\r\n                                orderCode,\r\n                                poType,\r\n                                person,\r\n                                startDate,\r\n                                e.target.value\r\n                              )\r\n                            }\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>\r\n                        <Button type=\"button\" onClick={reset} color=\"secondary\">\r\n                          Reset\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                </Collapse>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allHistory}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: \"order_code\",\r\n                      text: \"Order Code\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"po_type\",\r\n                      text: \"Type Po\",\r\n                      sort: true,\r\n                      formatter: (cell, row) => {\r\n                        return row.po_type === 1 ? \"Konvensional\" : \"Indent\";\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: \"total_price\",\r\n                      text: \"Total Harga\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"total_qty\",\r\n                      text: \"Total Quantity\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"keterangan_payment\",\r\n                      text: \"Keterangan Payment\",\r\n                      sort: true,\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistoryPo;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  Card,\r\n  Button,\r\n  Row,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  FormGroup,\r\n  Label,\r\n  Table,\r\n  CardFooter,\r\n  Input,\r\n  Form,\r\n  UncontrolledTooltip,\r\n  ButtonGroup,\r\n} from 'reactstrap';\r\nimport { Link,useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nconst Validasi = (props) => {\r\n  const token = localStorage.token;\r\n  const username = localStorage.username;\r\n  const role = localStorage.authority;\r\n  const namaDepartment = localStorage.department;\r\n  const warehouse = localStorage.warehouse;\r\n  let history = useHistory();\r\n  const headers = {\r\n    \"Content-Type\": \"application/json\",\r\n    Authorization: `Bearer ${token}`,\r\n  };\r\n  const redirectPrefix = `/admin/po-return/edit/`;\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allPoReturn, setAllPoReturn] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [person,setPerson] = useState(\"\");\r\n  const [description,setDescription] = useState(null);\r\n  const [poType,setPoType]= useState(\"\");\r\n  const [satuan,setSatuan] = useState(\"\");\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState('');\r\n  const [kodePo, setKodePo] = useState('');\r\n  const [dataPo, setDataPo] = useState('');\r\n  const [openDetail, setOpenDetail] = useState(false);\r\n  const [metodepembayaran,setMetodePembayaran] = useState(\"\");\r\n  const [selectedRowData, setSelectedRowData] = useState([]);\r\n  const [keterangan,setKeterangan] = useState(\"\");\r\n  const [AllPerson,setAllPerson] = useState([]);\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n  const [nameItem, setNameItem] = useState(\"\");\r\n  const [barcode, setBarcode] = useState(\"\");\r\n  const [barcodeError, setBarcodeError] = useState(null);\r\n  const [stock, setStock] = useState(\"\");\r\n  const [stockError, setStockError] = useState(null);\r\n  const [qty, setQty] = useState(\"\");\r\n  const [harga, setHarga] = useState(\"\");\r\n  const [idItem, setIdItem] = useState(null)\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [usernamePo, setUsernamePo] = useState(username);\r\n  const [descriptionGudang, setDescriptionGudang] = useState(\"\");\r\n  const [descriptionPo, setDescriptionPo] = useState(\"\");\r\n  const [isCicil, setIsCicil] = useState(\"\");\r\n  const [statusBarang, setStatusBarang] = useState(0);\r\n  const [clear, setClear] = useState(0);\r\n  const [approve, setApprove] = useState(0);\r\n  const [jangkaWaktu, setJangkuWaktu] = useState(\"\");\r\n  const [usernameAdmin, setUsernameAdmin] = useState(username);\r\n  const [descriptionAdmin, setDescriptionAdmin] = useState(\"\");\r\n  const [namaitem,setNamaItem] = useState([]);\r\n  const [text,setText] = useState(\"\");\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [inputList, setInputList] = useState([\r\n    {\r\n      item_id: \"\",\r\n      qty: \"\",\r\n      satuan: \"\",\r\n      harga: \"\",\r\n      qty_fisik: \"\",\r\n      keterangan_fisik: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [inputListPurcahse, setInputListPurchase] = useState([\r\n    {\r\n      item_id: \"\",\r\n      qty: \"\",\r\n      satuan: \"\",\r\n      harga: \"\",\r\n    },\r\n  ]);\r\n\r\n\r\n  const validateForm = () => {\r\n\r\n  }\r\n  \r\n  useEffect(() => {\r\n    poReturn();\r\n    getPerson();\r\n    \r\n  }, []);\r\n\r\n  const poReturn = async() => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const response = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/purchase-order/page`,\r\n    { headers }\r\n    )\r\n    // console.log(response.data.response_data)\r\n    setNamaItem(response.data.response_data)\r\n   \r\n  }\r\n\r\n  const getPerson = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/person/list`, { headers })\r\n      .then((data) => {\r\n        setAllPerson(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const onSugesstHandler = (text)=>{\r\n    setText(text);\r\n    setSuggestions([]);\r\n\r\n  }\r\n\r\n  const onChangeHandler =(text)=> {\r\n    let matches = []\r\n    if (text.length > 0) {\r\n      matches = namaitem.filter(ordercodes =>{\r\n        const regex = new RegExp(`${text}`,\"gi\");\r\n        return ordercodes.order_code.match(regex)\r\n      })        \r\n    }\r\n    // console.log('matches', matches)\r\n    setSuggestions(matches)\r\n    setText(text)\r\n  }   \r\n\r\n  function CreateData() {\r\n    setLoading(true);\r\n    \r\n    // updateItem()\r\n    updatePrice(idItem)\r\n  }\r\n\r\n \r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, nameItem);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort);\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const updateDataTable = (page, perPage, sort, nameItem) => {\r\n    getItem(page, perPage, sort, nameItem);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setNameItem(nameItem);\r\n    getPrice(page, perPage, sort);\r\n  };\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`;\r\n      updateDataTable(page, perPage, sort, nameItem);\r\n    }\r\n  };\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  // ambil data dari harga\r\n\r\n  useEffect(() => {\r\n    getPo(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  // fungsi dari ambil data\r\n\r\n\r\n  const getPo = (page, perPage, currentSort) => {\r\n    \r\n    let filter = {\r\n       page: page,\r\n       per_page: perPage, \r\n      \r\n      };\r\n\r\n    const data = filter;\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/purchase-order/page`, data, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setAllPoReturn(data.data.response_data);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const hideAlert = () => {\r\n    setAlert(null);\r\n  };\r\n\r\n  const setSuccessAlert = () => {\r\n    setAlert(\r\n      <SweetAlert\r\n        success\r\n        showConfirm\r\n        confirmBtnText=\"Ok\"\r\n        title=\"Acquirer deleted\"\r\n        onCancel={hideAlert}\r\n        onConfirm={hideAlert}\r\n      />\r\n    );\r\n  };\r\n\r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...inputList];\r\n    list.splice(index, 1);\r\n    setInputList(list);\r\n  };\r\n\r\n  // handle click event of the Add button\r\n  const handleAddClick = () => {\r\n    setInputList([\r\n      ...inputList,\r\n      {\r\n        item_id: \"\",\r\n        qty: \"\",\r\n        satuan: \"\",\r\n        harga: \"\",\r\n        qty_fisik: \"\",\r\n        keterangan_fisik: \"\",\r\n      },\r\n    ]);\r\n  };\r\n\r\n  function CreateData() {\r\n    if (role === \"ROLE_KARYAWAN\" && namaDepartment === \"Purchase\") {\r\n      let data = {\r\n        warehouse_id: parseInt(warehouse),\r\n        username_po: usernamePo,\r\n        payment_method: 1,\r\n        jangka_waktu: parseInt(jangkaWaktu),\r\n        keterangan_payment: descriptionPayment,\r\n        is_cicil: parseInt(isCicil),\r\n        approve: parseInt(approve),\r\n        // active_flag: 1,\r\n        po_type: 1,\r\n        keterangan_po: descriptionPo,\r\n        person: parseInt(person),\r\n        items: inputList,\r\n        username_gudang: usernamePo,\r\n        status_barang: parseInt(statusBarang),\r\n        keterangan_gudang: descriptionGudang,\r\n        username_kurir: \"\",\r\n        username_validator: usernameValidator,\r\n        clear: parseInt(clear),\r\n        keterangan_validator: descriptionValidator,\r\n        username_admin: usernameAdmin,\r\n        keterangan_admin: descriptionAdmin,\r\n        durasi_po: 0,\r\n        admin_approval: 1,\r\n      };\r\n      axios\r\n        .post(\r\n          `${process.env.REACT_APP_API_BASE_URL}/purchase-order/save`,\r\n          data,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        )\r\n        .then(function (response) {\r\n          history.push(\"/admin/po\");\r\n        })\r\n        .then((json) => {\r\n          setLoading(false);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      let data = {\r\n        warehouse_id: parseInt(warehouse),\r\n        username_po: usernamePo,\r\n        payment_method: 1,\r\n        jangka_waktu: 0,\r\n        keterangan_payment: descriptionPayment,\r\n        is_cicil: parseInt(isCicil),\r\n        approve: parseInt(approve),\r\n        username_gudang: usernamePo,\r\n        status_barang: parseInt(statusBarang),\r\n        keterangan_gudang: descriptionGudang,\r\n        username_kurir: \"\", \r\n        username_validator: usernameValidator,\r\n        clear: parseInt(clear),\r\n        keterangan_validator: descriptionValidator,\r\n        active_flag: 1,\r\n        po_type: 1,\r\n        keterangan_po: descriptionPo,\r\n        person: parseInt(person),\r\n        items: inputList,\r\n        username_admin: usernameAdmin,\r\n        keterangan_admin: descriptionAdmin,\r\n        durasi_po: 0,\r\n        admin_approval: 0,\r\n        \r\n      };\r\n      axios\r\n        .post(\r\n          `${process.env.REACT_APP_API_BASE_URL}/purchase-order/save`,\r\n          data,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        )\r\n        .then(function (response) {\r\n          history.push(\"/admin/po\");\r\n        })\r\n        .then((json) => {\r\n          setLoading(false);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      CreateData();\r\n      postReturPo();\r\n      \r\n    }\r\n  };\r\n  const handleSearchPO = async () => {\r\n    await axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/purchase-order/get?order_code=${text}`,\r\n        {\r\n          headers,\r\n        }\r\n      )\r\n      .then((data) => {\r\n        const mergeItems = {\r\n          ...data.data.response_data,\r\n        };\r\n        setDataPo(mergeItems);\r\n        if (!data.data.status) {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Gagal',\r\n            text: 'Maaf, Data PO tidak ditemukan',\r\n          });\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Gagal',\r\n          text: 'Maaf, Data PO tidak ditemukan',\r\n        });\r\n      });\r\n  };\r\n\r\n  const getPoItems = async (po_id) => {\r\n    await axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/purchase-order/po-items`,\r\n        { po_id: po_id },\r\n        {\r\n          headers,\r\n        }\r\n      )\r\n      .then((data) => {\r\n        setDataPoItems(data.data.response_data);\r\n        const constructItems = [];\r\n        data.data.response_data.map((key) => {\r\n          constructItems.push({\r\n            item_id: key.item_id,\r\n            qty: key.qty,\r\n          });\r\n        });\r\n        poItems = constructItems;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div>\r\n      {alert}\r\n        <Row>\r\n          <div className=\"col\">\r\n            {role === \"ROLE_KARYAWAN\" && namaDepartment === \"Purchase\" ? (\r\n              <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <CardHeader>\r\n                    <h3>Daftar Purchase Order</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <Row md=\"12\">\r\n                        <Col md=\"6\">\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={3}\r\n                            >\r\n                              Kode PO\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"desc\"\r\n                                placeholder=\"Masukan Keterangan PO\"\r\n                                value={kodePo}\r\n                                onChange={(e) => {\r\n                                  setKodePo(e.target.value);\r\n                                  \r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={3}\r\n                            >\r\n                                Nama Supplier\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                                name=\"Supplir\"\r\n                                type=\"Text\"\r\n                                value={person}\r\n                                onChange={(e) => {\r\n                                  setPerson(e.target.value);\r\n                                }}\r\n                              >\r\n                                {AllPerson.map((person, key) => {\r\n                                    return (\r\n                                        <option key={key} value={person.id}>\r\n                                        {person.person_name}\r\n                                        </option>\r\n                                    );\r\n                                    })}\r\n                                </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={3}\r\n                            >\r\n                              keterangan PO\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"desc\"\r\n                                placeholder=\"Masukan Keterangan PO\"\r\n                                value={keterangan}\r\n                                  onChange={(e) => {\r\n                                  setKeterangan(e.target.value);\r\n                                  \r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={3}\r\n                            >\r\n                              Durasi Tempo\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"Durasi Tempo\"\r\n                                placeholder=\"Masukan Durasi Tempo\"\r\n                                value={durasitempo}\r\n                                onChange={(e) => {\r\n                                  setDurasiTempo(e.target.value);\r\n                                  \r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={3}\r\n                            >\r\n                              Jangka Waktu\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                                type=\"number\"\r\n                                name=\"Jangka Waktu\"\r\n                                placeholder=\"Masukan Jangka Waktu\"\r\n                                value={jangkawaktu}\r\n                                onChange={(e) => {\r\n                                  setJangkaWaktu(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={3}\r\n                            >\r\n                              Termin\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            name=\"Termin\"\r\n                            type=\"text\"\r\n                            value={termin}\r\n                            onChange={(e) => {\r\n                              setTermin(e.target.value);\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Pilih Cicilan</option>\r\n                            <option value=\"\">Lunas</option>\r\n                            <option value=\"\">Belum Lunas</option>\r\n                            \r\n                          </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={3}\r\n                            >\r\n                              Metode Pembayaran\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                                <Input\r\n                                name=\"satuan\"\r\n                                type=\"select\"\r\n                                value={metodepembayaran}\r\n                                onChange={(e) => {\r\n                                  setMetodePembayaran(e.target.value);\r\n                                }}\r\n                              >\r\n                                <option value=\"\">Pilih Metode Pembayaran</option>\r\n                                <option value={1}>Tunai</option>\r\n                                <option value={2}>Kredit</option>\r\n                                \r\n                              </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                          \r\n                        </Col>\r\n                    </Row>\r\n                        <Table>\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>\r\n                                    Nama Item\r\n                                    </th>\r\n                                    <th>\r\n                                    Kode Item\r\n                                    </th>\r\n                                    <th>\r\n                                    Satuan\r\n                                    </th>\r\n                                    <th>\r\n                                    Quantity\r\n                                    </th>\r\n                                    <th>\r\n                                    Harga\r\n                                    </th>\r\n                                    <th>\r\n                                    Aksi\r\n                                    </th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                </tbody>\r\n                        </Table>\r\n                    {inputList.map((x, i) => {\r\n                      return (\r\n                        <div key={i}>\r\n                          <Table className=\"Table\">\r\n                            <tbody>\r\n                              <tr>\r\n                                <td>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"desc\"\r\n                                    placeholder=\"Masukan Item\"\r\n                                    value={nameItem}\r\n                                    onChange={(e) => {\r\n                                      setNameItem(e.target.value);\r\n                                      \r\n                                    }}\r\n                                  />\r\n                                </td>\r\n                                <td>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"desc\"\r\n                                    placeholder=\"Satuan\"\r\n                                    value={satuan}\r\n                                    onChange={(e) => {\r\n                                      setDescription(e.target.value);\r\n                                    }}\r\n                                  />\r\n                                </td>\r\n                                <td>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"desc\"\r\n                                    placeholder=\"Masukan Quantity\"\r\n                                    value={qty}\r\n                                    onChange={(e) => {\r\n                                      setQty(e.target.value);\r\n                                     \r\n                                    }}\r\n                                  />\r\n                                </td>\r\n                                <td>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"desc\"\r\n                                    placeholder=\"Masukan Harga\"\r\n                                    value={harga}\r\n                                    onChange={(e) => {\r\n                                      setHarga(e.target.value);\r\n                                    }}\r\n                                  />\r\n                                </td>\r\n                                <td>\r\n                                  \r\n                                      {inputList.length !== 1 && (\r\n                                        <Button\r\n                                          color=\"primare\"\r\n                                          onClick={() => handleRemoveClick(i)}\r\n                                        >\r\n                                          <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                                        </Button>\r\n                                      )}\r\n                                      {inputList.length - 1 === i && (\r\n                                        <Button\r\n                                          color=\"primare\"\r\n                                          onClick={handleAddClick}\r\n                                        >\r\n                                          <i className=\"fa fa-plus\"></i>\r\n                                        </Button>\r\n                                      )}\r\n                      \r\n                                </td>\r\n                              </tr>\r\n                            </tbody>\r\n                          </Table>\r\n                        </div>\r\n                      );  \r\n                    })}\r\n                  </CardBody>\r\n                  <CardFooter >\r\n                  <Row md=\"12\">\r\n                        <Col md=\"8\">\r\n                        </Col>\r\n                        <Col md=\"4\">\r\n                          \r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Harga Total\r\n                            </Label>\r\n                            <Col sm={6}>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"barcode\"\r\n                                placeholder=\"Harga Total\"\r\n                                value={harga}\r\n                                onChange={(e) => {\r\n                                  setHarga(e.target.value);\r\n                                  \r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n              </Card>\r\n            ) : (\r\n              <Card>\r\n                <CardBody>\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <CardHeader>\r\n                    <FormGroup row>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                        sm = {2}\r\n                      >\r\n                        Kode Purchase Order\r\n                      </Label>\r\n                      <Col sm={2}>\r\n                      <Input\r\n                        autoComplete=\"off\"\r\n                        type=\"text\"\r\n                        name=\"codePo\"\r\n                        placeholder=\"Masukan Kode Purchase Order\"\r\n                        value={text}\r\n                        onChange={(e) => {\r\n                          onChangeHandler(e.target.value);\r\n                        }}\r\n                      />\r\n                      \r\n                      {suggestions && suggestions.map((suggestion, i ) =>\r\n                      <div key={i} onClick={() => onSugesstHandler(suggestion.order_code)}>{suggestion.order_code}</div>\r\n                      )}\r\n\r\n                      </Col>\r\n                      <Col sm={2}>\r\n                      <Button\r\n                      color=\"primary\"\r\n                      style={{ marginBottom: 12 }}\r\n                      onClick={handleSearchPO} \r\n                      sm={4}\r\n                    >\r\n                      Cari\r\n                      </Button>\r\n                      </Col>\r\n                    </FormGroup>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                      <Row md=\"12\">\r\n                          <Col md=\"6\">\r\n                            <FormGroup row>\r\n                              <Col sm={7}>\r\n                                <Input\r\n                                  type=\"hidden\"\r\n                                  name=\"desc\"\r\n                                  placeholder=\"Masukan Keterangan PO\"\r\n                                  value={dataPo?.kodePo}\r\n                                  onChange={(e) => {\r\n                                    setKodePo(e.target.value);\r\n                                  }}\r\n                                />\r\n                              </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={5}\r\n                              >\r\n                                Supplier\r\n                              </Label>\r\n                              <Col sm={7}>\r\n                              <Input\r\n                                  name=\"kategory\"\r\n                                  type=\"select\"\r\n                                  value={dataPo?.person}\r\n                                  onChange={(e) => {\r\n                                    setPerson(e.target.value);\r\n                                  }}\r\n                                >\r\n                                  {AllPerson.map((person, key) => {\r\n                                      return (\r\n                                        <option key={key} value={person.id}>\r\n                                          {person.person_name}\r\n                                        </option>\r\n                                      );\r\n                                    })}\r\n                                  </Input>\r\n                              </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={5}\r\n                              >\r\n                                Keterangan\r\n                              </Label>\r\n                              <Col sm={7}>\r\n                                <Input\r\n                                  \r\n                                  type=\"text\"\r\n                                  name=\"desc\"\r\n                                  placeholder=\"Masukan Keterangan PO\"\r\n                                  value={dataPo?.keterangan_po}\r\n                                  onChange={(e) => {\r\n                                    setKeterangan(e.target.value);\r\n\r\n                                  }}\r\n                                />\r\n                              </Col>\r\n                              \r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={5}\r\n                            >\r\n                              Tipe PO\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                                name=\"tipe po\"\r\n                                type=\"select\"\r\n                                value={poType}\r\n                                onChange={(e) => {\r\n                                  setPoType(e.target.value);\r\n                                }}\r\n                              >\r\n                                <option value={1}>Ready</option>\r\n                                <option value={2}>Indent</option>\r\n                              </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={5}\r\n                              >\r\n                                Metode Pembayaran\r\n                              </Label>\r\n                              <Col sm={7}>\r\n                                  <Input\r\n                                 \r\n                                  name=\"satuan\"\r\n                                  type=\"select\"\r\n                                  value={metodepembayaran}\r\n                                  onChange={(e) => {\r\n                                    setMetodePembayaran(e.target.value);\r\n                                  }}\r\n                                >\r\n                                  <option value={1}>Tunai/Transfer</option>\r\n                                  <option value={2}>Termin/Tempo</option>\r\n                                  <option value={3}>Deposito</option>\r\n                                  {/* <option value={4}>Transfer</option> */}\r\n                                </Input>\r\n                              </Col>\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"6\">\r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={5}\r\n                              >\r\n                                Durasi PO\r\n                              </Label>\r\n                              <Col sm={7}>\r\n                              <Input\r\n                                  type=\"text\"\r\n                                  name=\"barcode\"\r\n                                  placeholder=\"Masukan Durasi Tempo\"\r\n                                  value={barcode}\r\n                                  invalid={barcodeError === \"invalid\"}\r\n                                  onChange={(e) => {\r\n                                    setBarcode(e.target.value);\r\n                                    if (e.target.value !== \"\") {\r\n                                      setBarcodeError(\"\");\r\n                                    }\r\n                                  }}\r\n                                />\r\n                              </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={5}\r\n                              >\r\n                                Jangka Waktu\r\n                              </Label>\r\n                              <Col sm={7}>\r\n                              <Input\r\n                              \r\n                                  type=\"number\"\r\n                                  name=\"stock\"\r\n                                  placeholder=\"Masukan Jangka Waktu\"\r\n                                  value={stock}\r\n                                  invalid={stockError === \"invalid\"}\r\n                                  onChange={(e) => {\r\n                                    setStock(e.target.value);\r\n                                    if (e.target.value !== \"\") {\r\n                                      setStockError(\"\");\r\n                                    }\r\n                                  }}\r\n                                />\r\n                              </Col>\r\n                            </FormGroup>\r\n                            \r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={5}\r\n                              >\r\n                                Cicilan\r\n                              </Label>\r\n                              <Col sm={7}>\r\n                              <Input\r\n                              name=\"satuan\"\r\n                              type=\"select\"\r\n                              value={satuan}\r\n                              onChange={(e) => {\r\n                                setSatuan(e.target.value);\r\n                              }}\r\n                            >\r\n                              <option value={1}>Lunas</option>\r\n                              <option value={2}>Belum Lunas</option>\r\n                              \r\n                            </Input>\r\n                              </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={5}\r\n                              >\r\n                                Nominal Cicilan\r\n                              </Label>\r\n                              <Col sm={7}>\r\n                                <Input\r\n                               \r\n                                  type=\"text\"\r\n                                  name=\"desc\"\r\n                                  placeholder=\"Masukan Keterangan PO\"\r\n                                  value={description}\r\n                                  onChange={(e) => {\r\n                                    setDescription(e.target.value);\r\n                                  }}\r\n                                />\r\n                              </Col>\r\n                            </FormGroup>\r\n                          </Col>\r\n                      </Row>\r\n                            <Table>\r\n                              <thead>\r\n                                <tr>\r\n                                  <th>\r\n                                    <center>Nama Item</center>\r\n                                  </th>\r\n                                  <th>\r\n                                    <center>Quantity</center>\r\n                                  </th>\r\n                                  <th>\r\n                                    <center>Satuan</center>\r\n                                  </th>\r\n                                  <th>\r\n                                    <center>Harga</center>\r\n                                  </th>\r\n                                  <th>\r\n                                    <center>Aksi</center>\r\n                                  </th>\r\n                                </tr>\r\n                              </thead>\r\n                            </Table>\r\n                      {inputList.map((x, i) => {\r\n                        return (\r\n                          <div key={i}>\r\n                            <Table className=\"Table\">\r\n                            <tbody>\r\n                              <tr>\r\n                                <td>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"desc\"\r\n                                    placeholder=\"Masukan Item\"\r\n                                  />\r\n                                </td>\r\n                                <td>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"desc\"\r\n                                    placeholder=\"Satuan\"\r\n                                  />\r\n                                </td>\r\n                                <td>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"desc\"\r\n                                    placeholder=\"Masukan Quantity\"\r\n                                  />\r\n                                </td>\r\n                                <td>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"desc\"\r\n                                    placeholder=\"Masukan Harga\"\r\n                                  />\r\n                                </td>\r\n                                <td>\r\n                                  \r\n                                      {inputList.length !== 1 && (\r\n                                        <Button\r\n                                          color=\"primare\"\r\n                                          onClick={() => handleRemoveClick(i)}\r\n                                        >\r\n                                          <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                                        </Button>\r\n                                      )}\r\n                                      {inputList.length - 1 === i && (\r\n                                        <Button\r\n                                          color=\"primare\"\r\n                                          onClick={handleAddClick}\r\n                                        >\r\n                                          <i className=\"fa fa-plus\"></i>\r\n                                        </Button>\r\n                                      )}\r\n                      \r\n                                </td>\r\n                              </tr>\r\n                            </tbody>\r\n                            </Table>\r\n                          </div>\r\n                        );  \r\n                      })}\r\n                    </CardBody>\r\n                    <CardFooter >\r\n                    <Row md=\"12\">\r\n                          <Col md=\"8\">\r\n                          </Col>\r\n                          <Col md=\"4\">\r\n                            \r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                              >\r\n                                Harga Total\r\n                              </Label>\r\n                              <Col sm={6}>\r\n                              <Input\r\n                                  type=\"text\"\r\n                                  name=\"barcode\"\r\n                                  placeholder=\"Harga Total\"\r\n                                  value={harga}\r\n                                  onChange={(e) => {\r\n                                    setHarga(e.target.value);\r\n                                    }}\r\n                                />\r\n                              </Col>\r\n                            </FormGroup>\r\n                          </Col>\r\n                      </Row>\r\n                    </CardFooter>\r\n                  </Form>\r\n                </CardBody>\r\n                <CardFooter>\r\n                      {!isLoading && (\r\n                        <Button color=\"primary\" type=\"submit\">\r\n                          Simpan\r\n                        </Button>\r\n                      )}\r\n                      {isLoading && (\r\n                        <Button color=\"primary\" disabled>\r\n                          <i className=\"fas fa-spinner fa-spin\"></i>\r\n                          {\"\"}\r\n                          loading...\r\n                        </Button>\r\n                      )}\r\n                      <Link className=\"btn btn-info\" to=\"/admin/po\">\r\n                        Kembali\r\n                      </Link>\r\n                </CardFooter>\r\n                <CardFooter></CardFooter>\r\n                <CardBody>\r\n                    <h3>Data Retur PO </h3>\r\n                    <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allPoReturn}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: 'no',\r\n                      text: '#',\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: 'username_po',\r\n                      text: 'Username Purcase Order',\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: 'retur_code',\r\n                      text: 'Kode Retur',\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: 'supplier',\r\n                      text: 'Supplier',\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: 'item_or_money',\r\n                      text: 'Item atau Uang',\r\n                      sort: true,\r\n                      formatter: (cell, row) => {\r\n                        return row.item_or_money === 1 ? 'Item' : 'Money';\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: 'total_qty',\r\n                      text: 'Quality',\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: 'total_price',\r\n                      text: 'Total Harga',\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: 'status_barang',\r\n                      text: 'Status',\r\n                      sort: true,\r\n                      formatter: (cell, row) => {\r\n                        return row.status_barang === 0\r\n                          ? 'Belum diproses'\r\n                          : row.status_barang === 1\r\n                          ? 'Diterima'\r\n                          : 'Belum diterima';\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: '',\r\n                      text: 'Aksi',\r\n                      formatter: (cell, row, index) => {\r\n                        return (\r\n                          <>\r\n                            <ButtonGroup>\r\n                              <Button>\r\n                                <Link\r\n                                  to={redirectPrefix + row.id}\r\n                                  id={'tooltip_' + row.id}\r\n                                >\r\n                                  <i className=\"fas fa-user-edit\" />\r\n                                </Link>\r\n                              </Button>\r\n                              <UncontrolledTooltip\r\n                                delay={0}\r\n                                target={'tooltip_' + row.id}\r\n                              >\r\n                                Edit\r\n                              </UncontrolledTooltip>\r\n                            </ButtonGroup>\r\n                            <Button\r\n                              onClick={() => {\r\n                                setOpenDetail(true);\r\n                                setSelectedRowData(row);\r\n                              }}\r\n                              size=\"sm\"\r\n                              color=\"primary\"\r\n                              type=\"button\"\r\n                            >\r\n                              Detail\r\n                            </Button>\r\n                          </>\r\n                        );\r\n                      },\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                    </ToolkitProvider>\r\n                </CardBody>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </Row>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Validasi;","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  Card,\r\n  Button,\r\n  Row,\r\n  CardBody,\r\n  CardHeader,\r\n  UncontrolledTooltip,\r\n  ButtonGroup,\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\n\r\nconst AdminApprove = () => {\r\n  const token = localStorage.token;\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    Authorization: `Bearer ${token}`,\r\n  };\r\n  const redirectPrefix = `/admin/purchase-order-retur/kepala-toko/edit/`;\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allPoReturn, setAllPoReturn] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState('');\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{' '}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort);\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{' '}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const updateDataTable = (page, perPage, sort) => {\r\n    getPoRetur(page, perPage, sort);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n  };\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === 'sort') {\r\n      let sort = `${sortField} ${sortOrder}`;\r\n      updateDataTable(page, perPage, sort);\r\n    }\r\n  };\r\n\r\n  useEffect(async () => {\r\n    await getPoRetur(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  const getPoRetur = async (page, perPage, currentSort) => {\r\n    let filter = { page: page, per_page: perPage };\r\n    const data = filter;\r\n    await axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/retur-po/page`, data, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setAllPoReturn(data.data.response_data);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {alert}\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div\r\n                  style={{ display: 'flex', justifyContent: 'space-between' }}\r\n                >\r\n                  <h3>Data Retur PO</h3>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allPoReturn}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: 'no',\r\n                      text: '#',\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: 'username_po',\r\n                      text: 'Username Purcase Order',\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: 'retur_code',\r\n                      text: 'Kode Retur',\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: 'supplier',\r\n                      text: 'Supplier',\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: 'item_or_money',\r\n                      text: 'Item atau Uang',\r\n                      sort: true,\r\n                      formatter: (cell, row) => {\r\n                        return row.item_or_money === 1 ? 'Item' : 'Money';\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: 'total_qty',\r\n                      text: 'Quality',\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: 'total_price',\r\n                      text: 'Total Harga',\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: 'status_barang',\r\n                      text: 'Status',\r\n                      sort: true,\r\n                      formatter: (cell, row) => {\r\n                        return row.status_barang === 0\r\n                          ? 'Belum diproses'\r\n                          : row.status_barang === 1\r\n                          ? 'Diterima'\r\n                          : 'Belum diterima';\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: '',\r\n                      text: 'Aksi',\r\n                      formatter: (cell, row, index) => {\r\n                        return (\r\n                          <>\r\n                            <ButtonGroup>\r\n                              <Button>\r\n                                <Link\r\n                                  to={redirectPrefix + row.id}\r\n                                  id={'tooltip_' + row.id}\r\n                                >\r\n                                  <i className=\"fas fa-user-edit\" />\r\n                                </Link>\r\n                              </Button>\r\n                              <UncontrolledTooltip\r\n                                delay={0}\r\n                                target={'tooltip_' + row.id}\r\n                              >\r\n                                Edit\r\n                              </UncontrolledTooltip>\r\n                            </ButtonGroup>\r\n                          </>\r\n                        );\r\n                      },\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminApprove;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  Card,\r\n  Button,\r\n  Row,\r\n  CardBody,\r\n  CardHeader,\r\n  UncontrolledTooltip,\r\n  ButtonGroup,\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\n\r\nconst Validator = () => {\r\n  const token = localStorage.token;\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    Authorization: `Bearer ${token}`,\r\n  };\r\n  const redirectPrefix = `/admin/purchase-order-retur/validasi-pemimpin/edit/`;\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allPoReturn, setAllPoReturn] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState('');\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{' '}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort);\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{' '}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const updateDataTable = (page, perPage, sort) => {\r\n    getPoRetur(page, perPage, sort);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n  };\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === 'sort') {\r\n      let sort = `${sortField} ${sortOrder}`;\r\n      updateDataTable(page, perPage, sort);\r\n    }\r\n  };\r\n\r\n  useEffect(async () => {\r\n    await getPoRetur(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  const getPoRetur = async (page, perPage, currentSort) => {\r\n    let filter = { \r\n        page: page, \r\n        per_page: perPage,\r\n        manajer_approval: 1,\r\n        clear : 0\r\n            \r\n    };\r\n    const data = filter;\r\n    await axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/retur-po/page`, data, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setAllPoReturn(data.data.response_data);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div\r\n                  style={{ display: 'flex', justifyContent: 'space-between' }}\r\n                >\r\n                  <h3>Data Retur PO</h3>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allPoReturn}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: 'no',\r\n                      text: '#',\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: 'username_po',\r\n                      text: 'Username Purcase Order',\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: 'retur_code',\r\n                      text: 'Kode Retur',\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: 'supplier',\r\n                      text: 'Supplier',\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: 'item_or_money',\r\n                      text: 'Item atau Uang',\r\n                      sort: true,\r\n                      formatter: (cell, row) => {\r\n                        return row.item_or_money === 1 ? 'Item' : 'Money';\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: 'total_qty',\r\n                      text: 'Quality',\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: 'total_price',\r\n                      text: 'Total Harga',\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: 'status_barang',\r\n                      text: 'Status',\r\n                      sort: true,\r\n                      formatter: (cell, row) => {\r\n                        return row.status_barang === 0\r\n                          ? 'Belum diproses'\r\n                          : row.status_barang === 1\r\n                          ? 'Diterima'\r\n                          : 'Belum diterima';\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: '',\r\n                      text: 'Aksi',\r\n                      formatter: (cell, row, index) => {\r\n                        return (\r\n                          <>\r\n                            <ButtonGroup>\r\n                              <Button>\r\n                                <Link\r\n                                  to={redirectPrefix + row.id}\r\n                                  id={'tooltip_' + row.id}\r\n                                >\r\n                                  <i className=\"fas fa-user-edit\" />\r\n                                </Link>\r\n                              </Button>\r\n                              <UncontrolledTooltip\r\n                                delay={0}\r\n                                target={'tooltip_' + row.id}\r\n                              >\r\n                                Edit\r\n                              </UncontrolledTooltip>\r\n                            </ButtonGroup>\r\n                          </>\r\n                        );\r\n                      },\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Validator;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  \r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  CardBody,\r\n  CardHeader,\r\n  CardFooter,\r\n  Table,\r\n  ButtonGroup,\r\n  Form,\r\n  FormGroup,\r\n  UncontrolledTooltip,\r\n  Label,\r\n  Input,\r\n  \r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst Index = () => {\r\n  const token = localStorage.token;\r\n  const username = localStorage.username;\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const redirectPrefix = `/admin/item/edit/`;\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n  const [itemType, setItemType] = useState(1);\r\n  const [warehouse, setWaresouse] = useState(\"\");\r\n  const [nameItem, setNameItem] = useState(\"\");\r\n  const [soType,setSoType] = useState(\"\");\r\n  const [kodeso,setKodeSo] = useState(\"\");\r\n  const [keteranganso,setKeteranganSo] = useState(\"\");\r\n  const [soStatus,setSoStatus] = useState(\"\");\r\n  const [payment_method,setPaymentMethod] = useState(\"\");\r\n  const [totaldiskon,setTotalDiskon] = useState(\"\");\r\n  const [ppn,setPpn] = useState(\"\");\r\n  const [promo,setPromo] = useState(\"\");\r\n  const [jangkawaktu,setJangkaWaktu] = useState(\"\");\r\n  const [cicil,setCicil] = useState(\"\");\r\n  const [pengiriman,setPengiriman] = useState(\"\");\r\n  const [barcode, setBarcode] = useState(\"\");\r\n  const [allSo, setAllSo] = useState([]);\r\n  const [itemname,setItemName] = useState('')\r\n  const [idItem, setIdItem] = useState(null)\r\n  const [usernameSo, setUsernameSo] = useState(username);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [person, setPerson] = useState(\"\");\r\n  const [kodeitem,setKodeItem] = useState(\"\");\r\n  const [qty,setQty] = useState(\"\");\r\n  const [qtyfisik,setQtyFisik] = useState(\"\");\r\n  const [keteranganfisik,setKeteranganFisik] = useState(\"\");\r\n  const [persons, setPersons] = useState([]);\r\n  const [inputList, setInputList] = useState([\r\n    {\r\n      item_id: \"\",\r\n      qty: \"\",\r\n      satuan: \"\",\r\n      harga: \"\",\r\n      qty_fisik: \"\",\r\n      keterangan_fisik: \"\",\r\n    },\r\n  ]);\r\n\r\n  function CreateData() {\r\n    setLoading(true);\r\n    \r\n    // updateItem()\r\n    updatePrice(idItem)\r\n  }\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, nameItem);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort);\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const updateDataTable = (page, perPage, sort, nameItem) => {\r\n    getItem(page, perPage, sort, nameItem);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setNameItem(nameItem);\r\n    getPrice(page, perPage, sort);\r\n  };\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`;\r\n      updateDataTable(page, perPage, sort, nameItem);\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    getPerson();\r\n\r\n  }, []);\r\n\r\n\r\n  const getPerson = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/person/list`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        setPersons(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getSo(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  // fungsi dari ambil data\r\n  const getSo = (page, perPage, currentSort) => {\r\n    let filter = { page: page, per_page: perPage };\r\n    const data = filter;\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/sales-order/page`, data, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setAllSo(data.data.response_data);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const searchItemByCode2 = () => {\r\n\r\n    const data = {\r\n      page: 1,\r\n      per_page: 10,\r\n      item_name: itemname,\r\n      item_code: \"\",\r\n      type:1\r\n    }\r\n\r\n    fetch(`${process.env.REACT_APP_API_BASE_URL}/items`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        'Authorization': `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(data),\r\n      method: 'POST'\r\n    })\r\n    .then(j => j.json())\r\n    .then(res => {\r\n      if(res.message === 'Success'){\r\n        \r\n        // call function getPriceById\r\n        const item = res.response[0]\r\n        \r\n        getPriceById(item.id)\r\n\r\n        setIdItem(item.id)\r\n        setNameItem(item.item_name)\r\n        setItemCode(item.item_code)\r\n        setCategory(item.kategori_name)\r\n        setNameFunction(item.function_name)\r\n        setMerek(item.merek_name)\r\n        setSatuan(item.uom_code)\r\n\r\n      }\r\n    })\r\n  }\r\n\r\n  const getPriceById = id => {\r\n\r\n    fetch(`${process.env.REACT_APP_API_BASE_URL}/price-detail/${id}`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        'Authorization': `Bearer ${token}`,\r\n      },\r\n      method: 'GET'\r\n    })\r\n    .then(j => j.json())\r\n    .then(res => {\r\n      if(res.message === 'Get Data Success'){\r\n        const price = res.response_data\r\n        \r\n        setPajakBeli(price.pajak_beli)\r\n        setHargaBeli(price.harga_beli)\r\n        setDiskonNominal(price.diskon_nominal)\r\n        setDiskonPersen(price.diskon_persen)\r\n        setDiskonSuplierNominal(price.diskon_nominal_suplier)\r\n        setDiskonSuplierPersen(price.diskon_persen_suplier)\r\n        setPajakJual(price.pajak_jual)      \r\n        setMargin1(price.persentase_1)\r\n        setMargin2(price.persentase_2)\r\n        setMargin3(price.persentase_3)\r\n        setMargin4(price.persentase_4)\r\n        setMargin5(price.persentase_5)\r\n        setQty1(price.min_qty_1)\r\n        setQty2(price.min_qty_2)\r\n        setQty3(price.min_qty_3)\r\n        setQty4(price.min_qty_4)\r\n        setQty5(price.min_qty_5)\r\n        setPrice1(price.price_1)\r\n        setPrice2(price.price_2)\r\n        setPrice3(price.price_3)\r\n        setPrice4(price.price_4)\r\n        setPrice5(price.price_5)\r\n        \r\n      }\r\n    })\r\n  }\r\n\r\n  \r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...inputList];\r\n    list.splice(index, 1);\r\n    setInputList(list);\r\n  };\r\n\r\n  // handle click event of the Add button\r\n  const handleAddClick = () => {\r\n    setInputList([\r\n      ...inputList,\r\n      {\r\n        item_id: \"\",\r\n        qty: \"\",\r\n        satuan: \"\",\r\n        harga: \"\",\r\n        qty_fisik: \"\",\r\n        keterangan_fisik: \"\",\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      CreateData();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <div className=\"col\">\r\n              <Card>\r\n                <CardBody>\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <CardHeader>\r\n                      <h3>Buat Penawaran Sales Order</h3>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                      <Row md=\"12\">\r\n                          <Col md=\"6\">\r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                              >\r\n                                Kode SO\r\n                              </Label>\r\n                              <Col sm={7}>\r\n                                <Input\r\n                                  type=\"text\"\r\n                                  name=\"kode SO\"\r\n                                  placeholder=\"Masukan Kode SO\"\r\n                                  value={kodeso}\r\n                                  onChange={(e) => {\r\n                                    setKodeSo(e.target.value);\r\n                                    \r\n                                  }}\r\n                                />\r\n                                <Input\r\n                                  type=\"hidden\"\r\n                                  name=\"username\"\r\n                                  placeholder=\"Masukan Keterangan PO\"\r\n                                  value={usernameSo}\r\n                                  onChange={(e) => {\r\n                                    setUsernameSo(e.target.value);\r\n                                  }}\r\n                                />\r\n                              </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                              >\r\n                                  Nama Customer\r\n                              </Label>\r\n                              <Col sm={7}>\r\n                              <Input\r\n                                  name=\"kategory\"\r\n                                  type=\"select\"\r\n                                  value={person}\r\n                                  onChange={(e) => {\r\n                                    setPerson(e.target.value);\r\n                                  }}\r\n                                >\r\n                                  <option value=''>Pilih Customer</option>\r\n                                  {persons.map((person, key) => {\r\n                                        return (\r\n                                        <option key={key} value={person.id}>\r\n                                            {person.person_name}\r\n                                        </option>\r\n                                        );\r\n                                    })}\r\n                                  </Input>\r\n                              </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                              >\r\n                                keterangan SO\r\n                              </Label>\r\n                              <Col sm={7}>\r\n                                <Input\r\n                                  type=\"text\"\r\n                                  name=\"desc\"\r\n                                  placeholder=\"Masukan Keterangan SO\"\r\n                                  value={keteranganso}\r\n                                  onChange={(e) => {\r\n                                    setKeteranganSo(e.target.value);\r\n                                    \r\n                                  }}\r\n                                />\r\n                              </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                              >\r\n                                  Tipe SO\r\n                              </Label>\r\n                              <Col sm={7}>\r\n                              <Input\r\n                                name=\"Tipe Po\"\r\n                                type=\"select\"\r\n                                value={soType}\r\n                                onChange={(e) => {\r\n                                  setSoType(e.target.value);\r\n                                }}\r\n                              >\r\n                                <option value={1}>Ready</option>\r\n                                <option value={2}>Indent</option>\r\n                              </Input>\r\n                              </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                              >\r\n                                Status SO\r\n                              </Label>\r\n                              <Col sm={7}>\r\n                                <Input\r\n                                  name=\"kategory\"\r\n                                  type=\"select\"\r\n                                  value={soStatus}\r\n                                onChange={(e) => {\r\n                                  setSoStatus(e.target.value);\r\n                                }}\r\n                              >\r\n                                <option value={2}>Locked</option>\r\n                                <option value={3}>Proses</option>\r\n                                <option value={4}>Selesai</option>\r\n                                <option value={5}>Gantung</option>\r\n                                </Input>\r\n                              </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                              >\r\n                                Metode Pembayaran\r\n                              </Label>\r\n                              <Col sm={7}>\r\n                                  <Input\r\n                                  name=\"metode Pembayaran\"\r\n                                  type=\"select\"\r\n                                  value={payment_method}\r\n                                  onChange={(e) => {\r\n                                    setPaymentMethod(e.target.value);\r\n                                  }}\r\n                                >\r\n                                  <option value=\"\">Pilih Metode Pembayaran</option>\r\n                                  <option value=\"\">Tunai</option>\r\n                                  <option value=\"\">Kredit</option>\r\n                                  \r\n                                </Input>\r\n                              </Col>\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"6\">\r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                              >\r\n                                Total Diskon\r\n                              </Label>\r\n                              <Col sm={7}>\r\n                              <Input\r\n                                  type=\"text\"\r\n                                  name=\"barcode\"\r\n                                  placeholder=\"Masukan Total Diskon\"\r\n                                  value={totaldiskon}\r\n                                  onChange={(e) => {\r\n                                    setTotalDiskon(e.target.value);\r\n                                    \r\n                                  }}\r\n                                />\r\n                              </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                              >\r\n                                PPN\r\n                              </Label>\r\n                              <Col sm={7}>\r\n                              <Input\r\n                                  type=\"text\"\r\n                                  name=\"barcode\"\r\n                                  placeholder=\"Masukan Total PPN\"\r\n                                  value={ppn}\r\n                                  onChange={(e) => {\r\n                                    setPpn(e.target.value);\r\n                                   \r\n                                  }}\r\n                                />\r\n                              </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                              >\r\n                                Promo\r\n                              </Label>\r\n                              <Col sm={7}>\r\n                                <Input\r\n                                  type=\"text\"\r\n                                  name=\"desc\"\r\n                                  placeholder=\"Masukan Promo\"\r\n                                  value={promo}\r\n                                  onChange={(e) => {\r\n                                    setPromo(e.target.value);\r\n                                                                     }}\r\n                                />\r\n                              </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                              >\r\n                                Jangka Waktu\r\n                              </Label>\r\n                              <Col sm={7}>\r\n                              <Input\r\n                                  type=\"text\"\r\n                                  name=\"jangka Waktu\"\r\n                                  placeholder=\"Masukan Jangka Waktu\"\r\n                                  value={jangkawaktu}\r\n                                  onChange={(e) => {\r\n                                    setJangkaWaktu(e.target.value);\r\n                                  }}\r\n                                />\r\n                              </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                              >\r\n                                Termin\r\n                              </Label>\r\n                              <Col sm={7}>\r\n                              <Input\r\n                              name=\"cicil\"\r\n                              type=\"select\"\r\n                              value={cicil}\r\n                              onChange={(e) => {\r\n                                setCicil(e.target.value);\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Pilih Cicilan</option>\r\n                              <option value={1}>Lunas</option>\r\n                              <option value={2}>Belum Lunas</option>\r\n                              \r\n                            </Input>\r\n                              </Col>\r\n                            </FormGroup>\r\n                            \r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                              >\r\n                                Pengiriman\r\n                              </Label>\r\n                              <Col sm={7}>\r\n                              <Input\r\n                                  name=\"satuan\"\r\n                                  type=\"select\"\r\n                                  value={pengiriman}\r\n                                  onChange={(e) => {\r\n                                    setPengiriman(e.target.value);\r\n                                  }}\r\n                                >\r\n                                  <option value={\"DiKirim\"}>DiKirim</option>\r\n                                  <option value={\"DiAntar\"}>DiAntar</option>\r\n                                </Input>\r\n                              </Col>\r\n                            </FormGroup>\r\n                            \r\n                          </Col>\r\n                      </Row>\r\n                      <Table>\r\n                              <thead>\r\n                                <tr>\r\n                                  <th>\r\n                                    <center>Kode Item</center>\r\n                                  </th>\r\n                                  <th>\r\n                                    <center>Quantity</center>\r\n                                  </th>\r\n                                  <th>\r\n                                    <center>Quantity Fisik</center>\r\n                                  </th>\r\n                                  <th>\r\n                                    <center>Keterangan Fisik</center>\r\n                                  </th>\r\n                                  <th>\r\n                                    <center>Aksi</center>\r\n                                  </th>\r\n                                </tr>\r\n                              </thead>\r\n                      </Table>\r\n                      {inputList.map((x, i) => {\r\n                        return (\r\n                          <div key={i}>\r\n                            <Table className=\"Table\">\r\n                              <tbody>\r\n                                <tr>\r\n                                  <td>\r\n                                  <Input\r\n                                      type=\"text\"\r\n                                      name=\"desc\"\r\n                                      placeholder=\"Masukan Item\"\r\n                                      value={kodeitem}\r\n                                      onChange={(e) => {\r\n                                        setKodeItem(e.target.value);\r\n                                      \r\n                                      }}\r\n                                    />\r\n                                  </td>\r\n                                  <td>\r\n                                  <Input\r\n                                      type=\"text\"\r\n                                      name=\"desc\"\r\n                                      placeholder=\"Quantity\"\r\n                                      value={qty}\r\n                                      onChange={(e) => {\r\n                                        setQty(e.target.value);\r\n                                      \r\n                                      }}\r\n                                    />\r\n                                  </td>\r\n                                  <td>\r\n                                  <Input\r\n                                      type=\"text\"\r\n                                      name=\"desc\"\r\n                                      placeholder=\"Masukan Quantity\"\r\n                                      value={qtyfisik}\r\n                                      onChange={(e) => {\r\n                                        setQtyFisik(e.target.value);\r\n                                      \r\n                                      }}\r\n                                    />\r\n                                  </td>\r\n                                  <td>\r\n                                  <Input\r\n                                      type=\"text\"\r\n                                      name=\"desc\"\r\n                                      placeholder=\"Masukan Harga\"\r\n                                      value={keteranganfisik}\r\n                                      onChange={(e) => {\r\n                                        setKeteranganFisik(e.target.value);\r\n                                      \r\n                                      }}\r\n                                    />\r\n                                  </td>\r\n                                  <td>\r\n                                    \r\n                                        {inputList.length !== 1 && (\r\n                                          <Button\r\n                                            color=\"primare\"\r\n                                            onClick={() => handleRemoveClick(i)}\r\n                                          >\r\n                                            <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                                          </Button>\r\n                                        )}\r\n                                        {inputList.length - 1 === i && (\r\n                                          <Button\r\n                                            color=\"primare\"\r\n                                            onClick={handleAddClick}\r\n                                          >\r\n                                            <i className=\"fa fa-plus\"></i>\r\n                                          </Button>\r\n                                        )}\r\n                                  </td>\r\n                                </tr>\r\n                              </tbody>\r\n                            </Table>\r\n                          </div>\r\n                        );  \r\n                      })}\r\n                    </CardBody>\r\n                    <CardFooter >\r\n                    <Row md=\"12\">\r\n                          <Col md=\"8\">\r\n                          </Col>\r\n                          <Col md=\"4\">\r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                              >\r\n                                Harga Total\r\n                              </Label>\r\n                              <Col sm={6}>\r\n                              <Input\r\n                                  type=\"text\"\r\n                                  name=\"barcode\"\r\n                                  placeholder=\"Harga Total\"\r\n                                  value={barcode}\r\n                                  onChange={(e) => {\r\n                                    setBarcode(e.target.value);\r\n                                  }}\r\n                                />\r\n                              </Col>\r\n                            </FormGroup>\r\n                            \r\n                          </Col>\r\n                      </Row>\r\n                    </CardFooter>\r\n                  </Form>\r\n                </CardBody>\r\n                <CardFooter>\r\n                  <Row md=\"12\">\r\n                    <Col md=\"9\">\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      {!isLoading && (\r\n                        <Button color=\"primary\" type=\"submit\">\r\n                          Simpan\r\n                        </Button>\r\n                      )}\r\n                      {isLoading && (\r\n                        <Button color=\"primary\" disabled>\r\n                          <i className=\"fas fa-spinner fa-spin\"></i>\r\n                          {\"\"}\r\n                          loading...\r\n                        </Button>\r\n                      )}\r\n                      <Link className=\"btn btn-info\" to=\"/admin/sales-order\">\r\n                        Kembali\r\n                      </Link>\r\n                    </Col>\r\n                  </Row>\r\n                </CardFooter>\r\n              </Card>\r\n          <Card>\r\n            {/* body dari Input Item */}\r\n            <CardHeader>\r\n                <Row md=\"12\">\r\n                    <Col md=\"6\">\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                        <FormGroup row>\r\n                        <Col sm={9}>\r\n                        </Col>\r\n                        <Link className=\"btn btn-info\" to=\"/admin/sales-order/create\">\r\n                            Buat SO\r\n                        </Link>\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n            </CardHeader>\r\n            <CardBody>\r\n            <h3>Data SO </h3>\r\n              <ToolkitProvider\r\n                rowNumber={rowIndex}\r\n                data={allSo}\r\n                keyField=\"id\"\r\n                columns={[\r\n                  {\r\n                    dataField: \"no\",\r\n                    text: \"#\",\r\n                    sort: true,\r\n                    page: 1,\r\n                    formatter: (cell, row, index) => {\r\n                      let currentRow = ++index;\r\n                      return currentRow + rowIndex;\r\n                    },\r\n                  },\r\n                  {\r\n                    dataField: \"order_code\",\r\n                    text: \"Kode SO\",\r\n                    sort: true,\r\n                  },\r\n                  {\r\n                    dataField: \"customer\",\r\n                    text: \"Customer\",\r\n                    sort: true,\r\n                  },\r\n                  {\r\n                    dataField: \"satuan\",\r\n                    text: \"Satuan\",\r\n                    sort: true,\r\n                  },\r\n                  {\r\n                    dataField: \"price_1\",\r\n                    text: \"Harga \",\r\n                    sort: true,\r\n                  },\r\n                  {\r\n                    dataField: \"\",\r\n                    text: \"Aksi\",\r\n                    formatter: (cell, row, index) => {\r\n                      return (\r\n                        <ButtonGroup>\r\n                          <Button>\r\n                            <Link\r\n                              to={redirectPrefix + row.id}\r\n                              id={\"tooltip_\" + row.id}\r\n                            >\r\n                              <i className=\"fas fa-user-edit\" />\r\n                            </Link>\r\n                          </Button>\r\n                          <UncontrolledTooltip\r\n                            delay={0}\r\n                            target={\"tooltip_\" + row.id}\r\n                          >\r\n                            Edit\r\n                          </UncontrolledTooltip>\r\n                        </ButtonGroup>\r\n                      );\r\n                    },\r\n                  },\r\n                ]}\r\n              >\r\n                {(props) => (\r\n                  <div className=\"py-4 table-responsive\">\r\n                    <BootstrapTable\r\n                      remote\r\n                      {...props.baseProps}\r\n                      bootstrap4={true}\r\n                      bordered={false}\r\n                      hover={true}\r\n                      pagination={paginationFactory({ ...paginationOption })}\r\n                      onTableChange={handleTableChange}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </ToolkitProvider>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </Row>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default Index;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { \r\n    Card,\r\n    Button, \r\n    Row, \r\n    Col, \r\n    CardBody, \r\n    CardHeader, \r\n    UncontrolledTooltip, \r\n    ButtonGroup, \r\n    Collapse, \r\n    Form, \r\n    FormGroup, \r\n    Label, \r\n    Input \r\n} from 'reactstrap';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst ValidasiSo = () => {\r\n  const token = localStorage.token;\r\n  const redirectPrefix = `/admin/sales-order/validasi-penawaran-so/edit/`;\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allSo, setAllSo] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n  const [order_code, setOrderCode] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n  \r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, order_code, description);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort, order_code, description) => {\r\n    getSo(page, perPage, sort, order_code, description);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setOrderCode(order_code);\r\n    setDescription(description);\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort,  order_code, description)\r\n    }\r\n  }\r\n\r\n  \r\n  useEffect(() => {\r\n    getSo(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  // fungsi dari ambil data\r\n  const getSo = (page, perPage, currentSort) => {\r\n    \r\n    let filter = { \r\n        page: page, \r\n        per_page: perPage, \r\n        approve: 0,\r\n        admin_approval: 0,\r\n        clear : 0,\r\n    \r\n    };\r\n    const data = filter;\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/sales-order/page`, data, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setAllSo(data.data.response_data);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const reset = () => {\r\n    setOrderCode(\"\");\r\n    setDescription(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>Validasi Penawaran SO</h3>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n              <h3 onClick={toggleOpen} >Search &nbsp;\r\n                  {\r\n                    isOpen === true ? <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i> : <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  }\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                        <Row md=\"12\">\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Kode SO</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Kode So\"\r\n                                value={order_code}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, e.target.value, description)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Deskripsi</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Deskripsi\"\r\n                                value={description}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, order_code, e.target.value)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Button type=\"button\" onClick={reset} color=\"secondary\">Reset</Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Collapse>\r\n                    <ToolkitProvider\r\n                            rowNumber={rowIndex}\r\n                            data={allSo}\r\n                            keyField=\"id\"\r\n                            columns={[\r\n                            {\r\n                                dataField: \"no\",\r\n                                text: \"#\",\r\n                                sort: true,\r\n                                page: 1,\r\n                                formatter: (cell, row, index) => {\r\n                                let currentRow = ++index;\r\n                                return currentRow + rowIndex;\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"order_code\",\r\n                                text: \"Kode SO\",\r\n                                sort: true,\r\n                            },\r\n                            \r\n                            {\r\n                                dataField: \"keterangan_payment\",\r\n                                text: \"keterangan Pembayaran\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"is_cicil\",\r\n                                text: \"Termin\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"keterangan_so\",\r\n                                text: \"Keterangan So\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"so_type\",\r\n                                text: \"Tipe SO\",\r\n                                sort: true,\r\n                                formatter: (cell, row) => {\r\n                                    return row.approve === 0 ? \"Ready\" : \"Indent\"  ;\r\n                                    },\r\n                            },\r\n                            {\r\n                                dataField: \"approve\",\r\n                                text: \"Status\",\r\n                                sort: true,\r\n                                formatter: (cell, row) => {\r\n                                    return row.status_barang === 0\r\n                                      ? 'proses'\r\n                                      : row.status_barang === 1\r\n                                      ? 'Setuju'\r\n                                      : 'Tidak Setuju';\r\n                                  },\r\n                            },\r\n                            {\r\n                                dataField: \"aksi\", text: \"Aksi\", formatter: (cell, row, index) => {\r\n                                return (\r\n                                    <ButtonGroup>\r\n                                    <Button>\r\n                                        <Link\r\n                                        to={redirectPrefix + row.id}\r\n                                        id={\"tooltip_\" + row.id}\r\n                                        >\r\n                                        <i className=\"fas fa-user-edit\" />\r\n                                        </Link>\r\n                                    </Button>\r\n                                    <UncontrolledTooltip delay={0} target={\"tooltip_\" + row.id}>\r\n                                        VALIDASI\r\n                                    </UncontrolledTooltip>\r\n                                    </ButtonGroup>\r\n                                )\r\n                                }\r\n                            },\r\n                            ]}\r\n                        >\r\n                            {(props) => (\r\n                            <div className=\"py-4 table-responsive\">\r\n                                <BootstrapTable\r\n                                remote\r\n                                {...props.baseProps}\r\n                                bootstrap4={true}\r\n                                bordered={false}\r\n                                hover={true}\r\n                                pagination={paginationFactory({ ...paginationOption })}\r\n                                onTableChange={handleTableChange}\r\n                                />\r\n                            </div>\r\n                            )}\r\n                    </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ValidasiSo;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { \r\n    Card, \r\n    Button, \r\n    Row, \r\n    Col, \r\n    CardBody, \r\n    CardHeader,  \r\n    ButtonGroup, \r\n    Collapse, \r\n    Form, \r\n    FormGroup, \r\n    Label, \r\n    Input \r\n} from 'reactstrap';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst AdminApprove = () => {\r\n  const token = localStorage.token;\r\n   const redirectPrefix = `/admin/sales-order/validasi-admin-so/edit/`;\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allSo, setAllSo] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n  const [ordercode, setOrderCode] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n  \r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, ordercode, description);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort, ordercode, description) => {\r\n    getSo(page, perPage, sort, ordercode, description);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setOrderCode(ordercode);\r\n    setDescription(description);\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort,  ordercode, description)\r\n    }\r\n  }\r\n\r\n  \r\n  useEffect(() => {\r\n    getSo(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  // fungsi dari ambil data\r\n  const getSo = (page, perPage, currentSort) => {\r\n    \r\n    let filter = { \r\n      page: page, \r\n      per_page: perPage, \r\n      approve : 1, \r\n      admin_approval: 0,\r\n    \r\n    };\r\n    const data = filter;\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/sales-order/page`, data, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setAllSo(data.data.response_data);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const reset = () => {\r\n    setOrderCode(\"\");\r\n    setDescription(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>Validasi Admin SO</h3>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n              <h3 onClick={toggleOpen} >Search &nbsp;\r\n                  {\r\n                    isOpen === true ? <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i> : <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  }\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                        <Row md=\"12\">\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Kode SO</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Kode SO\"\r\n                                value={ordercode}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, e.target.value, description)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Deskripsi</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Deskripsi\"\r\n                                value={description}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, ordercode, e.target.value)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Button type=\"button\" onClick={reset} color=\"secondary\">Reset</Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Collapse>\r\n                    <ToolkitProvider\r\n                            rowNumber={rowIndex}\r\n                            data={allSo}\r\n                            keyField=\"id\"\r\n                            columns={[\r\n                            {\r\n                                dataField: \"no\",\r\n                                text: \"#\",\r\n                                sort: true,\r\n                                page: 1,\r\n                                formatter: (cell, row, index) => {\r\n                                let currentRow = ++index;\r\n                                return currentRow + rowIndex;\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"order_code\",\r\n                                text: \"Kode SO\",\r\n                                sort: true,\r\n                            },\r\n                            \r\n                            {\r\n                                dataField: \"keterangan_payment\",\r\n                                text: \"keterangan Pembayaran\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"is_cicil\",\r\n                                text: \"Termin\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"keterangan_po\",\r\n                                text: \"Keterangan Po\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"so_type\",\r\n                                text: \"Tipe SO\",\r\n                                sort: true,\r\n                                formatter: (cell, row) => {\r\n                                    return row.approve === 0 ? \"Ready\" : \"Indent\"  ;\r\n                                    },\r\n                            },\r\n                            {\r\n                                dataField: \"admin_approval\",\r\n                                text: \"Status\",\r\n                                sort: true,\r\n                                formatter: (cell, row) => {\r\n                                    return row.status_barang === 0\r\n                                      ? 'proses'\r\n                                      : row.status_barang === 1\r\n                                      ? 'Setuju'\r\n                                      : 'Tidak Setuju';\r\n                                  },\r\n                            },\r\n                            {\r\n                                dataField: \"aksi\", text: \"Aksi\", formatter: (cell, row, index) => {\r\n                                return (\r\n                                    <ButtonGroup>\r\n                                        <Button>\r\n                                            <Link\r\n                                            to={redirectPrefix + row.id}\r\n                                            id={\"tooltip_\" + row.id}\r\n                                            >\r\n                                            <i className=\"fas fa-user-edit\" />\r\n                                            </Link>\r\n                                        </Button>\r\n                                    </ButtonGroup>\r\n                                )\r\n                                }\r\n                            },\r\n                            ]}\r\n                        >\r\n                            {(props) => (\r\n                            <div className=\"py-4 table-responsive\">\r\n                                <BootstrapTable\r\n                                remote\r\n                                {...props.baseProps}\r\n                                bootstrap4={true}\r\n                                bordered={false}\r\n                                hover={true}\r\n                                pagination={paginationFactory({ ...paginationOption })}\r\n                                onTableChange={handleTableChange}\r\n                                />\r\n                            </div>\r\n                            )}\r\n                    </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminApprove;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n     Card, \r\n     Button, \r\n     Row, \r\n     Col, \r\n     CardBody, \r\n     CardHeader, \r\n     ButtonGroup, \r\n     Collapse, \r\n     Form, \r\n     FormGroup, \r\n     Label, \r\n     Input \r\n    } from 'reactstrap';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst ValidatorSo = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const redirectPrefix = `/admin/sales-order/validasi-pimpinan-so/edit/`;\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allSo, setAllSo] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n  const [ordercode, setOrderCode] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n  \r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, ordercode, description);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort, ordercode, description) => {\r\n    getPo(page, perPage, sort, ordercode, description);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setOrderCode(ordercode);\r\n    setDescription(description);\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort,  ordercode, description)\r\n    }\r\n  }\r\n\r\n  \r\n  useEffect(() => {\r\n    getSo(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  // fungsi dari ambil data\r\n  const getSo = (page, perPage, currentSort) => {\r\n    \r\n    let filter = { \r\n      page: page, \r\n      per_page: perPage, \r\n      approve : 1,\r\n      admin_approval : 1,\r\n      clear : 0, \r\n    \r\n    };\r\n    const data = filter;\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/sales-order/page`, data, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setAllSo(data.data.response_data);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const reset = () => {\r\n    setOrderCode(\"\");\r\n    setDescription(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>Validasi Pimpinan</h3>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n              <h3 onClick={toggleOpen} >Search &nbsp;\r\n                  {\r\n                    isOpen === true ? <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i> : <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  }\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                        <Row md=\"12\">\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Kode SO</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Kode SO\"\r\n                                value={ordercode}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, e.target.value, description)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Deskripsi</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Deskripsi\"\r\n                                value={description}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, ordercode, e.target.value)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Button type=\"button\" onClick={reset} color=\"secondary\">Reset</Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Collapse>\r\n                    <ToolkitProvider\r\n                            rowNumber={rowIndex}\r\n                            data={allSo}\r\n                            keyField=\"id\"\r\n                            columns={[\r\n                                {\r\n                                    dataField: \"no\",\r\n                                    text: \"#\",\r\n                                    sort: true,\r\n                                    page: 1,\r\n                                    formatter: (cell, row, index) => {\r\n                                    let currentRow = ++index;\r\n                                    return currentRow + rowIndex;\r\n                                    },\r\n                                },\r\n                                {\r\n                                    dataField: \"order_code\",\r\n                                    text: \"Kode SO\",\r\n                                    sort: true,\r\n                                },\r\n                                \r\n                                {\r\n                                    dataField: \"keterangan_payment\",\r\n                                    text: \"keterangan Pembayaran\",\r\n                                    sort: true,\r\n                                },\r\n                                {\r\n                                    dataField: \"is_cicil\",\r\n                                    text: \"Termin\",\r\n                                    sort: true,\r\n                                },\r\n                                {\r\n                                    dataField: \"keterangan_so\",\r\n                                    text: \"Keterangan SO\",\r\n                                    sort: true,\r\n                                },\r\n                                {\r\n                                    dataField: \"so_type\",\r\n                                    text: \"Tipe SO\",\r\n                                    sort: true,\r\n                                    formatter: (cell, row) => {\r\n                                        return row.so_type === 0 ? \"Ready\" : \"Indent\"  ;\r\n                                        },\r\n                                },\r\n                                {\r\n                                    dataField: \"clear\",\r\n                                    text: \"Status\",\r\n                                    sort: true,\r\n                                    formatter: (cell, row) => {\r\n                                        return row.status_barang === 0\r\n                                          ? 'proses'\r\n                                          : row.status_barang === 1\r\n                                          ? 'Setuju'\r\n                                          : 'Tidak Setuju';\r\n                                      },\r\n                                },\r\n                                {\r\n                                    dataField: \"aksi\", text: \"Aksi\", formatter: (cell, row, index) => {\r\n                                    return (\r\n                                        <ButtonGroup>\r\n                                            <Button>\r\n                                                <Link\r\n                                                to={redirectPrefix + row.id}\r\n                                                id={\"tooltip_\" + row.id}\r\n                                                >\r\n                                                <i className=\"fas fa-user-edit\" />\r\n                                                </Link>\r\n                                            </Button>\r\n                                        </ButtonGroup>\r\n                                    )\r\n                                    }\r\n                                },\r\n                                ]}\r\n                        >\r\n                            {(props) => (\r\n                            <div className=\"py-4 table-responsive\">\r\n                                <BootstrapTable\r\n                                remote\r\n                                {...props.baseProps}\r\n                                bootstrap4={true}\r\n                                bordered={false}\r\n                                hover={true}\r\n                                pagination={paginationFactory({ ...paginationOption })}\r\n                                onTableChange={handleTableChange}\r\n                                />\r\n                            </div>\r\n                            )}\r\n                    </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ValidatorSo;\r\n","import React from 'react';\r\nimport { Modal, Button, Label, FormGroup, Input } from 'reactstrap';\r\n\r\nexport default function DetailData(props) {\r\n  return (\r\n    <Modal\r\n      className=\"modal-dialog-centered\"\r\n      isOpen={props.isOpen}\r\n      toggle={props.onCloseDetail}\r\n    >\r\n      <div className=\"modal-header\">\r\n        <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n          Detail\r\n        </h5>\r\n        <button\r\n          aria-label=\"Close\"\r\n          className=\"close\"\r\n          data-dismiss=\"modal\"\r\n          type=\"button\"\r\n          onClick={props.onCloseDetail}\r\n        >\r\n          <span aria-hidden={true}>×</span>\r\n        </button>\r\n      </div>\r\n      <div className=\"modal-body\">\r\n        {props.dataSoRetur && (\r\n          <div>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\">Username SO</Label>\r\n              <Input\r\n                disabled\r\n                type=\"text\"\r\n                value={props.dataSoRetur?.username_so}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\">Keterangan SO</Label>\r\n              <Input\r\n                disabled\r\n                type=\"text\"\r\n                value={props.dataSoRetur?.keterangan_so}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\">Username Validator</Label>\r\n              <Input\r\n                disabled\r\n                type=\"text\"\r\n                value={props.dataSoRetur?.username_validator}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\">Keterangan Validator</Label>\r\n              <Input\r\n                disabled\r\n                type=\"text\"\r\n                value={props.dataSoRetur?.keterangan_validator}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\">Username Gudang</Label>\r\n              <Input\r\n                disabled\r\n                type=\"text\"\r\n                value={props.dataSoRetur?.username_gudang}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\">Keterangan Payment</Label>\r\n              <Input\r\n                disabled\r\n                type=\"text\"\r\n                value={props.dataSoRetur?.keterangan_payment}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\">Payment Method</Label>\r\n              <Input\r\n                disabled\r\n                type=\"text\"\r\n                value={\r\n                  props.dataSoRetur?.payment_method === 1\r\n                    ? 'Tunai'\r\n                    : 'Tempo / Termin / Utang'\r\n                }\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\">Is Cicil</Label>\r\n              <Input\r\n                disabled\r\n                type=\"text\"\r\n                value={\r\n                  props.dataSoRetur?.is_cicil === 0\r\n                    ? 'Pilih Cicilan'\r\n                    : props.dataSoRetur?.is_cicil === 1\r\n                    ? 'Cicilan (Lunas)'\r\n                    : 'Cicilan (Belum Lunas)'\r\n                }\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\"> SO Type</Label>\r\n              <Input\r\n                disabled\r\n                type=\"text\"\r\n                value={\r\n                  props.dataSoRetur?.is_cicil === 1\r\n                    ? 'Konvensional'\r\n                    : 'Cicilan (Belum Lunas)'\r\n                }\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\">Clear</Label>\r\n              <Input\r\n                disabled\r\n                type=\"text\"\r\n                value={\r\n                  props.dataSoRetur?.clear === 1\r\n                    ? 'Disetujui'\r\n                    : props.dataSoRetur?.clear === 2\r\n                    ? 'Ditolak'\r\n                    : 'Dibatalkan'\r\n                }\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\">Approve</Label>\r\n              <Input\r\n                disabled\r\n                type=\"text\"\r\n                value={\r\n                  props.dataSoRetur?.approve === 1\r\n                    ? 'Disetujui'\r\n                    : props.dataSoRetur?.approve === 2\r\n                    ? 'Ditolak'\r\n                    : 'Dibatalkan'\r\n                }\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\">Status Barang</Label>\r\n              <Input\r\n                disabled\r\n                type=\"text\"\r\n                value={\r\n                  props.dataSoRetur?.status_barang === 1\r\n                    ? 'Disetujui'\r\n                    : props.dataSoRetur?.status_barang === 2\r\n                    ? 'Ditolak'\r\n                    : 'Dibatalkan'\r\n                }\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\">Qty</Label>\r\n              <Input\r\n                disabled\r\n                type=\"text\"\r\n                value={props.dataSoRetur?.total_qty}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\">Harga</Label>\r\n              <Input\r\n                disabled\r\n                type=\"text\"\r\n                value={props.dataSoRetur?.total_price}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\">Total Qty Fisik</Label>\r\n              <Input\r\n                disabled\r\n                type=\"text\"\r\n                value={props.dataSoRetur?.total_qty_fisik}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\">Total Harga Fisik</Label>\r\n              <Input\r\n                disabled\r\n                type=\"text\"\r\n                value={props.dataSoRetur?.total_price_fisik}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\">Item or Money</Label>\r\n              <Input\r\n                disabled\r\n                type=\"text\"\r\n                value={\r\n                  props.dataSoRetur?.item_or_money === 1 ? 'Item' : 'Money'\r\n                }\r\n              />\r\n            </FormGroup>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        <Button\r\n          color=\"info\"\r\n          data-dismiss=\"modal\"\r\n          type=\"button\"\r\n          block\r\n          onClick={props.onCloseDetail}\r\n        >\r\n          Tutup\r\n        </Button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  Card,\r\n  Button,\r\n  Row,\r\n  CardBody,\r\n  CardHeader,\r\n  Container,\r\n  UncontrolledTooltip,\r\n  ButtonGroup,\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport SimpleHeader from 'components/Headers/SimpleHeader.js';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport DetailData from './DetailData';\r\n\r\nconst SalesOrderReturn = (props) => {\r\n  const token = localStorage.token;\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    Authorization: `Bearer ${token}`,\r\n  };\r\n  const redirectPrefix = `/admin/so-return/edit/`;\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allSoReturn, setAllSoReturn] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState('');\r\n  const [openDetail, setOpenDetail] = useState(false);\r\n  const [selectedRowData, setSelectedRowData] = useState({});\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{' '}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort);\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{' '}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const updateDataTable = (page, perPage, sort) => {\r\n    getSoReturn(page, perPage, sort);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n  };\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === 'sort') {\r\n      let sort = `${sortField} ${sortOrder}`;\r\n      updateDataTable(page, perPage, sort);\r\n    }\r\n  };\r\n\r\n  useEffect(async () => {\r\n    await getSoReturn(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  const getSoReturn = async (page, perPage, currentSort) => {\r\n    let filter = { page: page, per_page: perPage };\r\n    const data = filter;\r\n    await axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/retur-so/page`, data, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setAllSoReturn(data.data.response_data);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const rowEvents = {\r\n    onDoubleClick: (e, row, rowIndex) => {\r\n      setHide(false);\r\n      setSelectedAcquirerId(row.acquirer_id);\r\n      setSelectAcquirerName(row.acquirer_name);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {alert}\r\n      <SimpleHeader name=\"Sales Order Return\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div\r\n                  style={{ display: 'flex', justifyContent: 'space-between' }}\r\n                >\r\n                  <h3>List Sales Order Return</h3>\r\n                  <div style={{ textAlign: 'right' }}>\r\n                    <Link className=\"btn btn-info\" to=\"/admin/so-return/create\">\r\n                      Add\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allSoReturn}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: 'no',\r\n                      text: '#',\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: 'username_so',\r\n                      text: 'Username Sales Order',\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: 'retur_code',\r\n                      text: 'Kode Retur',\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: 'customer',\r\n                      text: 'Customer',\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: 'item_or_money',\r\n                      text: 'Item atau Uang',\r\n                      sort: true,\r\n                      formatter: (cell, row) => {\r\n                        return row.item_or_money === 1 ? 'Item' : 'Money';\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: 'total_qty',\r\n                      text: 'Quality',\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: 'total_price',\r\n                      text: 'Total Harga',\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: 'status_barang',\r\n                      text: 'Status',\r\n                      sort: true,\r\n                      formatter: (cell, row) => {\r\n                        return row.status_barang === 0\r\n                          ? 'Belum diproses'\r\n                          : row.status_barang === 1\r\n                          ? 'Diterima'\r\n                          : 'Belum diterima';\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: '',\r\n                      text: '',\r\n                      formatter: (cell, row, index) => {\r\n                        return (\r\n                          <>\r\n                            <ButtonGroup>\r\n                              <Button>\r\n                                <Link\r\n                                  to={redirectPrefix + row.id}\r\n                                  id={'tooltip_' + row.id}\r\n                                >\r\n                                  <i className=\"fas fa-user-edit\" />\r\n                                </Link>\r\n                              </Button>\r\n                              <UncontrolledTooltip\r\n                                delay={0}\r\n                                target={'tooltip_' + row.id}\r\n                              >\r\n                                Edit\r\n                              </UncontrolledTooltip>\r\n                            </ButtonGroup>\r\n                            <Button\r\n                              onClick={() => {\r\n                                setOpenDetail(true);\r\n                                setSelectedRowData(row);\r\n                              }}\r\n                              size=\"sm\"\r\n                              color=\"primary\"\r\n                              type=\"button\"\r\n                            >\r\n                              Detail\r\n                            </Button>\r\n                          </>\r\n                        );\r\n                      },\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        rowEvents={rowEvents}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n                <DetailData\r\n                  isOpen={openDetail}\r\n                  onCloseDetail={() => setOpenDetail(false)}\r\n                  dataSoRetur={selectedRowData}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SalesOrderReturn;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  CardBody,\r\n  CardHeader,\r\n  Container,\r\n  UncontrolledTooltip,\r\n  ButtonGroup,\r\n  Collapse,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst HistorySo = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n  const [allHistory, setAllHistory] = useState([]);\r\n\r\n  const [usernameSo, setUsernameSo] = useState(\"\");\r\n  const [orderCode, setOrderCode] = useState(\"\");\r\n  const [soType, setSoType] = useState(\"\");\r\n  const [person, setPerson] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const [persons, setPersons] = useState([]);\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(\r\n        page,\r\n        perPage,\r\n        currentSort,\r\n        usernameSo,\r\n        orderCode,\r\n        soType,\r\n        person,\r\n        startDate,\r\n        endDate\r\n      );\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort);\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const updateDataTable = (\r\n    page,\r\n    perPage,\r\n    sort,\r\n    usernameSo,\r\n    orderCode,\r\n    soType,\r\n    person,\r\n    startDate,\r\n    endDate\r\n  ) => {\r\n    getHistoryPo(\r\n      page,\r\n      perPage,\r\n      sort,\r\n      usernameSo,\r\n      orderCode,\r\n      soType,\r\n      person,\r\n      startDate,\r\n      endDate\r\n    );\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setUsernameSo(usernameSo);\r\n    setOrderCode(orderCode);\r\n    setSoType(soType);\r\n    setPerson(person);\r\n    setStartDate(startDate);\r\n    setEndDate(endDate);\r\n  };\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`;\r\n      updateDataTable(\r\n        page,\r\n        perPage,\r\n        currentSort,\r\n        usernameSo,\r\n        orderCode,\r\n        soType,\r\n        person,\r\n        startDate,\r\n        endDate\r\n      );\r\n    }\r\n  };\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getHistoryPo(page, perPage, currentSort, \"\", \"\", \"\", \"\", \"\", \"\");\r\n    getPerson();\r\n  }, []);\r\n\r\n  const getHistoryPo = async (\r\n    page,\r\n    perPage,\r\n    currentSort,\r\n    username_so = null,\r\n    order_code = null,\r\n    so_type = 0,\r\n    person = 0,\r\n    start_date = null,\r\n    end_date = null\r\n  ) => {\r\n    let filter = {\r\n      page: page,\r\n      per_page: perPage,\r\n      warehouse_id: parseInt(warehouse),\r\n    };\r\n    if (username_so !== null) {\r\n      filter = Object.assign(filter, { username_so: username_so });\r\n    }\r\n    if (order_code !== null) {\r\n      filter = Object.assign(filter, { order_code: order_code });\r\n    }\r\n    if (so_type !== 0) {\r\n      filter = Object.assign(filter, { so_type: parseInt(so_type) });\r\n    }\r\n    if (person !== 0) {\r\n      filter = Object.assign(filter, { person: parseInt(person) });\r\n    }\r\n    if (start_date !== null) {\r\n      filter = Object.assign(filter, { start_date: start_date });\r\n    }\r\n    if (end_date !== null) {\r\n      filter = Object.assign(filter, { end_date: end_date });\r\n    }\r\n    const data = filter;\r\n    const headers = {\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_BASE_URL}/sales-order/history`,\r\n      data,\r\n      { headers }\r\n    );\r\n    setAllHistory(res.data.response_data);\r\n    setPage(res.data.current_page + 1);\r\n    setPerpage(res.data.per_page);\r\n    setTotalItem(res.data.total_item);\r\n  };\r\n\r\n  const getPerson = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/person/list`, { headers })\r\n      .then((data) => {\r\n        setPersons(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const reset = () => {\r\n    setUsernameSo(\"\");\r\n    setOrderCode(\"\");\r\n    setsoType(\"\");\r\n    setPerson(\"\");\r\n    setStartDate(\"\");\r\n    setEndDate(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\", \"\", \"\", \"\", \"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {alert}\r\n      <SimpleHeader name=\"History SO\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <h3>List History SO</h3>\r\n                  <div style={{ textAlign: \"right\" }}></div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <h3 onClick={toggleOpen}>\r\n                  Filter &nbsp;\r\n                  {isOpen === true ? (\r\n                    <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\r\n                  ) : (\r\n                    <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  )}\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                    <Row md=\"12\">\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label htmlFor=\"exampleFormControlSelect3\">\r\n                            Username SO\r\n                          </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            placeholder=\"Masukan Username SO\"\r\n                            value={usernameSo}\r\n                            onChange={(e) =>\r\n                              updateDataTable(\r\n                                1,\r\n                                perPage,\r\n                                currentSort,\r\n                                e.target.value,\r\n                                orderCode,\r\n                                soType,\r\n                                person,\r\n                                startDate,\r\n                                endDate\r\n                              )\r\n                            }\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label htmlFor=\"exampleFormControlSelect3\">\r\n                            Order Code\r\n                          </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            placeholder=\"Masukan Order Code\"\r\n                            value={orderCode}\r\n                            onChange={(e) =>\r\n                              updateDataTable(\r\n                                1,\r\n                                perPage,\r\n                                currentSort,\r\n                                usernameSo,\r\n                                e.target.value,\r\n                                soType,\r\n                                person,\r\n                                startDate,\r\n                                endDate\r\n                              )\r\n                            }\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label\r\n                            className=\"form-control-label\"\r\n                            htmlFor=\"exampleFormControlSelect3\"\r\n                          >\r\n                            PO Type\r\n                          </Label>\r\n                          <Input\r\n                            name=\"paymentMethod\"\r\n                            type=\"select\"\r\n                            value={soType}\r\n                            onChange={(e) =>\r\n                              updateDataTable(\r\n                                1,\r\n                                perPage,\r\n                                currentSort,\r\n                                usernameSo,\r\n                                orderCode,\r\n                                e.target.value,\r\n                                person,\r\n                                startDate,\r\n                                endDate\r\n                              )\r\n                            }\r\n                          >\r\n                            <option value=\"\">Pilih Payment Method</option>\r\n                            <option value={1}>Konvensional</option>\r\n                            <option value={2}>Indent</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label\r\n                            className=\"form-control-label\"\r\n                            htmlFor=\"exampleFormControlSelect3\"\r\n                          >\r\n                            Person\r\n                          </Label>\r\n                          <Input\r\n                            name=\"person\"\r\n                            type=\"select\"\r\n                            value={person}\r\n                            onChange={(e) =>\r\n                              updateDataTable(\r\n                                1,\r\n                                perPage,\r\n                                currentSort,\r\n                                usernameSo,\r\n                                orderCode,\r\n                                soType,\r\n                                e.target.value,\r\n                                startDate,\r\n                                endDate\r\n                              )\r\n                            }\r\n                          >\r\n                            <option value=\"\">Pilih Person</option>\r\n                            {persons.map((person, key) => {\r\n                              return (\r\n                                <option key={key} value={person.id}>\r\n                                  {person.person_name}\r\n                                </option>\r\n                              );\r\n                            })}\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label htmlFor=\"exampleFormControlSelect3\">\r\n                            Start Date\r\n                          </Label>\r\n                          <Input\r\n                            id=\"example-date-input\"\r\n                            type=\"date\"\r\n                            value={startDate}\r\n                            onChange={(e) =>\r\n                              updateDataTable(\r\n                                1,\r\n                                perPage,\r\n                                currentSort,\r\n                                usernameSo,\r\n                                orderCode,\r\n                                soType,\r\n                                person,\r\n                                e.target.value,\r\n                                endDate\r\n                              )\r\n                            }\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label htmlFor=\"exampleFormControlSelect3\">\r\n                            End Date\r\n                          </Label>\r\n                          <Input\r\n                            id=\"example-date-input\"\r\n                            type=\"date\"\r\n                            value={endDate}\r\n                            onChange={(e) =>\r\n                              updateDataTable(\r\n                                1,\r\n                                perPage,\r\n                                currentSort,\r\n                                usernameSo,\r\n                                orderCode,\r\n                                soType,\r\n                                person,\r\n                                startDate,\r\n                                e.target.value\r\n                              )\r\n                            }\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>\r\n                        <Button type=\"button\" onClick={reset} color=\"secondary\">\r\n                          Reset\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                </Collapse>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allHistory}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: \"order_code\",\r\n                      text: \"Order Code\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"po_type\",\r\n                      text: \"Type Po\",\r\n                      sort: true,\r\n                      formatter: (cell, row) => {\r\n                        return row.po_type === 1 ? \"Konvensional\" : \"Indent\";\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: \"total_price\",\r\n                      text: \"Total Harga\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"total_qty\",\r\n                      text: \"Total Quantity\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"keterangan_payment\",\r\n                      text: \"Keterangan Payment\",\r\n                      sort: true,\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistorySo;\r\n","import axios from \"axios\";\r\nimport { AppContext } from \"libs/context\";\r\nimport { useContext, useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Input,\r\n} from \"reactstrap\";\r\n\r\nexport default function ModalPembayaran({ total }) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n  const [input1, setInput1] = useState(0);\r\n  const [input2, setInput2] = useState(0);\r\n  const [change, setChange] = useState(0);\r\n  const token = localStorage.token;\r\n  const warehouse = localStorage.getItem(\"warehouse\");\r\n  const { cartKasir, dispatch } = useContext(AppContext);\r\n\r\n  useEffect(() => {\r\n    let total = 0;\r\n    cartKasir.item.forEach((item, index) => {\r\n      total = parseInt(total) + parseInt(item.price) * parseInt(item.qty);\r\n    });\r\n    setTotalPrice(total);\r\n  }, [cartKasir, dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <Button block color=\"danger\" onClick={() => setIsOpen(!isOpen)}>\r\n        Pilih Jenis Pembayaran\r\n      </Button>\r\n      <Modal\r\n        toggle={() => setIsOpen(!isOpen)}\r\n        isOpen={isOpen}\r\n        fade={false}\r\n        style={{ minWidth: \"70%\", top: \"-20%\" }}\r\n      >\r\n        <ModalHeader toggle={() => setIsOpen(!isOpen)}>\r\n          Metode Pembayaran\r\n        </ModalHeader>\r\n        <ModalBody\r\n          cssModule={{\r\n            alignText: \"center\",\r\n          }}\r\n        >\r\n          <div className=\"container\">\r\n            <div className=\"row align-items-center mb-3\">\r\n              <div className=\"col-3\">Nominal Pembayaran 1</div>\r\n              <div className=\"col-1 text-center\">:</div>\r\n              <div className=\"col-4 text-center\">\r\n                <Input\r\n                  type=\"number\"\r\n                  value={input1}\r\n                  placeholder=\"Masukan Nomminal Pembayaran\"\r\n                  onChange={(event) => {\r\n                    console.log(\r\n                      parseInt(change) - parseInt(event.target.value)\r\n                    );\r\n                    setChange(parseInt(change) - parseInt(event.target.value));\r\n                    setInput1(event.target.value);\r\n                  }}\r\n                ></Input>\r\n              </div>\r\n              <div className=\"col-4 text-center\">\r\n                <Input\r\n                  type=\"select\"\r\n                  onChange={(e) => {}}\r\n                  className=\"text-center\"\r\n                >\r\n                  <option value=\"\">-- Pilih Jenis Pembayaran --</option>\r\n                  <option value={1}>Kartu Debit ATM</option>\r\n                  <option value={2}>Tunai</option>\r\n                  <option value={2}>Dompet digital</option>\r\n                </Input>\r\n              </div>\r\n            </div>\r\n            <div className=\"row align-items-center mb-3\">\r\n              <div className=\"col-3\">Nomor Kartu 1</div>\r\n              <div className=\"col-1 text-center\">:</div>\r\n              <div className=\"col-4 text-center\">\r\n                <Input type=\"text\" placeholder=\"Masukan Nomor Kartu\"></Input>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row align-items-center mb-3\">\r\n              <div className=\"col-3\">Nominal Pembayaran 2</div>\r\n              <div className=\"col-1 text-center\">:</div>\r\n              <div className=\"col-4 text-center\">\r\n                <Input\r\n                  type=\"number\"\r\n                  value={input2}\r\n                  onChange={(event) => setInput2(event.target.value)}\r\n                  placeholder=\"Masukan Nomminal Pembayaran\"\r\n                ></Input>\r\n              </div>\r\n              <div className=\"col-4 text-center\">\r\n                <Input type=\"select\" className=\"text-center\">\r\n                  <option value=\"\">-- Pilih Jenis Pembayaran --</option>\r\n                  <option value={1}>Kartu Debit ATM</option>\r\n                  <option value={2}>Tunai</option>\r\n                  <option value={2}>Dompet digital</option>\r\n                </Input>\r\n              </div>\r\n            </div>\r\n            <div className=\"row align-items-center mb-3\">\r\n              <div className=\"col-3\">Nomor Kartu 2</div>\r\n              <div className=\"col-1 text-center\">:</div>\r\n              <div className=\"col-4 text-center\">\r\n                <Input type=\"text\" placeholder=\"Masukan Nomor Kartu\"></Input>\r\n              </div>\r\n            </div>\r\n            <div className=\"row align-items-center mb-3\">\r\n              <div className=\"col-3  \">Jenis Transaksi</div>\r\n              <div className=\"col-1 text-center \">:</div>\r\n              <div className=\"col-4 text-center\">\r\n                <Input\r\n                  onChange={(e) => {\r\n                    dispatch({\r\n                      type: \"setPaymentMethod\",\r\n                      data_id: e.target.value,\r\n                    });\r\n                  }}\r\n                  type=\"select\"\r\n                  defaultValue={1}\r\n                >\r\n                  <option value={1}>Tunai</option>\r\n                  <option value={2}>Tempo</option>\r\n                  <option value={3}>Cicil</option>\r\n                </Input>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row align-items-center mb-3\">\r\n              <div className=\"col-3 text-start  display-1\">Total</div>\r\n              <div className=\"col-1 text-center\">:</div>\r\n              <div className=\"col-6 text-center\">\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  disabled\r\n                  value={\r\n                    \"Rp.\" +\r\n                    totalPrice.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\") +\r\n                    \",-\"\r\n                  }\r\n                  style={{\r\n                    fontSize: 40,\r\n                    paddingTop: 20,\r\n                    top: \"50%\",\r\n                    height: 95,\r\n                    resize: \"none\",\r\n                  }}\r\n                ></textarea>\r\n              </div>\r\n            </div>\r\n            <div className=\"row align-items-center mb-3\">\r\n              <div className=\"col-3  display-3\">Kembali</div>\r\n              <div className=\"col-1 text-center\">:</div>\r\n              <div className=\"col-6 text-center\">\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  disabled\r\n                  value={\r\n                    \"Rp.\" +\r\n                    (\r\n                      -1 * parseInt(totalPrice) +\r\n                      parseInt(input1) +\r\n                      parseInt(input2)\r\n                    )\r\n                      .toFixed(2)\r\n                      .replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\") +\r\n                    \",-\"\r\n                  }\r\n                  style={{\r\n                    fontSize: 40,\r\n                    paddingTop: 20,\r\n                    top: \"50%\",\r\n                    height: 95,\r\n                    resize: \"none\",\r\n                  }}\r\n                ></textarea>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"danger\"\r\n            outline\r\n            onClick={() => {\r\n              if (\r\n                -1 * parseInt(totalPrice) +\r\n                  parseInt(input1) +\r\n                  parseInt(input2) <\r\n                0\r\n              ) {\r\n                alert(\"Nominal Belum Mencukupi\");\r\n              } else {\r\n                axios\r\n                  .post(\r\n                    `${process.env.REACT_APP_API_BASE_URL}/sales-order/save`,\r\n                    {\r\n                      customer: cartKasir.customer,\r\n                      items: cartKasir.item,\r\n                      jangka_waktu: cartKasir.jangka_waktu,\r\n                      keterangan_payment: cartKasir.keterangan_payment,\r\n                      member: cartKasir.member,\r\n                      payment_method: cartKasir.payment_method,\r\n                      promo: cartKasir.promo,\r\n                      receiving_counter: 1,\r\n                      so_type: 1,\r\n                      status_barang: 1,\r\n                      username_kurir: cartKasir.username_kurir,\r\n                      username_so: cartKasir.username_so,\r\n                      warehouse_id: parseInt(warehouse),\r\n                    },\r\n                    {\r\n                      headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                      },\r\n                    }\r\n                  )\r\n                  .then((res) => {\r\n                    if (res.status !== 200) return;\r\n                    window.location.reload();\r\n                    setIsOpen(!isOpen);\r\n                  })\r\n                  .catch((err) => {\r\n                    alert(\"order gagal\");\r\n                  });\r\n                //\r\n              }\r\n            }}\r\n          >\r\n            Konfirmasi Pembayaran\r\n          </Button>{\" \"}\r\n          <Button onClick={() => setIsOpen(!isOpen)}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Input,\r\n  InputGroupText,\r\n  InputGroup,\r\n  Spinner,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nconst debounce = {};\r\n\r\nexport default function ModalAddMember({ item, selectModal }) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [listData, setListData] = useState([]);\r\n  const [input, setInput] = useState(!item.name ? \"\" : item.name);\r\n  useEffect(() => {\r\n    if (!isOpen) return;\r\n    setListData([]);\r\n  }, [isOpen, setIsOpen]);\r\n\r\n  const token = localStorage.token;\r\n  return (\r\n    <div>\r\n      <InputGroup onDoubleClick={() => setIsOpen(true)}>\r\n        <Input\r\n          type=\"text\"\r\n          value={input}\r\n          readOnly\r\n          placeholder=\"Pilih Member\"\r\n        ></Input>\r\n        <InputGroupText disabled style={{ backgroundColor: \"#f3f4fa\" }}>\r\n          <i className=\"fas fa-list\"></i>\r\n        </InputGroupText>\r\n      </InputGroup>\r\n\r\n      <Modal\r\n        toggle={() => setIsOpen(!isOpen)}\r\n        isOpen={isOpen}\r\n        fade={false}\r\n        style={{ minWidth: \"50%\", top: \"-20%\" }}\r\n      >\r\n        <ModalHeader toggle={() => setIsOpen(!isOpen)}>\r\n          List Customer\r\n        </ModalHeader>\r\n        <ModalBody\r\n          cssModule={{\r\n            alignText: \"center\",\r\n          }}\r\n        >\r\n          <InputGroup className=\"mb-3\">\r\n            <InputGroupText style={{ backgroundColor: \"#f3f4fa\" }}>\r\n              <i className=\"fas fa-search\"></i>\r\n            </InputGroupText>\r\n            <Input\r\n              placeholder=\"Isi Minimal 3 huruf\"\r\n              hint=\"Minimal isi 3 baris\"\r\n              onChange={(event) => {\r\n                clearTimeout(debounce);\r\n                if (event.target.value.length < 3) return;\r\n                setIsLoading(true);\r\n                setTimeout(() => {\r\n                  axios\r\n                    .post(\r\n                      `${process.env.REACT_APP_API_BASE_URL}/customer`,\r\n                      {\r\n                        page: 1,\r\n                        per_page: 10,\r\n                        name: event.target.value,\r\n                      },\r\n                      { headers: { Authorization: `Bearer ${token}` } }\r\n                    )\r\n                    .then(({ data }) => {\r\n                      setListData(data.response);\r\n                    })\r\n                    .catch((err) => {\r\n                      console.error(err);\r\n                    })\r\n                    .finally(() => setIsLoading(false));\r\n                }, 500);\r\n              }}\r\n            ></Input>\r\n          </InputGroup>\r\n          {isLoading && loadingSpinner()}\r\n\r\n          {!isLoading && (\r\n            <ToolkitProvider\r\n              keyField=\"id\"\r\n              data={listData}\r\n              columns={[\r\n                {\r\n                  dataField: \"name\",\r\n                  text: \"Nama Customer\",\r\n                  sort: true,\r\n                },\r\n                {\r\n                  dataField: \"phone\",\r\n                  text: \"Nomor HP\",\r\n                  sort: true,\r\n                },\r\n                {\r\n                  dataField: \"\",\r\n                  text: \"\",\r\n                  classes: \"text-center\",\r\n                  formatter: (cell, row) => {\r\n                    return (\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          setIsOpen(false);\r\n                          setInput(row.name);\r\n                          selectModal(\"customer\", row.id, row.name);\r\n                        }}\r\n                        color=\"danger\"\r\n                      >\r\n                        Pilih\r\n                      </Button>\r\n                    );\r\n                  },\r\n                },\r\n              ]}\r\n            >\r\n              {(props) => (\r\n                <BootstrapTable\r\n                  condensed\r\n                  bordered={false}\r\n                  {...props.baseProps}\r\n                />\r\n              )}\r\n            </ToolkitProvider>\r\n          )}\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst loadingSpinner = () => {\r\n  return (\r\n    <div className=\"mb-3 text-center\">\r\n      <Spinner color=\"danger\" type=\"grow\">\r\n        Loading...\r\n      </Spinner>\r\n      <Spinner color=\"success\" type=\"grow\">\r\n        Loading...\r\n      </Spinner>\r\n      <Spinner color=\"primary\" type=\"grow\">\r\n        Loading...\r\n      </Spinner>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Input,\r\n  InputGroupText,\r\n  InputGroup,\r\n  Spinner,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nlet debounce = {};\r\nconst warehouse = localStorage.warehouse;\r\nexport default function ModalAddItem({ item, selectModal }) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [listData, setListData] = useState([]);\r\n  useEffect(() => {\r\n    if (!isOpen) return;\r\n    setListData([]);\r\n  }, [isOpen, setIsOpen]);\r\n\r\n  const token = localStorage.token;\r\n  return (\r\n    <div>\r\n      <InputGroup onDoubleClick={() => setIsOpen(true)}>\r\n        <Input type=\"text\" readOnly placeholder=\"Pilih Item\"></Input>\r\n        <InputGroupText disabled style={{ backgroundColor: \"#f3f4fa\" }}>\r\n          <i className=\"fas fa-list\"></i>\r\n        </InputGroupText>\r\n      </InputGroup>\r\n\r\n      <Modal\r\n        toggle={() => setIsOpen(!isOpen)}\r\n        isOpen={isOpen}\r\n        fade={false}\r\n        style={{ minWidth: \"50%\", top: \"-20%\" }}\r\n      >\r\n        <ModalHeader toggle={() => setIsOpen(!isOpen)}>\r\n          List Customer\r\n        </ModalHeader>\r\n        <ModalBody\r\n          cssModule={{\r\n            alignText: \"center\",\r\n          }}\r\n        >\r\n          <InputGroup className=\"mb-3\">\r\n            <InputGroupText style={{ backgroundColor: \"#f3f4fa\" }}>\r\n              <i className=\"fas fa-search\"></i>\r\n            </InputGroupText>\r\n            <Input\r\n              placeholder=\"Isi Minimal 3 huruf\"\r\n              hint=\"Minimal isi 3 baris\"\r\n              onChange={(event) => {\r\n                clearTimeout(debounce);\r\n                if (event.target.value.length < 3) return;\r\n                setIsLoading(true);\r\n                debounce = setTimeout(() => {\r\n                  axios\r\n                    .post(\r\n                      `${process.env.REACT_APP_API_BASE_URL}/item-stock`,\r\n                      {\r\n                        page: 1,\r\n                        per_page: 10,\r\n                        item_name: event.target.value,\r\n                        warehouse_id: warehouse,\r\n                      },\r\n                      {\r\n                        headers: { Authorization: `Bearer ${token}` },\r\n                      }\r\n                    )\r\n                    .then(({ data }) => {\r\n                      setListData(data.response);\r\n                      setIsLoading(false);\r\n                    });\r\n                }, 1000);\r\n              }}\r\n            ></Input>\r\n          </InputGroup>\r\n          {isLoading && loadingSpinner()}\r\n\r\n          {!isLoading && (\r\n            <ToolkitProvider\r\n              keyField=\"tes\"\r\n              data={listData}\r\n              columns={[\r\n                {\r\n                  dataField: \"item_name\",\r\n                  text: \"Nama Item\",\r\n                  sort: true,\r\n                },\r\n                {\r\n                  dataField: \"barcode\",\r\n                  text: \"barcode item\",\r\n                  sort: true,\r\n                },\r\n                {\r\n                  dataField: \"\",\r\n                  text: \"\",\r\n                  classes: \"text-center\",\r\n                  formatter: (cell, row, index) => {\r\n                    return (\r\n                      <div>\r\n                        <Button\r\n                          key={index * 1000}\r\n                          size=\"sm\"\r\n                          onClick={() => {\r\n                            setIsOpen(false);\r\n                            selectModal(\"item\", row);\r\n                          }}\r\n                          color=\"danger\"\r\n                        >\r\n                          Pilih\r\n                        </Button>\r\n                      </div>\r\n                    );\r\n                  },\r\n                },\r\n              ]}\r\n            >\r\n              {(props) => (\r\n                <BootstrapTable\r\n                  condensed={true}\r\n                  bordered={false}\r\n                  {...props.baseProps}\r\n                />\r\n              )}\r\n            </ToolkitProvider>\r\n          )}\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst loadingSpinner = () => {\r\n  return (\r\n    <div className=\"mb-3 text-center\">\r\n      <Spinner color=\"danger\" type=\"grow\">\r\n        Loading...\r\n      </Spinner>\r\n      <Spinner color=\"success\" type=\"grow\">\r\n        Loading...\r\n      </Spinner>\r\n      <Spinner color=\"primary\" type=\"grow\">\r\n        Loading...\r\n      </Spinner>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Input,\r\n  InputGroupText,\r\n  InputGroup,\r\n  Spinner,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nconst debounce = {};\r\n\r\nexport default function ModalAddKurir({ item, selectModal }) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [listData, setListData] = useState([]);\r\n  const [input, setInput] = useState(!item.name ? \"\" : item.name);\r\n  useEffect(() => {\r\n    if (!isOpen) return;\r\n    setListData([]);\r\n  }, [isOpen, setIsOpen]);\r\n\r\n  const token = localStorage.token;\r\n  return (\r\n    <div>\r\n      <InputGroup onDoubleClick={() => setIsOpen(true)}>\r\n        <Input\r\n          type=\"text\"\r\n          value={input}\r\n          readOnly\r\n          placeholder=\"Pilih Kurir\"\r\n        ></Input>\r\n        <InputGroupText disabled style={{ backgroundColor: \"#f3f4fa\" }}>\r\n          <i className=\"fas fa-list\"></i>\r\n        </InputGroupText>\r\n      </InputGroup>\r\n\r\n      <Modal\r\n        toggle={() => setIsOpen(!isOpen)}\r\n        isOpen={isOpen}\r\n        fade={false}\r\n        style={{ minWidth: \"50%\", top: \"-20%\" }}\r\n      >\r\n        <ModalHeader toggle={() => setIsOpen(!isOpen)}>\r\n          List Customer\r\n        </ModalHeader>\r\n        <ModalBody\r\n          cssModule={{\r\n            alignText: \"center\",\r\n          }}\r\n        >\r\n          <InputGroup className=\"mb-3\">\r\n            <InputGroupText style={{ backgroundColor: \"#f3f4fa\" }}>\r\n              <i className=\"fas fa-search\"></i>\r\n            </InputGroupText>\r\n            <Input\r\n              placeholder=\"Isi Minimal 3 huruf\"\r\n              hint=\"Minimal isi 3 baris\"\r\n              onChange={(event) => {\r\n                clearTimeout(debounce);\r\n                if (event.target.value.length < 3) return;\r\n                setIsLoading(true);\r\n                setTimeout(() => {\r\n                  axios\r\n                    .post(\r\n                      `${process.env.REACT_APP_API_BASE_URL}/karyawan`,\r\n                      {\r\n                        page: 1,\r\n                        per_page: 10,\r\n                        name: event.target.value,\r\n                        dept_name: \"kurir\",\r\n                      },\r\n                      { headers: { Authorization: `Bearer ${token}` } }\r\n                    )\r\n                    .then(({ data }) => {\r\n                      setListData(data.response);\r\n                    })\r\n                    .catch((err) => {\r\n                      console.error(err);\r\n                    })\r\n                    .finally(() => setIsLoading(false));\r\n                }, 500);\r\n              }}\r\n            ></Input>\r\n          </InputGroup>\r\n          {isLoading && loadingSpinner()}\r\n\r\n          {!isLoading && (\r\n            <ToolkitProvider\r\n              keyField=\"id\"\r\n              data={listData}\r\n              columns={[\r\n                {\r\n                  dataField: \"name\",\r\n                  text: \"Nama Kurir\",\r\n                  sort: true,\r\n                },\r\n                {\r\n                  dataField: \"description\",\r\n                  text: \"Deskripsi\",\r\n                  sort: true,\r\n                },\r\n                {\r\n                  dataField: \"\",\r\n                  text: \"\",\r\n                  classes: \"text-center\",\r\n                  formatter: (cell, row) => {\r\n                    return (\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          setIsOpen(false);\r\n                          setInput(row.name);\r\n                          selectModal(\"kurir\", row.id, row.name);\r\n                        }}\r\n                        color=\"danger\"\r\n                      >\r\n                        Pilih\r\n                      </Button>\r\n                    );\r\n                  },\r\n                },\r\n              ]}\r\n            >\r\n              {(props) => (\r\n                <BootstrapTable\r\n                  condensed\r\n                  bordered={false}\r\n                  {...props.baseProps}\r\n                />\r\n              )}\r\n            </ToolkitProvider>\r\n          )}\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst loadingSpinner = () => {\r\n  return (\r\n    <div className=\"mb-3 text-center\">\r\n      <Spinner color=\"danger\" type=\"grow\">\r\n        Loading...\r\n      </Spinner>\r\n      <Spinner color=\"success\" type=\"grow\">\r\n        Loading...\r\n      </Spinner>\r\n      <Spinner color=\"primary\" type=\"grow\">\r\n        Loading...\r\n      </Spinner>\r\n    </div>\r\n  );\r\n};\r\n","import { createStore } from \"redux\";\r\nconst store = createStore((state, action) => {\r\n  return action;\r\n});\r\nexport default store;\r\n","/*eslint-disable*/\r\nimport { Modal, Button } from \"reactstrap\";\r\nimport store from \"../redux\";\r\n\r\nexport default function DetailData({ visible, data }) {\r\n  function closePreview() {\r\n    store.dispatch({\r\n      type: \"close_modal_preview\",\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      className=\"modal-dialog-centered\"\r\n      isOpen={visible}\r\n      toggle={() => closePreview()}\r\n    >\r\n      <div className=\"modal-header\">\r\n        <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n          Detail\r\n        </h5>\r\n        <button\r\n          aria-label=\"Close\"\r\n          className=\"close\"\r\n          data-dismiss=\"modal\"\r\n          type=\"button\"\r\n          onClick={() => closePreview()}\r\n        >\r\n          <span aria-hidden={true}>×</span>\r\n        </button>\r\n      </div>\r\n      <div className=\"modal-body\">\r\n        <div className=\"table-container\">\r\n          <table className=\"table\">\r\n            <tbody>\r\n              {(Object.keys(data) || []).map((items, i) => (\r\n                <tr key={i}>\r\n                  <td className=\"table-key\">{items}</td>\r\n                  <td className=\"table-value\">{data[items]}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        <Button\r\n          color=\"info\"\r\n          data-dismiss=\"modal\"\r\n          type=\"button\"\r\n          block\r\n          onClick={() => closePreview()}\r\n        >\r\n          Tutup\r\n        </Button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Table,\r\n  Button,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n  Input,\r\n  FormGroup,\r\n} from \"reactstrap\";\r\nimport DetailData from \"../snippets/DetailData\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\n// state management\r\nimport store from \"../snippets/redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst base_url = process.env.REACT_APP_API_BASE_URL;\r\n\r\nexport default function SoReturHistory() {\r\n  const [listData, setListData] = useState([]);\r\n  const [amountShown, setAmountShown] = useState(10);\r\n  const [returCode, setReturCode] = useState(\"\");\r\n  const usernameSo = localStorage.username;\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const [preview, setPreview] = useState(false);\r\n  const [detailData, setDetailData] = useState({});\r\n  const [orderCode, setOrderCode] = useState([]);\r\n\r\n  const [nav, setNav] = useState([1]);\r\n  const [activeNav, setActiveNav] = useState(1);\r\n\r\n  useEffect(() => {\r\n    listenEvent();\r\n    getData(activeNav, amountShown, returCode, usernameSo, startDate, endDate);\r\n    getOrderCode();\r\n  }, []);\r\n\r\n  function getOrderCode() {\r\n    axios\r\n      .get(`${base_url}/sales-order/list`)\r\n      .then((res) => {\r\n        setOrderCode(res.data.response_data);\r\n      })\r\n      .catch((err) => {\r\n        console.warn(err);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * It gets the data from the server and then set the data to the state\r\n   * @param [page=1] - The page number of the data that you want to retrieve.\r\n   * @param [per_page=10] - The number of items per page.\r\n   * @param [retur_code] - The code of the return.\r\n   * @param [username_so] - The username of the sales order\r\n   * @param [start_date] - The start date of the date range.\r\n   * @param [end_date] - The end date of the date range.\r\n   */\r\n  function getData(\r\n    page = 1,\r\n    per_page = 10,\r\n    retur_code = \"\",\r\n    username_so = \"\",\r\n    start_date = \"\",\r\n    end_date = \"\"\r\n  ) {\r\n    const payload = {\r\n      page: page,\r\n      per_page: per_page,\r\n      retur_code: retur_code,\r\n      username_so: username_so,\r\n      start_date: start_date,\r\n      end_date: end_date,\r\n      werehouse_id: parseInt(localStorage.warehouse),\r\n    };\r\n\r\n    axios\r\n      .post(`${base_url}/retur-so/history`, {\r\n        body: JSON.stringify(payload),\r\n      })\r\n      .then((res) => {\r\n        setListData(res.data.response_data);\r\n\r\n        // membuat list tombol navigasi ie.1,2,3,4 etc\r\n        const navigationList = [];\r\n        for (let i = 0; i < res.data.total_item / amountShown; i++) {\r\n          navigationList.push(i + 1);\r\n        }\r\n        setNav(navigationList);\r\n      })\r\n      .catch((err) => {\r\n        console.warn(err);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Listen to the store and when the store emits a change, run the function\r\n   */\r\n  function listenEvent() {\r\n    store.subscribe(() => {\r\n      const state = store.getState();\r\n      if (state.type === \"close_modal_preview\") {\r\n        setPreview(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  function searchDataByFilter() {\r\n    getData(activeNav, amountShown, returCode, usernameSo, startDate, endDate);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Sales Order\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        {/* preview */}\r\n        <DetailData visible={preview} data={detailData} />\r\n        {/*  */}\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <h3>Riwayat Retur Sales Order</h3>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                {/* filter */}\r\n                <div className=\"flex-container\">\r\n                  <FormGroup>\r\n                    <label className=\"form-control-label\" htmlFor=\"koderetur\">\r\n                      Kode Retur\r\n                    </label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      id=\"koderetur\"\r\n                      onChange={(evt) => setReturCode(evt.target.value)}\r\n                    >\r\n                      <option value=\"\">-</option>\r\n                      {orderCode.map((items, i) => (\r\n                        <option value={items.order_code} key={i}>\r\n                          {items.order_code}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <label\r\n                      className=\"form-control-label\"\r\n                      htmlFor=\"tanggalmulai\"\r\n                    >\r\n                      Tanggal Mulai\r\n                    </label>\r\n                    <Input type=\"date\" id=\"tanggalmulai\" />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <label\r\n                      className=\"form-control-label\"\r\n                      htmlFor=\"tanggalselesai\"\r\n                    >\r\n                      Tanggal Selesai\r\n                    </label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      id=\"tanggalselesai\"\r\n                      onChange={(evt) => console.log(evt.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                  <Button\r\n                    onClick={() => searchDataByFilter()}\r\n                    type=\"button\"\r\n                    color=\"primary\"\r\n                  >\r\n                    Telusuri\r\n                  </Button>\r\n                </div>\r\n                {/*  */}\r\n                <div className=\"table-container\">\r\n                  <Table className=\"table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>#</th>\r\n                        <th>Username SO</th>\r\n                        <th>Retur Code</th>\r\n                        <th>Item or Money</th>\r\n                        <th>Total QTY</th>\r\n                        <th>Total Price</th>\r\n                        <th>Status Barang</th>\r\n                        <th>Aksi</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {listData.map((items, i) => (\r\n                        <tr key={i}>\r\n                          <td>{i + 1}</td>\r\n                          <td>{items.username_so}</td>\r\n                          <td>{items.retur_code}</td>\r\n                          <td>{items.item_or_money}</td>\r\n                          <td>{items.total_qty}</td>\r\n                          <td>{items.total_price}</td>\r\n                          <td>{items.status_barang}</td>\r\n                          <td>\r\n                            <Button\r\n                              onClick={() => {\r\n                                setPreview(true);\r\n                                setDetailData(items);\r\n                              }}\r\n                              size=\"sm\"\r\n                              color=\"primary\"\r\n                              type=\"button\"\r\n                            >\r\n                              Detail\r\n                            </Button>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </Table>\r\n\r\n                  <div className=\"filter-page\">\r\n                    <div className=\"section-1\">\r\n                      <span>Show</span>\r\n                      <select\r\n                        className=\"filter-select\"\r\n                        onChange={(evt) => {\r\n                          setAmountShown(parseInt(evt.target.value));\r\n                          getData(\r\n                            activeNav,\r\n                            parseInt(evt.target.value),\r\n                            returCode,\r\n                            usernameSo,\r\n                            startDate,\r\n                            endDate\r\n                          );\r\n                        }}\r\n                      >\r\n                        <option value=\"10\">10</option>\r\n                        <option value=\"20\">20</option>\r\n                        <option value=\"25\">25</option>\r\n                        <option value=\"50\">50</option>\r\n                      </select>\r\n                      <span>\r\n                        {\" \"}\r\n                        entries. Showing rows 1 to {listData.length} of{\" \"}\r\n                        {amountShown}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"section-2\">\r\n                      <nav aria-label=\"...\">\r\n                        <Pagination>\r\n                          <PaginationItem className=\"disabled\">\r\n                            <PaginationLink\r\n                              href=\"#pablo\"\r\n                              onClick={(e) => e.preventDefault()}\r\n                              tabIndex=\"-1\"\r\n                            >\r\n                              <i className=\"fa fa-angle-left\" />\r\n                              <span className=\"sr-only\">Previous</span>\r\n                            </PaginationLink>\r\n                          </PaginationItem>\r\n\r\n                          {nav.map((items, i) => (\r\n                            <PaginationItem\r\n                              className={activeNav === items ? \"active\" : \"\"}\r\n                              key={i}\r\n                            >\r\n                              <PaginationLink\r\n                                href=\"#pablo\"\r\n                                onClick={(e) => {\r\n                                  e.preventDefault();\r\n                                  setActiveNav(items);\r\n                                  getData(\r\n                                    items,\r\n                                    amountShown,\r\n                                    returCode,\r\n                                    usernameSo,\r\n                                    startDate,\r\n                                    endDate\r\n                                  );\r\n                                }}\r\n                              >\r\n                                {items}\r\n                              </PaginationLink>\r\n                            </PaginationItem>\r\n                          ))}\r\n                          <PaginationItem>\r\n                            <PaginationLink\r\n                              href=\"#pablo\"\r\n                              onClick={(e) => e.preventDefault()}\r\n                            >\r\n                              <i className=\"fa fa-angle-right\" />\r\n                              <span className=\"sr-only\">Next</span>\r\n                            </PaginationLink>\r\n                          </PaginationItem>\r\n                        </Pagination>\r\n                      </nav>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\n// import store from \"./snippets/redux\";\r\nimport { Card, Button, Row, CardBody, CardHeader } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n// import Preview from \"./snippets/Preview\";\r\n\r\nconst LogPrice = (props) => {\r\n  const token = localStorage.token;\r\n  const itemCode = props.itemCode;\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n  const redirectPrefix = `/admin/price/edit/`;\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [hide, setHide] = useState(true);\r\n  const [selectAcquirerId, setSelectedAcquirerId] = useState(0);\r\n  const [selectAcquirerName, setSelectAcquirerName] = useState(\"\");\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n\r\n  const [allPrice, setAllPrice] = useState([]);\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n  const [preview, setPreview] = useState(false);\r\n  const [detailData, setDetailData] = useState({});\r\n\r\n  useEffect(() => {\r\n    // listenEvent();\r\n  }, []);\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort);\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const updateDataTable = (page, perPage, sort) => {\r\n    getLogPrice(page, perPage, sort);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n  };\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`;\r\n      updateDataTable(page, perPage, sort);\r\n    }\r\n  };\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLogPrice(page, perPage, currentSort);\r\n  }, [props.itemCode]);\r\n\r\n  const getLogPrice = (page, perPage, currentSort) => {\r\n    let filter = {\r\n      page: page,\r\n      per_page: perPage,\r\n      item_id: parseInt(itemCode),\r\n    };\r\n    const data = filter;\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/log-pd`, data, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        console.log(\"cek\", data);\r\n        setAllPrice(data.data.response);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  // const listenEvent = () => {\r\n  //   store.subscribe(() => {\r\n  //     const state = store.getState();\r\n  //     if (state.type === \"close_modal_preview\") {\r\n  //       setPreview(false);\r\n  //     }\r\n  //   });\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      {alert}\r\n      <Row>\r\n        {/* <Preview visible={preview} data={detailData} /> */}\r\n        <div className=\"col\">\r\n          <Card>\r\n            <CardHeader>\r\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                <h3>List Log Price</h3>\r\n              </div>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <ToolkitProvider\r\n                rowNumber={rowIndex}\r\n                data={allPrice}\r\n                keyField=\"id\"\r\n                columns={[\r\n                  {\r\n                    dataField: \"no\",\r\n                    text: \"#\",\r\n                    sort: true,\r\n                    page: 1,\r\n                    formatter: (cell, row, index) => {\r\n                      let currentRow = ++index;\r\n                      return currentRow + rowIndex;\r\n                    },\r\n                  },\r\n                  {\r\n                    dataField: \"username\",\r\n                    text: \"Username\",\r\n                    sort: true,\r\n                  },\r\n                  {\r\n                    dataField: \"person\",\r\n                    text: \"Person\",\r\n                    sort: true,\r\n                  },\r\n                  {\r\n                    dataField: \"satuan\",\r\n                    text: \"Satuan\",\r\n                    sort: true,\r\n                  },\r\n                  {\r\n                    dataField: \"harga_beli\",\r\n                    text: \"Harga Beli\",\r\n                    sort: true,\r\n                  },\r\n                  {\r\n                    dataField: \"harga_beli_total\",\r\n                    text: \"Total Harga Beli\",\r\n                    sort: true,\r\n                  },\r\n                  {\r\n                    dataField: \"harga_jual_minimal\",\r\n                    text: \"Minimal Harga Jual\",\r\n                    sort: true,\r\n                  },\r\n                  {\r\n                    dataField: \"\",\r\n                    text: \"Aksi\",\r\n                    formatter: (cell, row, index) => {\r\n                      return (\r\n                        <>\r\n                          <Button\r\n                            onClick={() => {\r\n                              setDetailData(row);\r\n                              setPreview(true);\r\n                            }}\r\n                            type=\"button\"\r\n                            color=\"primary\"\r\n                            size=\"sm\"\r\n                          >\r\n                            detail\r\n                          </Button>\r\n                          <Button color=\"warning\" size=\"sm\">\r\n                            <Link\r\n                              to={redirectPrefix + row.id}\r\n                              id={\"tooltip_\" + row.id}\r\n                            >\r\n                              <span style={{ color: \"white\" }}>edit</span>\r\n                            </Link>\r\n                          </Button>\r\n                        </>\r\n                      );\r\n                    },\r\n                  },\r\n                ]}\r\n              >\r\n                {(props) => (\r\n                  <div className=\"py-4 table-responsive\">\r\n                    <BootstrapTable\r\n                      remote\r\n                      {...props.baseProps}\r\n                      bootstrap4={true}\r\n                      bordered={false}\r\n                      hover={true}\r\n                      pagination={paginationFactory({ ...paginationOption })}\r\n                      onTableChange={handleTableChange}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </ToolkitProvider>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogPrice;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  CardBody,\r\n  CardHeader,\r\n  Container,\r\n  UncontrolledTooltip,\r\n  ButtonGroup,\r\n  Collapse,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport LogPrice from \"views/pages/Price/LogPrice.js\";\r\n\r\nconst Price = () => {\r\n  const token = localStorage.token;\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n  const redirectPrefix = `/admin/price/edit/`;\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [hide, setHide] = useState(true);\r\n  const [selectAcquirerId, setSelectedAcquirerId] = useState(0);\r\n  const [selectAcquirerName, setSelectAcquirerName] = useState(\"\");\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n\r\n  const [allPrice, setAllPrice] = useState([]);\r\n  const [selectItemCode, setSelectItemCode] = useState(0);\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort);\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const updateDataTable = (page, perPage, sort) => {\r\n    getPrice(page, perPage, sort);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n  };\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`;\r\n      updateDataTable(page, perPage, sort);\r\n    }\r\n  };\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPrice(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  const getPrice = (page, perPage, currentSort) => {\r\n    let filter = { page: page, per_page: perPage };\r\n    const data = filter;\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/price-detail`, data, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setAllPrice(data.data.response_data);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const rowEvents = {\r\n    onDoubleClick: (e, row, rowIndex) => {\r\n      setHide(false);\r\n      setSelectItemCode(row.item_id);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {alert}\r\n      <SimpleHeader name=\"Price\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <h3>List Price</h3>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allPrice}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: \"kode_item\",\r\n                      text: \"Kode Item\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"nama_item\",\r\n                      text: \"Nama Item\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"satuan\",\r\n                      text: \"Satuan\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"\",\r\n                      text: \"\",\r\n                      formatter: (cell, row, index) => {\r\n                        return (\r\n                          <ButtonGroup>\r\n                            <Button>\r\n                              <Link\r\n                                to={redirectPrefix + row.id}\r\n                                id={\"tooltip_\" + row.id}\r\n                              >\r\n                                <i className=\"fas fa-user-edit\" />\r\n                              </Link>\r\n                            </Button>\r\n                            <UncontrolledTooltip\r\n                              delay={0}\r\n                              target={\"tooltip_\" + row.id}\r\n                            >\r\n                              Edit\r\n                            </UncontrolledTooltip>\r\n                          </ButtonGroup>\r\n                        );\r\n                      },\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        rowEvents={rowEvents}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n            <Card>\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({ active: activeTab === \"1\" })}\r\n                    onClick={() => {\r\n                      toggle(\"1\");\r\n                    }}\r\n                  >\r\n                    Log Price\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n              <TabContent activeTab={activeTab}>\r\n                <TabPane tabId=\"1\">\r\n                  <Row>\r\n                    <Col md=\"12\">\r\n                      {hide ? <></> : <LogPrice itemCode={selectItemCode} />}\r\n                    </Col>\r\n                  </Row>\r\n                </TabPane>\r\n              </TabContent>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Price;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  CardBody,\r\n  CardHeader,\r\n  Container,\r\n  UncontrolledTooltip,\r\n  ButtonGroup,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst StockOpname = () => {\r\n  const token = localStorage.token;\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n  const redirectPrefix = `/admin/stock-opname/edit/`;\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [hide, setHide] = useState(true);\r\n  const [selectAcquirerId, setSelectedAcquirerId] = useState(0);\r\n  const [selectAcquirerName, setSelectAcquirerName] = useState(\"\");\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n\r\n  const [allStockOpname, setAllStockOpname] = useState([]);\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort);\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const updateDataTable = (page, perPage, sort) => {\r\n    getStockOpname(page, perPage, sort);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n  };\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`;\r\n      updateDataTable(page, perPage, sort);\r\n    }\r\n  };\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getStockOpname(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  const getStockOpname = (page, perPage, currentSort) => {\r\n    let filter = { page: page, per_page: perPage };\r\n    const data = filter;\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/opname/page`, data, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setAllStockOpname(data.data.response);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const rowEvents = {\r\n    onDoubleClick: (e, row, rowIndex) => {\r\n      setHide(false);\r\n      setSelectedAcquirerId(row.id);\r\n      setSelectAcquirerName(row.acquirer_name);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {alert}\r\n      <SimpleHeader name=\"Stock Opname\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <h3>List Stock Opname</h3>\r\n                  <div style={{ textAlign: \"right\" }}>\r\n                    <Link\r\n                      className=\"btn btn-info\"\r\n                      to=\"/admin/stock-opname/create\"\r\n                    >\r\n                      Add\r\n                    </Link>\r\n                    <Link\r\n                      className=\"btn btn-default\"\r\n                      to=\"/admin/stock-opname/adjust\"\r\n                    >\r\n                      Adjust\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allStockOpname}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: \"item_code\",\r\n                      text: \"Kode Item\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"item_name\",\r\n                      text: \"Nama Item\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"stok_fisik\",\r\n                      text: \"Stock Fisik\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"\",\r\n                      text: \"\",\r\n                      formatter: (cell, row, index) => {\r\n                        return (\r\n                          <ButtonGroup>\r\n                            <Button>\r\n                              <Link\r\n                                id={\"tooltip_\" + row.id}\r\n                                to={{\r\n                                  pathname: `/admin/stock-opname/edit/${row.id}`,\r\n                                  state: {\r\n                                    itemCode: row.item_code,\r\n                                  },\r\n                                }}\r\n                              >\r\n                                <i className=\"fas fa-user-edit\" />\r\n                              </Link>\r\n                            </Button>\r\n                            <UncontrolledTooltip\r\n                              delay={0}\r\n                              target={\"tooltip_\" + row.id}\r\n                            >\r\n                              Edit\r\n                            </UncontrolledTooltip>\r\n                          </ButtonGroup>\r\n                        );\r\n                      },\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        rowEvents={rowEvents}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockOpname;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  CardBody,\r\n  CardHeader,\r\n  Container,\r\n  UncontrolledTooltip,\r\n  ButtonGroup,\r\n  Collapse,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\n\r\nconst Promo = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n  const redirectPrefix = `/admin/promo/edit/`;\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n\r\n  const [allPromo, setAllPromo] = useState([]);\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(\r\n        page,\r\n        perPage,\r\n        currentSort,\r\n        nameDepartment,\r\n        codeDepartment\r\n      );\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort);\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const updateDataTable = (page, perPage, sort) => {\r\n    getPromo(page, perPage, sort);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n  };\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`;\r\n      updateDataTable(page, perPage, sort);\r\n    }\r\n  };\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPromo(page, perPage, currentSort, \"\", \"\");\r\n  }, []);\r\n\r\n  const getPromo = async (page, perPage, currentSort) => {\r\n    let filter = {\r\n      page: page,\r\n      per_page: perPage,\r\n    };\r\n    const data = filter;\r\n    const headers = {\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_BASE_URL}/promo`,\r\n      data,\r\n      { headers }\r\n    );\r\n    setAllPromo(res.data.response);\r\n    setPage(res.data.current_page + 1);\r\n    setPerpage(res.data.per_page);\r\n    setTotalItem(res.data.total_item);\r\n  };\r\n\r\n  const delatePromo = (id) => {\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/promo/delete/${id}`, null, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then(function (response) {\r\n        setSuccessAlert();\r\n        getPromo();\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const setSuccessAlert = () => {\r\n    setAlert(\r\n      <SweetAlert\r\n        success\r\n        showConfirm\r\n        confirmBtnText=\"Ok\"\r\n        title=\"Promo deleted\"\r\n        onCancel={hideAlert}\r\n        onConfirm={hideAlert}\r\n      />\r\n    );\r\n  };\r\n\r\n  const setQuestionAlert = (id) => {\r\n    setAlert(\r\n      <SweetAlert\r\n        warning\r\n        showCancel\r\n        confirmBtnText=\"Yes\"\r\n        confirmBtnBsStyle=\"danger\"\r\n        title=\"Are you sure?\"\r\n        onConfirm={() => delatePromo(id)}\r\n        onCancel={hideAlert}\r\n        focusCancelBtn\r\n      />\r\n    );\r\n  };\r\n\r\n  const hideAlert = () => {\r\n    setAlert(null);\r\n  };\r\n\r\n  const rowEvents = {\r\n    onDoubleClick: (e, row, rowIndex) => {\r\n      setHide(false);\r\n      setSelectedAcquirerId(row.acquirer_id);\r\n      setSelectAcquirerName(row.acquirer_name);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {alert}\r\n      <SimpleHeader name=\"Promo\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <h3>List Promo</h3>\r\n                  <div style={{ textAlign: \"right\" }}>\r\n                    <Link className=\"btn btn-info\" to=\"/admin/promo/create\">\r\n                      Add\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allPromo}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: \"kode_promo\",\r\n                      text: \"Kode Promo\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"nama_promo\",\r\n                      text: \"Nama Promo\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"persentase_promo\",\r\n                      text: \"Persentase Promo\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"nominal_promo\",\r\n                      text: \"Nominal Promo\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"\",\r\n                      text: \"\",\r\n                      formatter: (cell, row, index) => {\r\n                        return (\r\n                          <ButtonGroup>\r\n                            <Button>\r\n                              <Link\r\n                                to={redirectPrefix + row.id}\r\n                                id={\"tooltip_\" + row.id}\r\n                              >\r\n                                <i className=\"fas fa-user-edit\" />\r\n                              </Link>\r\n                            </Button>\r\n                            <UncontrolledTooltip\r\n                              delay={0}\r\n                              target={\"tooltip_\" + row.id}\r\n                            >\r\n                              Edit\r\n                            </UncontrolledTooltip>\r\n                            <Button\r\n                              id=\"btn-acquirer\"\r\n                              onClick={() => setQuestionAlert(row.id)}\r\n                            >\r\n                              <i className=\"fas fa-trash\" />\r\n                            </Button>\r\n                            <UncontrolledTooltip\r\n                              delay={0}\r\n                              placement=\"top\"\r\n                              target=\"btn-acquirer\"\r\n                            >\r\n                              Delete Promo\r\n                            </UncontrolledTooltip>\r\n                          </ButtonGroup>\r\n                        );\r\n                      },\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        rowEvents={rowEvents}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Promo;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {Card,\r\n  Row,\r\n  CardBody,\r\n  CardHeader,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst StockSemua = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n\r\n  const [nameStock, setNameStock] = useState(\"\");\r\n  const [codeStock, setCodeStock] = useState(\"\");\r\n\r\n  const [allItemStock, setAllItemStock] = useState([]);\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(\r\n        page,\r\n        perPage,\r\n        currentSort,\r\n        nameStock,\r\n        codeStock\r\n      );\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort);\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const updateDataTable = (page, perPage, sort,nameStock, codeStock) => {\r\n    geItemStock(page, perPage, sort,nameStock, codeStock);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setNameStock(nameStock);\r\n    setCodeStock(codeStock);\r\n  };\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`;\r\n      updateDataTable(page, perPage, sort,nameStock, codeStock);\r\n    }\r\n  };\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  useEffect(() => {\r\n    geItemStock(page, perPage, currentSort, \"\", \"\");\r\n  }, []);\r\n\r\n  const geItemStock = async (page, perPage, currentSort) => {\r\n    let filter = {\r\n      page: page,\r\n      per_page: perPage,\r\n    };\r\n    const data = filter;\r\n    const headers = {\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_BASE_URL}/item-stock`,\r\n      data,\r\n      { headers }\r\n    );\r\n    setAllItemStock(res.data.response);\r\n    setPage(res.data.current_page + 1);\r\n    setPerpage(res.data.per_page);\r\n    setTotalItem(res.data.total_item);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <h3>List Item Stock</h3>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allItemStock}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: \"item_code\",\r\n                      text: \"Kode Item\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"item_name\",\r\n                      text: \"Nama Item\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"uom_code\",\r\n                      text: \"Satuan\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"qty_awal\",\r\n                      text: \"Quantitas Awal\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"qty_keluar\",\r\n                      text: \"Quantitas Keluar\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"qty_order\",\r\n                      text: \"Quantitas Order\",\r\n                      sort: true,\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockSemua;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  Row,\r\n  CardBody,\r\n  CardHeader,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst StockPribadi = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n\r\n  const [nameOwnStock, setNameOwnStock] = useState(\"\");\r\n  const [codeOwnStock, setCodeOwnStock] = useState(\"\");\r\n\r\n  const [allItemStock, setAllItemStock] = useState([]);\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(\r\n        page,\r\n        perPage,\r\n        currentSort,\r\n        nameOwnStock,\r\n        codeOwnStock\r\n      );\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort);\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const updateDataTable = (page, perPage, sort,nameOwnStock, codeOwnStock) => {\r\n    getItemOwnStock(page, perPage, sort,nameOwnStock, codeOwnStock);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setNameOwnStock(nameOwnStock);\r\n    setCodeOwnStock(codeOwnStock);\r\n  };\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`;\r\n      updateDataTable(page, perPage, sort,nameOwnStock, codeOwnStock);\r\n    }\r\n  };\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getItemOwnStock(page, perPage, currentSort, \"\", \"\");\r\n  }, []);\r\n\r\n  const getItemOwnStock = async (page, perPage, currentSort) => {\r\n    let filter = {\r\n      page: page,\r\n      per_page: perPage,\r\n    };\r\n    const data = filter;\r\n    const headers = {\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_BASE_URL}/item-stock`,\r\n      data,\r\n      { headers }\r\n    );\r\n    setAllItemStock(res.data.response);\r\n    setPage(res.data.current_page + 1);\r\n    setPerpage(res.data.per_page);\r\n    setTotalItem(res.data.total_item);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <h3>List Own Item Stock</h3>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allItemStock}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: \"item_code\",\r\n                      text: \"Kode Item\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"item_name\",\r\n                      text: \"Nama Item\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"uom_code\",\r\n                      text: \"Satuan\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"qty_awal\",\r\n                      text: \"Quantitas Awal\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"qty_keluar\",\r\n                      text: \"Quantitas Keluar\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"qty_order\",\r\n                      text: \"Quantitas Order\",\r\n                      sort: true,\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockPribadi;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  Row,\r\n  CardBody,\r\n  CardHeader,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst StockPribadi = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n\r\n  const [nameLowStock, setNameLowStock] = useState(\"\");\r\n  const [codeLowStock, setCodeLowStock] = useState(\"\");\r\n\r\n  const [allItemStock, setAllItemStock] = useState([]);\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(\r\n        page,\r\n        perPage,\r\n        currentSort,\r\n        nameLowStock,\r\n        codeLowStock\r\n      );\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort);\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const updateDataTable = (page, perPage, sort,nameLowStock, codeLowStock) => {\r\n    getItemLowStock(page, perPage, sort,nameLowStock, codeLowStock);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setNameLowStock(nameLowStock);\r\n    setCodeLowStock(codeLowStock);\r\n  };\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`;\r\n      updateDataTable(page, perPage, sort, nameLowStock, codeLowStock);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getItemLowStock(page, perPage, currentSort, \"\", \"\");\r\n  }, []);\r\n\r\n  const getItemLowStock = async (page, perPage, currentSort) => {\r\n    let filter = {\r\n      page: page,\r\n      per_page: perPage,\r\n    };\r\n    const data = filter;\r\n    const headers = {\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_BASE_URL}/lowstok/page`,\r\n      data,\r\n      { headers }\r\n    );\r\n    setAllItemStock(res.data.response);\r\n    setPage(res.data.current_page + 1);\r\n    setPerpage(res.data.per_page);\r\n    setTotalItem(res.data.total_item);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <h3>List Own Item Stock</h3>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allItemStock}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: \"item_code\",\r\n                      text: \"Kode Item\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"item_name\",\r\n                      text: \"Nama Item\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"sisa_stok\",\r\n                      text: \"Sisa Stock\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"date\",\r\n                      text: \"Tanggal\",\r\n                      sort: true,\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockPribadi;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { \r\n    Card, \r\n    Button, \r\n    Row, \r\n    Col, \r\n    CardBody, \r\n    CardHeader, \r\n    Form, \r\n    FormGroup, \r\n    Label, \r\n    Input, \r\n    Collapse \r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst StokRak = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n\r\n  const [allRakStock, setAllRakStock] = useState([]);\r\n\r\n  const [koderak, setKodeRak] = useState(\"\");\r\n  const [itemname, setItemName] = useState(\"\")\r\n  const [itemcode, setItemCode] = useState(\"\");\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, koderak, itemname, itemcode);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort, koderak, itemname, itemcode) => {\r\n    getRakStok(page, perPage, sort, koderak, itemname, itemcode);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setKodeRak(koderak);\r\n    setItemName(itemname);\r\n    setItemCode(itemcode);\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort,  koderak, itemname, itemcode)\r\n    }\r\n  }\r\n\r\n  const toggle = tab => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getRakStok(page, perPage, currentSort, \"\", \"\", \"\");\r\n  }, []);\r\n\r\n  const getRakStok = async (page, perPage, currentSort, code_rak = null, item_name = null, item_code = null) => {\r\n    let filter = { page: page, per_page: perPage, id_warehouse: parseInt(warehouse) }\r\n    if (code_rak !== null) {\r\n      filter = Object.assign(filter, { code_rak: code_rak })\r\n    }\r\n    if (item_name !== null) {\r\n      filter = Object.assign(filter, { item_name: item_name })\r\n    }\r\n    if (item_code !== null) {\r\n      filter = Object.assign(filter, { item_code: item_code })\r\n    }\r\n    const data = filter;\r\n    const headers = {\r\n      'Authorization': `Bearer ${token}`,\r\n    };\r\n    const res = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/stok-rak`, data, { headers })\r\n      setAllRakStock(res.data.response);\r\n      setPage(res.data.current_page + 1);\r\n      setPerpage(res.data.per_page);\r\n      setTotalItem(res.data.total_item);\r\n    }\r\n  \r\n\r\n  const reset = () => {\r\n    setKodeRak(\"\");\r\n    setItemName(\"\");\r\n    setItemCode(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\", \"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>List Stock Rak Items</h3>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <h3 onClick={toggleOpen} >Filter &nbsp;\r\n                  {\r\n                    isOpen === true ? <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i> : <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  }\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                        <Row md=\"12\">\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Kode Rak</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Kode Rak\"\r\n                                value={koderak}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, e.target.value, itemname,itemcode)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Nama Item</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Nama Item\"\r\n                                value={itemname}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, koderak, e.target.value, itemcode)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Kode Item</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Kode Item\"\r\n                                value={itemcode}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, koderak, itemname, e.target.value)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Button type=\"button\" onClick={reset} color=\"secondary\">Reset</Button>\r\n                          </Col>\r\n                        </Row>\r\n                  </Form>\r\n                </Collapse>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allRakStock}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: \"code_rak\",\r\n                      text: \"Kode Rak\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"item_code\",\r\n                      text: \"Kode Item\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"item_name\",\r\n                      text: \"Nama Item\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"satuan\",\r\n                      text: \"Satuan\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"qty_awal\",\r\n                      text: \"Stok Awal\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"qty_masuk\",\r\n                      text: \"Stok Masuk\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"qty_keluar\",\r\n                      text: \"Stok Keluar\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"sisa_stok\",\r\n                      text: \"Sisa Stock\",\r\n                      sort: true,\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StokRak;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  CardBody,\r\n  CardHeader,\r\n  Container,\r\n  UncontrolledTooltip,\r\n  ButtonGroup,\r\n  Collapse,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\n\r\n// import SalesTracking from \"views/pages/salesCanvasing/salesTrack/Index.js\";\r\n\r\nconst SalesCanvasing = () => {\r\n  const token = localStorage.token;\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [hide, setHide] = useState(true);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n  const [allCanvasing, setAllCanvasing] = useState([]);\r\n  const [selectedSalesCanvasing, setSelectedSalesCanvasing] = useState(0);\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort);\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const updateDataTable = (page, perPage, sort) => {\r\n    getCanvasing(page, perPage, sort);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n  };\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`;\r\n      updateDataTable(page, perPage, sort);\r\n    }\r\n  };\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCanvasing(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  const getCanvasing = (page, perPage, currentSort) => {\r\n    let filter = { page: page, per_page: perPage };\r\n    const data = filter;\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/canvasing/page`, data, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setAllCanvasing(data.data.response);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const rowEvents = {\r\n    onDoubleClick: (e, row, rowIndex) => {\r\n      setHide(false);\r\n      setSelectedSalesCanvasing(row.canvasing_code);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {alert}\r\n      <SimpleHeader name=\"Sales Canvasing\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <h3>List Sales Canvasing</h3>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allCanvasing}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: \"canvasing_code\",\r\n                      text: \"Kode Canvasing\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"pic\",\r\n                      text: \"PIC\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"nama_proyek\",\r\n                      text: \"Nama Proyek\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"pic_phone\",\r\n                      text: \"PIC Phone\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"keterangan_canvasing\",\r\n                      text: \"Keterangan\",\r\n                      sort: true,\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        rowEvents={rowEvents}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n            {/* <Card>\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({ active: activeTab === \"1\" })}\r\n                    onClick={() => {\r\n                      toggle(\"1\");\r\n                    }}\r\n                  >\r\n                    Sales Tracking\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n              {hide ? (\r\n                <></>\r\n              ) : (\r\n                <>\r\n                  <TabContent activeTab={activeTab}>\r\n                    <TabPane tabId=\"1\">\r\n                      <Row>\r\n                        <Col md=\"12\">\r\n                          <SalesTracking\r\n                            codeCanvasing={selectedSalesCanvasing}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </TabPane>\r\n                  </TabContent>\r\n                </>\r\n              )}\r\n            </Card> */}\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SalesCanvasing;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  CardBody,\r\n  CardHeader,\r\n  Container,\r\n  UncontrolledTooltip,\r\n  ButtonGroup,\r\n  Collapse,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\n\r\nconst HistorySalesCanvasing = () => {\r\n  const token = localStorage.token;\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n  const redirectPrefix = `/admin/price/edit/`;\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [hide, setHide] = useState(true);\r\n  const [selectAcquirerId, setSelectedAcquirerId] = useState(0);\r\n  const [selectAcquirerName, setSelectAcquirerName] = useState(\"\");\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n  const [allHistoryCanvasing, setAllHistoryCanvasing] = useState([]);\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort);\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const updateDataTable = (page, perPage, sort) => {\r\n    getHistoryCanvasing(page, perPage, sort);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n  };\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`;\r\n      updateDataTable(page, perPage, sort);\r\n    }\r\n  };\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getHistoryCanvasing(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  const getHistoryCanvasing = (page, perPage, currentSort) => {\r\n    let filter = { page: page, per_page: perPage };\r\n    const data = filter;\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/canvasing/history`, data, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setAllHistoryCanvasing(data.data.response);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const rowEvents = {\r\n    onDoubleClick: (e, row, rowIndex) => {\r\n      setHide(false);\r\n      setSelectedAcquirerId(row.id);\r\n      setSelectAcquirerName(row.acquirer_name);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {alert}\r\n      <SimpleHeader name=\"History Sales Canvasing\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <h3>List History Sales Canvasing</h3>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allHistoryCanvasing}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: \"canvasing_code\",\r\n                      text: \"Kode Canvasing\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"pic\",\r\n                      text: \"PIC\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"nama_proyek\",\r\n                      text: \"Nama Proyek\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"pic_phone\",\r\n                      text: \"PIC Phone\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"keterangan_canvasing\",\r\n                      text: \"Keterangan\",\r\n                      sort: true,\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        rowEvents={rowEvents}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistorySalesCanvasing;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  CardBody,\r\n  CardHeader,\r\n  Container,\r\n  UncontrolledTooltip,\r\n  ButtonGroup,\r\n  Collapse,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\n\r\nconst salesTrackingDetail = (props) => {\r\n  const token = localStorage.token;\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [hide, setHide] = useState(true);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n\r\n  const [allSelesTrackingDetail, setAllSelesTrackingDetail] = useState([]);\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort);\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const updateDataTable = (page, perPage, sort) => {\r\n    getSalesTrackingDetail(page, perPage, sort);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n  };\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`;\r\n      updateDataTable(page, perPage, sort);\r\n    }\r\n  };\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSalesTrackingDetail(page, perPage, currentSort);\r\n  }, [props.code]);\r\n\r\n  const getSalesTrackingDetail = (page, perPage, currentSort) => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const data = { page: page, per_page: perPage };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/sales-track/get?code=${props.code}`,\r\n        {\r\n          headers,\r\n        }\r\n      )\r\n      .then((data) => {\r\n        setAllSelesTrackingDetail(data.data.response.track_log);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const rowEvents = {\r\n    onDoubleClick: (e, row, rowIndex) => {\r\n      setHide(false);\r\n      setSelectedAcquirerId(row.id);\r\n      setSelectAcquirerName(row.acquirer_name);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {alert}\r\n      <Card>\r\n        <CardHeader>\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <h3>List Sales Tracking Detail</h3>\r\n          </div>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <ToolkitProvider\r\n            rowNumber={rowIndex}\r\n            data={allSelesTrackingDetail}\r\n            keyField=\"id\"\r\n            columns={[\r\n              {\r\n                dataField: \"no\",\r\n                text: \"#\",\r\n                sort: true,\r\n                page: 1,\r\n                formatter: (cell, row, index) => {\r\n                  let currentRow = ++index;\r\n                  return currentRow + rowIndex;\r\n                },\r\n              },\r\n              {\r\n                dataField: \"date\",\r\n                text: \"Tanggal\",\r\n                sort: true,\r\n              },\r\n              {\r\n                dataField: \"address\",\r\n                text: \"Alamat\",\r\n                sort: true,\r\n              },\r\n            ]}\r\n          >\r\n            {(props) => (\r\n              <div className=\"py-4 table-responsive\">\r\n                <BootstrapTable\r\n                  remote\r\n                  {...props.baseProps}\r\n                  bootstrap4={true}\r\n                  bordered={false}\r\n                  hover={true}\r\n                  rowEvents={rowEvents}\r\n                  pagination={paginationFactory({ ...paginationOption })}\r\n                  onTableChange={handleTableChange}\r\n                />\r\n              </div>\r\n            )}\r\n          </ToolkitProvider>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default salesTrackingDetail;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  CardBody,\r\n  CardHeader,\r\n  Container,\r\n  UncontrolledTooltip,\r\n  ButtonGroup,\r\n  Collapse,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\n\r\nimport Detail from \"views/pages/salesCanvasing/salesTrack/Detail.js\";\r\n\r\nconst salesTracking = () => {\r\n  const token = localStorage.token;\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n  const redirectPrefix = `/admin/price/edit/`;\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [hide, setHide] = useState(true);\r\n  const [selectAcquirerId, setSelectedAcquirerId] = useState(0);\r\n  const [selectAcquirerName, setSelectAcquirerName] = useState(\"\");\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n  const [allHistoryCanvasing, setAllHistoryCanvasing] = useState([]);\r\n  const [salesTracking, setSalesTracking] = useState([]);\r\n  const [selectedSalesTracking, setSelectedTracking] = useState(0);\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort);\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const updateDataTable = (page, perPage, sort) => {\r\n    getSalesTracking(page, perPage, sort);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n  };\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`;\r\n      updateDataTable(page, perPage, sort);\r\n    }\r\n  };\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSalesTracking(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  const getSalesTracking = (page, perPage, currentSort) => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const data = { page: page, per_page: perPage };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/sales-track/page`, data, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setSalesTracking(data.data.response);\r\n        // setPage(data.data.current_page + 1);\r\n        // setPerpage(data.data.per_page);\r\n        // setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const rowEvents = {\r\n    onDoubleClick: (e, row, rowIndex) => {\r\n      setHide(false);\r\n      setSelectedTracking(row.tracking_code);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {alert}\r\n      <SimpleHeader name=\"Sales Tracking\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <h3>List Sales Tracking</h3>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={salesTracking}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: \"tracking_code\",\r\n                      text: \"Kode Tracking\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"username\",\r\n                      text: \"Username\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"warehouse_name\",\r\n                      text: \"Gudang\",\r\n                      sort: true,\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        rowEvents={rowEvents}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n            <Card>\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({ active: activeTab === \"1\" })}\r\n                    onClick={() => {\r\n                      toggle(\"1\");\r\n                    }}\r\n                  >\r\n                    Sales Tracking\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n              {hide ? (\r\n                <></>\r\n              ) : (\r\n                <>\r\n                  <TabContent activeTab={activeTab}>\r\n                    <TabPane tabId=\"1\">\r\n                      <Row>\r\n                        <Col md=\"12\">\r\n                          <Detail code={selectedSalesTracking} />\r\n                        </Col>\r\n                      </Row>\r\n                    </TabPane>\r\n                  </TabContent>\r\n                </>\r\n              )}\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default salesTracking;\r\n","import { createStore } from \"redux\";\r\n\r\nconst store = createStore((state, action) => {\r\n  return action;\r\n});\r\n\r\nexport default store;\r\n","/*eslint-disable*/\r\nimport { Modal, Button } from \"reactstrap\";\r\nimport store from \"./redux\";\r\n\r\nexport default function PreviewTable({ visible, data }) {\r\n  function closePreview() {\r\n    store.dispatch({\r\n      type: \"close_modal_preview\",\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      className=\"modal-dialog-centered\"\r\n      isOpen={visible}\r\n      toggle={() => closePreview()}\r\n    >\r\n      <div className=\"modal-header\">\r\n        <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n          Detail\r\n        </h5>\r\n        <button\r\n          aria-label=\"Close\"\r\n          className=\"close\"\r\n          data-dismiss=\"modal\"\r\n          type=\"button\"\r\n          onClick={() => closePreview()}\r\n        >\r\n          <span aria-hidden={true}>×</span>\r\n        </button>\r\n      </div>\r\n      <div className=\"modal-body\">\r\n        <div className=\"table-container\">\r\n          <table className=\"table\">\r\n            <tbody>\r\n              {(Object.keys(data) || []).map((items, i) => (\r\n                <tr key={i}>\r\n                  <td className=\"table-key\">{items}</td>\r\n                  <td className=\"table-value\">{data[items]}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        <Button\r\n          color=\"info\"\r\n          data-dismiss=\"modal\"\r\n          type=\"button\"\r\n          block\r\n          onClick={() => closePreview()}\r\n        >\r\n          Tutup\r\n        </Button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Card, Button, Row, CardBody, CardHeader, Container } from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport PreviewTable from \"components/PreviewTable\";\r\nimport store from \"components/PreviewTable/redux\";\r\n\r\nconst TransferStock = () => {\r\n  const history = useHistory();\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n  const redirectPrefix = `/admin/transfer-stock/edit/`;\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n\r\n  const [allTransferStock, setAllTransferStock] = useState([]);\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  // preview table\r\n  const [previewVisible, setPreviewVisible] = useState(false);\r\n  const [detailData, setDetailData] = useState({});\r\n\r\n  useEffect(() => {\r\n    listenEvent();\r\n  }, []);\r\n\r\n  const listenEvent = () => {\r\n    store.subscribe(() => {\r\n      const state = store.getState();\r\n      if (state.type === \"close_modal_preview\") {\r\n        setPreviewVisible(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort);\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const updateDataTable = (page, perPage, sort) => {\r\n    getTransaferStock(page, perPage, sort);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n  };\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`;\r\n      updateDataTable(page, perPage, sort);\r\n    }\r\n  };\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTransaferStock(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  const getTransaferStock = async (page, perPage, currentSort) => {\r\n    let filter = {\r\n      page: page,\r\n      per_page: perPage,\r\n    };\r\n    const data = filter;\r\n    const headers = {\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_BASE_URL}/transfer-stok/page`,\r\n      data,\r\n      { headers }\r\n    );\r\n    setAllTransferStock(res.data.response_data);\r\n    setPage(res.data.current_page + 1);\r\n    setPerpage(res.data.per_page);\r\n    setTotalItem(res.data.total_item);\r\n  };\r\n\r\n  const hideAlert = () => {\r\n    setAlert(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {alert}\r\n      <SimpleHeader name=\"Transfer Stock\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <PreviewTable visible={previewVisible} data={detailData} />\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <h3>List Transfer Stock</h3>\r\n                  <div style={{ textAlign: \"right\" }}>\r\n                    <Link\r\n                      className=\"btn btn-info\"\r\n                      to=\"/admin/transfer-stock/create\"\r\n                    >\r\n                      Add\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allTransferStock}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: \"transfer_code\",\r\n                      text: \"Transfer Kode\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"keterangan_ts\",\r\n                      text: \"Keterangan Transfer Stock\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"keterangan_gudang\",\r\n                      text: \"Keterangan Gudang\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"keterangan_validator\",\r\n                      text: \"Keterangan Validator\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"status_barang\",\r\n                      text: \"Status Barang\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"\",\r\n                      text: \"Aksi\",\r\n                      formatter: (cell, row, index) => {\r\n                        return (\r\n                          <>\r\n                            <Button\r\n                              onClick={() => {\r\n                                setDetailData(row);\r\n                                setPreviewVisible(true);\r\n                              }}\r\n                              color=\"primary\"\r\n                              size=\"sm\"\r\n                            >\r\n                              Detail\r\n                            </Button>\r\n                            <Button\r\n                              color=\"warning\"\r\n                              onClick={() => {\r\n                                history.push({\r\n                                  pathname: `${redirectPrefix}${row.id}`,\r\n                                });\r\n                              }}\r\n                              size=\"sm\"\r\n                            >\r\n                              <Link\r\n                                to={redirectPrefix + row.id}\r\n                                id={\"tooltip_\" + row.id}\r\n                              ></Link>\r\n                              Edit\r\n                            </Button>\r\n                          </>\r\n                        );\r\n                      },\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransferStock;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  CardBody,\r\n  CardHeader,\r\n  Container,\r\n  UncontrolledTooltip,\r\n  ButtonGroup,\r\n  Collapse,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst Bkm = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = localStorage.warehouse;\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n  const redirectPrefix = `/admin/bkm/edit/`;\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n\r\n  const [allBkm, setAllBkm] = useState([]);\r\n  const [bkm, setBkm] = useState(\"\");\r\n  const [soCode, setSoCode] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(\r\n        page,\r\n        perPage,\r\n        sort,\r\n        bkm,\r\n        soCode,\r\n        status,\r\n        startDate,\r\n        endDate\r\n      );\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort);\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const updateDataTable = (\r\n    page,\r\n    perPage,\r\n    sort,\r\n    bkm,\r\n    soCode,\r\n    status,\r\n    startDate,\r\n    endDate\r\n  ) => {\r\n    getAsset(page, perPage, sort, bkm, soCode, status, startDate, endDate);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setBkm(bkm);\r\n    setSoCode(soCode);\r\n    setStatus(status);\r\n    setStartDate(startDate);\r\n    setEndDate(endDate);\r\n  };\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`;\r\n      updateDataTable(\r\n        page,\r\n        perPage,\r\n        sort,\r\n        bkm,\r\n        soCode,\r\n        status,\r\n        startDate,\r\n        endDate\r\n      );\r\n    }\r\n  };\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAsset(page, perPage, currentSort, \"\", \"\", \"\", \"\", \"\", \"\");\r\n  }, []);\r\n\r\n  const getAsset = (\r\n    page,\r\n    perPage,\r\n    currentSort,\r\n    bkm_code = null,\r\n    so_code = null,\r\n    so_status = 0,\r\n    start_date = null,\r\n    end_date = null\r\n  ) => {\r\n    let filter = { page: page, per_page: perPage, warehouse_id: warehouse };\r\n    if (bkm_code !== null) {\r\n      filter = Object.assign(filter, { bkm_code: bkm_code });\r\n    }\r\n    if (so_code !== null) {\r\n      filter = Object.assign(filter, { so_code: so_code });\r\n    }\r\n    if (so_status !== null) {\r\n      filter = Object.assign(filter, { so_status: so_status });\r\n    }\r\n    if (start_date !== null) {\r\n      filter = Object.assign(filter, { start_date: start_date });\r\n    }\r\n    if (end_date !== null) {\r\n      filter = Object.assign(filter, { end_date: end_date });\r\n    }\r\n    const data = filter;\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/bkm`, data, { headers })\r\n      .then((data) => {\r\n        setAllBkm(data.data.response);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const hideAlert = () => {\r\n    setAlert(null);\r\n  };\r\n\r\n  const reset = () => {\r\n    setBkm(\"\");\r\n    setSoCode(\"\");\r\n    setStatus(\"\");\r\n    setStartDate(\"\");\r\n    setEndDate(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\", \"\", \"\", \"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {alert}\r\n      <SimpleHeader name=\"Bukti Kas Masuk\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <h3>List Bukti Kas Masuk</h3>\r\n                  <div style={{ textAlign: \"right\" }}>\r\n                    <Link className=\"btn btn-info\" to=\"/admin/bkm/create\">\r\n                      Add\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <h3 onClick={toggleOpen}>\r\n                  Filter &nbsp;\r\n                  {isOpen === true ? (\r\n                    <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\r\n                  ) : (\r\n                    <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  )}\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                    <Row md=\"12\">\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label htmlFor=\"exampleFormControlSelect3\">\r\n                            Kode BKM\r\n                          </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            placeholder=\"Masukan Kode BKM\"\r\n                            value={bkm}\r\n                            onChange={(e) =>\r\n                              updateDataTable(\r\n                                1,\r\n                                perPage,\r\n                                currentSort,\r\n                                e.target.value,\r\n                                soCode,\r\n                                status,\r\n                                startDate,\r\n                                endDate\r\n                              )\r\n                            }\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label htmlFor=\"exampleFormControlSelect3\">\r\n                            Kode SO\r\n                          </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            placeholder=\"Masukan Kode SO\"\r\n                            value={soCode}\r\n                            onChange={(e) =>\r\n                              updateDataTable(\r\n                                1,\r\n                                perPage,\r\n                                currentSort,\r\n                                bkm,\r\n                                e.target.value,\r\n                                status,\r\n                                startDate,\r\n                                endDate\r\n                              )\r\n                            }\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label\r\n                            className=\"form-control-label\"\r\n                            htmlFor=\"exampleFormControlSelect3\"\r\n                          >\r\n                            SO Status\r\n                          </Label>\r\n                          <Input\r\n                            name=\"type\"\r\n                            type=\"select\"\r\n                            value={status}\r\n                            onChange={(e) =>\r\n                              updateDataTable(\r\n                                1,\r\n                                perPage,\r\n                                currentSort,\r\n                                bkm,\r\n                                soCode,\r\n                                e.target.value,\r\n                                startDate,\r\n                                endDate\r\n                              )\r\n                            }\r\n                          >\r\n                            <option value=\"\">Pilih SO Status</option>\r\n                            <option value={1}>Penjualan Kasir</option>\r\n                            <option value={2}>Penjualan</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label htmlFor=\"exampleFormControlSelect3\">\r\n                            Start Date\r\n                          </Label>\r\n                          <Input\r\n                            id=\"example-date-input\"\r\n                            type=\"date\"\r\n                            value={startDate}\r\n                            onChange={(e) =>\r\n                              updateDataTable(\r\n                                1,\r\n                                perPage,\r\n                                currentSort,\r\n                                bkm,\r\n                                soCode,\r\n                                status,\r\n                                e.target.value,\r\n                                endDate\r\n                              )\r\n                            }\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label htmlFor=\"exampleFormControlSelect3\">\r\n                            End Date\r\n                          </Label>\r\n                          <Input\r\n                            id=\"example-date-input\"\r\n                            type=\"date\"\r\n                            value={endDate}\r\n                            onChange={(e) =>\r\n                              updateDataTable(\r\n                                1,\r\n                                perPage,\r\n                                currentSort,\r\n                                bkm,\r\n                                soCode,\r\n                                status,\r\n                                startDate,\r\n                                e.target.value\r\n                              )\r\n                            }\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>\r\n                        <Button type=\"button\" onClick={reset} color=\"secondary\">\r\n                          Reset\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                </Collapse>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allBkm}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: \"bkm_code\",\r\n                      text: \"Kode BKM\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"so_code\",\r\n                      text: \"Kode SO\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"kas_bank\",\r\n                      text: \"Kas Bank\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"created_at\",\r\n                      text: \"Tanggal Beli\",\r\n                      sort: true,\r\n                      formatter: (cell, row) => {\r\n                        return moment(cell).format(\"L\");\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: \"status_transaksi\",\r\n                      text: \"Status\",\r\n                      sort: true,\r\n                      formatter: (cell, row) => {\r\n                        return cell === 0 ? \"Proses\" : \"Selesai\";\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: \"\",\r\n                      text: \"\",\r\n                      formatter: (cell, row, index) => {\r\n                        return (\r\n                          <ButtonGroup>\r\n                            <Button>\r\n                              <Link\r\n                                to={redirectPrefix + row.id}\r\n                                id={\"tooltip_\" + row.id}\r\n                              >\r\n                                <i className=\"fas fa-user-edit\" />\r\n                              </Link>\r\n                            </Button>\r\n                            <UncontrolledTooltip\r\n                              delay={0}\r\n                              target={\"tooltip_\" + row.id}\r\n                            >\r\n                              Edit\r\n                            </UncontrolledTooltip>\r\n                          </ButtonGroup>\r\n                        );\r\n                      },\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bkm;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  CardBody,\r\n  CardHeader,\r\n  Container,\r\n  UncontrolledTooltip,\r\n  ButtonGroup,\r\n  Collapse,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\n\r\nconst Jurnal = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n\r\n  const [allSalary, setAllSalary] = useState([]);\r\n  const [allJurnal, setAllJurnal] = useState([]);\r\n\r\n  const [allCoa, setAllCoa] = useState([]);\r\n  const [coa, setCoa] = useState(\"\");\r\n  const [allAccount, setAllAccount] = useState([]);\r\n  const [account, setAccount] = useState(\"\");\r\n  const [typeJurnal, setTypeJurnal] = useState(\"\");\r\n\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, account, coa, typeJurnal);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort);\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAccount();\r\n    getCoa();\r\n  }, []);\r\n\r\n  const getAccount = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/account/list`, { headers })\r\n      .then((data) => {\r\n        setAllAccount(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getCoa = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/coa/list`, { headers })\r\n      .then((data) => {\r\n        console.log(data);\r\n        setAllCoa(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const updateDataTable = (page, perPage, sort, account, coa, typeJurnal) => {\r\n    getJurnal(page, perPage, sort, account, coa, typeJurnal);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setAccount(account);\r\n    setCoa(coa);\r\n    setTypeJurnal(typeJurnal);\r\n  };\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`;\r\n      updateDataTable(page, perPage, sort, account, coa, typeJurnal);\r\n    }\r\n  };\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getJurnal(page, perPage, currentSort, \"\", \"\", \"\");\r\n  }, []);\r\n\r\n  const getJurnal = async (\r\n    page,\r\n    perPage,\r\n    currentSort,\r\n    account_id = 0,\r\n    coa_id = 0,\r\n    type = 0\r\n  ) => {\r\n    let filter = {\r\n      page: page,\r\n      per_page: perPage,\r\n      warehouse_id: parseInt(warehouse),\r\n    };\r\n    if (account_id !== 0) {\r\n      filter = Object.assign(filter, { account_id: parseInt(account_id) });\r\n    }\r\n    if (coa_id !== 0) {\r\n      filter = Object.assign(filter, { coa_id: parseInt(coa_id) });\r\n    }\r\n    if (type !== 0) {\r\n      filter = Object.assign(filter, { type: parseInt(type) });\r\n    }\r\n    const data = filter;\r\n    const headers = {\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_BASE_URL}/jurnal`,\r\n      data,\r\n      { headers }\r\n    );\r\n    setAllJurnal(res.data.response);\r\n    setPage(res.data.current_page + 1);\r\n    setPerpage(res.data.per_page);\r\n    setTotalItem(res.data.total_item);\r\n  };\r\n\r\n  const reset = () => {\r\n    setAccount(\"\");\r\n    setCoa(\"\");\r\n    setTypeJurnal(\"\");\r\n    parseInt(warehouse);\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\", \"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {alert}\r\n      <SimpleHeader name=\"Jurnal\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <h3>List Jurnal</h3>\r\n                  <div style={{ textAlign: \"right\" }}>\r\n                    <Link className=\"btn btn-info\" to=\"/admin/jurnal/create\">\r\n                      Add\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <h3 onClick={toggleOpen}>\r\n                  Filter &nbsp;\r\n                  {isOpen === true ? (\r\n                    <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\r\n                  ) : (\r\n                    <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  )}\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                    <Row md=\"12\">\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label\r\n                            className=\"form-control-label\"\r\n                            htmlFor=\"exampleFormControlSelect3\"\r\n                          >\r\n                            Account\r\n                          </Label>\r\n                          <Input\r\n                            name=\"account\"\r\n                            type=\"select\"\r\n                            value={account}\r\n                            onChange={(e) =>\r\n                              updateDataTable(\r\n                                1,\r\n                                perPage,\r\n                                currentSort,\r\n                                e.target.value,\r\n                                coa,\r\n                                typeJurnal\r\n                              )\r\n                            }\r\n                          >\r\n                            <option value=\"\">Pilih Account</option>\r\n                            {allAccount.map((dep, key) => {\r\n                              return (\r\n                                <option key={key} value={dep.id}>\r\n                                  {dep.account_name}\r\n                                </option>\r\n                              );\r\n                            })}\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md={3}>\r\n                        <FormGroup>\r\n                          <Label\r\n                            className=\"form-control-label\"\r\n                            htmlFor=\"exampleFormControlSelect3\"\r\n                          >\r\n                            COA\r\n                          </Label>\r\n                          <Input\r\n                            name=\"coa\"\r\n                            type=\"select\"\r\n                            value={coa}\r\n                            onChange={(e) =>\r\n                              updateDataTable(\r\n                                1,\r\n                                perPage,\r\n                                currentSort,\r\n                                account,\r\n                                e.target.value,\r\n                                typeJurnal\r\n                              )\r\n                            }\r\n                          >\r\n                            <option value=\"\">Pilih COA</option>\r\n                            {allCoa.map((dep, key) => {\r\n                              return (\r\n                                <option key={key} value={dep.id}>\r\n                                  {dep.coa_name}\r\n                                </option>\r\n                              );\r\n                            })}\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md={3}>\r\n                        <FormGroup>\r\n                          <Label\r\n                            className=\"form-control-label\"\r\n                            htmlFor=\"exampleFormControlSelect3\"\r\n                          >\r\n                            Type\r\n                          </Label>\r\n                          <Input\r\n                            name=\"type\"\r\n                            type=\"select\"\r\n                            value={typeJurnal}\r\n                            onChange={(e) =>\r\n                              updateDataTable(\r\n                                1,\r\n                                perPage,\r\n                                currentSort,\r\n                                account,\r\n                                coa,\r\n                                e.target.value\r\n                              )\r\n                            }\r\n                          >\r\n                            <option value=\"\">Pilih Type</option>\r\n                            <option value={1}>Debit</option>\r\n                            <option value={2}>Credit</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>\r\n                        <Button type=\"button\" onClick={reset} color=\"secondary\">\r\n                          Reset\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                </Collapse>\r\n                <ToolkitProvider\r\n                  rowNumber={rowIndex}\r\n                  data={allJurnal}\r\n                  keyField=\"id\"\r\n                  columns={[\r\n                    {\r\n                      dataField: \"no\",\r\n                      text: \"#\",\r\n                      sort: true,\r\n                      page: 1,\r\n                      formatter: (cell, row, index) => {\r\n                        let currentRow = ++index;\r\n                        return currentRow + rowIndex;\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: \"pic\",\r\n                      text: \"PIC\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"account\",\r\n                      text: \"Account\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"coa\",\r\n                      text: \"COA\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"type\",\r\n                      text: \"Type\",\r\n                      sort: true,\r\n                      formatter: (cell, row) => {\r\n                        return row.type === 1 ? \"Debit\" : \"Credit\";\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: \"saldo\",\r\n                      text: \"Saldo\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"tanggal_transaksi\",\r\n                      text: \"Tanggal Transaksi\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"deskripsi\",\r\n                      text: \"Deskripsi\",\r\n                      sort: true,\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"py-4 table-responsive\">\r\n                      <BootstrapTable\r\n                        remote\r\n                        {...props.baseProps}\r\n                        bootstrap4={true}\r\n                        bordered={false}\r\n                        hover={true}\r\n                        pagination={paginationFactory({ ...paginationOption })}\r\n                        onTableChange={handleTableChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Jurnal;\r\n","import { createStore } from \"redux\";\r\n\r\nconst store = createStore((state, action) => {\r\n  return action;\r\n});\r\n\r\nexport default store;\r\n","/*eslint-disable*/\r\nimport { Modal, Button } from \"reactstrap\";\r\nimport store from \"../redux\";\r\n\r\nexport default function PreviewHistory({ visible, data }) {\r\n  function closePreview() {\r\n    store.dispatch({\r\n      type: \"close_modal_preview\",\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      className=\"modal-dialog-centered\"\r\n      isOpen={visible}\r\n      toggle={() => closePreview()}\r\n    >\r\n      <div className=\"modal-header\">\r\n        <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n          Detail\r\n        </h5>\r\n        <button\r\n          aria-label=\"Close\"\r\n          className=\"close\"\r\n          data-dismiss=\"modal\"\r\n          type=\"button\"\r\n          onClick={() => closePreview()}\r\n        >\r\n          <span aria-hidden={true}>×</span>\r\n        </button>\r\n      </div>\r\n      <div className=\"modal-body\">\r\n        <div className=\"table-container\">\r\n          <table className=\"table\">\r\n            <tbody>\r\n              {(Object.keys(data) || []).map((items, i) => (\r\n                <tr key={i}>\r\n                  <td className=\"table-key\">{items}</td>\r\n                  <td className=\"table-value\">{data[items]}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        <Button\r\n          color=\"info\"\r\n          data-dismiss=\"modal\"\r\n          type=\"button\"\r\n          block\r\n          onClick={() => closePreview()}\r\n        >\r\n          Tutup\r\n        </Button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  Row,\r\n  CardBody,\r\n  CardHeader,\r\n  TabContent,\r\n  Container,\r\n  Table,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport PreviewHistory from \"./snippets/Preview\";\r\nimport Axios from \"axios\";\r\nimport store from \"./snippets/redux\";\r\n\r\nconst base_url = process.env.REACT_APP_API_BASE_URL;\r\n\r\nexport default function TransferHistory() {\r\n  const [amountShown, setAmountShown] = useState(10);\r\n  const [listData, setListData] = useState([]);\r\n  const [preview, setPreview] = useState(false);\r\n  const [detailData, setDetailData] = useState({ status: \"-\" });\r\n\r\n  // pagination\r\n  const [nav, setNav] = useState([1]);\r\n  const [activeNav, setActiveNav] = useState(1);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    listenEvent();\r\n  }, []);\r\n\r\n  async function getData(perpage = 10, page = 1) {\r\n    try {\r\n      const payload = {\r\n        page: page,\r\n        per_page: perpage,\r\n      };\r\n\r\n      Axios.post(`${base_url}/transfer-stok/history`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.token}`,\r\n        },\r\n        body: JSON.stringify(payload),\r\n      })\r\n        .then((res) => {\r\n          setListData(res.data.response_data);\r\n\r\n          // membuat list tombol navigasi ie.1,2,3,4 etc\r\n          const navigationList = [];\r\n          for (let i = 0; i < res.data.total_item / amountShown; i++) {\r\n            navigationList.push(i + 1);\r\n          }\r\n          setNav(navigationList);\r\n        })\r\n        .catch((Err) => {\r\n          console.log(Err);\r\n        });\r\n    } catch (err) {\r\n      setListData([]);\r\n    }\r\n  }\r\n\r\n  function listenEvent() {\r\n    store.subscribe(() => {\r\n      const state = store.getState();\r\n      if (state.type === \"close_modal_preview\") {\r\n        setPreview(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Inventory\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        {/* preview */}\r\n        <PreviewHistory visible={preview} data={detailData} />\r\n        {/*  */}\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <h3>Transfer Stock History</h3>\r\n                  <div style={{ textAlign: \"right\" }}></div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <TabContent activeTab={\"1\"}>\r\n                  <div className=\"table-container\">\r\n                    <Table className=\"table\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th>#</th>\r\n                          <th>Kode TS</th>\r\n                          <th>Tipe</th>\r\n                          <th>Status Barang</th>\r\n                          <th>Aksi</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {listData.map((items, i) => (\r\n                          <tr key={i}>\r\n                            <td>{i + 1}</td>\r\n                            <td>{items.transfer_code}</td>\r\n                            <td>{items.ts_type}</td>\r\n                            <td>{items.status_barang}</td>\r\n                            <td>\r\n                              <Button\r\n                                onClick={() => {\r\n                                  setPreview(true);\r\n                                  setDetailData(items);\r\n                                }}\r\n                                type=\"button\"\r\n                                color=\"primary\"\r\n                                size=\"sm\"\r\n                              >\r\n                                detail\r\n                              </Button>\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </Table>\r\n\r\n                    <div className=\"filter-page\">\r\n                      <div className=\"section-1\">\r\n                        <span>Show</span>\r\n                        <select\r\n                          className=\"filter-select\"\r\n                          onChange={(evt) => {\r\n                            setAmountShown(parseInt(evt.target.value));\r\n                            getData(parseInt(evt.target.value), activeNav);\r\n                          }}\r\n                        >\r\n                          <option value=\"10\">10</option>\r\n                          <option value=\"20\">20</option>\r\n                          <option value=\"25\">25</option>\r\n                          <option value=\"50\">50</option>\r\n                        </select>\r\n                        <span>\r\n                          {\" \"}\r\n                          entries. Showing rows 1 to {listData.length} of{\" \"}\r\n                          {amountShown}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"section-2\">\r\n                        <nav aria-label=\"...\">\r\n                          <Pagination>\r\n                            <PaginationItem className=\"disabled\">\r\n                              <PaginationLink\r\n                                href=\"#pablo\"\r\n                                onClick={(e) => e.preventDefault()}\r\n                                tabIndex=\"-1\"\r\n                              >\r\n                                <i className=\"fa fa-angle-left\" />\r\n                                <span className=\"sr-only\">Previous</span>\r\n                              </PaginationLink>\r\n                            </PaginationItem>\r\n\r\n                            {nav.map((items, i) => (\r\n                              <PaginationItem\r\n                                className={activeNav === items ? \"active\" : \"\"}\r\n                                key={i}\r\n                              >\r\n                                <PaginationLink\r\n                                  href=\"#pablo\"\r\n                                  onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    setActiveNav(items);\r\n                                    getData(amountShown, items);\r\n                                  }}\r\n                                >\r\n                                  {items}\r\n                                </PaginationLink>\r\n                              </PaginationItem>\r\n                            ))}\r\n                            <PaginationItem>\r\n                              <PaginationLink\r\n                                href=\"#pablo\"\r\n                                onClick={(e) => e.preventDefault()}\r\n                              >\r\n                                <i className=\"fa fa-angle-right\" />\r\n                                <span className=\"sr-only\">Next</span>\r\n                              </PaginationLink>\r\n                            </PaginationItem>\r\n                          </Pagination>\r\n                        </nav>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </TabContent>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import { createStore } from \"redux\";\r\n\r\nconst store = createStore((state, action) => {\r\n  return action;\r\n});\r\n\r\nexport default store;\r\n","import store from \"../redux\";\r\n\r\n// component\r\nimport { Modal, Button } from \"reactstrap\";\r\n\r\nexport default function FailedAlert({ isOpen, title, message }) {\r\n  function closeModal() {\r\n    store.dispatch({\r\n      type: \"close_error_modal\",\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      className=\"modal-dialog-centered modal-danger\"\r\n      contentClassName=\"bg-gradient-danger\"\r\n      isOpen={isOpen}\r\n      toggle={() => closeModal()}\r\n    >\r\n      <div className=\"modal-header\">\r\n        <h6 className=\"modal-title\" id=\"modal-title-notification\">\r\n          {title}\r\n        </h6>\r\n        <button\r\n          aria-label=\"Close\"\r\n          className=\"close\"\r\n          data-dismiss=\"modal\"\r\n          type=\"button\"\r\n          onClick={() => closeModal()}\r\n        >\r\n          <span aria-hidden={true}>×</span>\r\n        </button>\r\n      </div>\r\n      <div className=\"modal-body\">\r\n        <div className=\"py-3 text-center\">\r\n          <i className=\"ni ni-bell-55 ni-3x\" />\r\n          <h4 className=\"heading mt-4\">Peringatan!</h4>\r\n          <p>{message}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        <Button\r\n          onClick={() => closeModal()}\r\n          className=\"btn-white\"\r\n          color=\"default\"\r\n          type=\"button\"\r\n        >\r\n          Ok\r\n        </Button>\r\n        <Button\r\n          className=\"text-white ml-auto\"\r\n          color=\"link\"\r\n          data-dismiss=\"modal\"\r\n          type=\"button\"\r\n          onClick={() => closeModal()}\r\n        >\r\n          Tutup\r\n        </Button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import { Modal, Button } from \"reactstrap\";\r\nimport store from \"../redux\";\r\n\r\nexport default function PreviewImage({\r\n  isOpen,\r\n  src,\r\n  merekId,\r\n  kategoriId,\r\n  subkategoriID,\r\n  selectedImage,\r\n  page,\r\n  keterangan,\r\n  detail,\r\n  ObjectData,\r\n  alias,\r\n}) {\r\n  /**\r\n   * This function is called when the user clicks the \"Cancel\" button in the preview modal\r\n   */\r\n  function cancelUpload() {\r\n    store.dispatch({\r\n      type: \"close_preview_modal\",\r\n      selected_image: selectedImage !== undefined ? selectedImage[0] : \"\",\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      className=\"modal-dialog-centered\"\r\n      isOpen={isOpen}\r\n      toggle={() => cancelUpload()}\r\n    >\r\n      <div className=\"modal-header\">\r\n        <h6 className=\"modal-title\" id=\"modal-title-default\">\r\n          Preview\r\n        </h6>\r\n        <button\r\n          aria-label=\"Close\"\r\n          className=\"close\"\r\n          data-dismiss=\"modal\"\r\n          type=\"button\"\r\n          onClick={() => cancelUpload()}\r\n        >\r\n          <span aria-hidden={true}>×</span>\r\n        </button>\r\n      </div>\r\n      <div className=\"modal-body\">\r\n        {src !== \"null\" ? (\r\n          <img src={src} alt=\"preview img\" className=\"upload-image-preview\" />\r\n        ) : (\r\n          <div style={{ textAlign: \"center\", width: \"100%\" }}>\r\n            <small style={{ fontWeight: 700 }}>Gambar Belum Tersedia</small>\r\n          </div>\r\n        )}\r\n        <br />\r\n        {detail ? <div className=\"detail-popup\">{keterangan}</div> : \"\"}\r\n      </div>\r\n\r\n      {page === \"image-items\" && ObjectData !== undefined ? (\r\n        <div className=\"table-container\">\r\n          <table className=\"table\">\r\n            <tbody>\r\n              {(Object.keys(ObjectData) || []).map((items, i) =>\r\n                items !== \"image_url\" ? (\r\n                  <tr key={i}>\r\n                    <td className=\"table-key\">{alias[items]}</td>\r\n                    <td className=\"table-value\">{ObjectData[items]}</td>\r\n                  </tr>\r\n                ) : (\r\n                  <tr key={i}>\r\n                    <td></td>\r\n                    <td></td>\r\n                  </tr>\r\n                )\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <div className=\"modal-footer\">\r\n        <Button\r\n          size=\"lg\"\r\n          block\r\n          onClick={() => cancelUpload()}\r\n          color={page === \"list\" ? \"info\" : \"primary\"}\r\n          type=\"button\"\r\n        >\r\n          {page === \"list\" ? \"Tutup\" : \"Lanjutkan\"}\r\n        </Button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  TabContent,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  CardHeader,\r\n  Container,\r\n  Row,\r\n  Card,\r\n  CardBody,\r\n} from \"reactstrap\";\r\nimport FailedAlert from \"./snippets/FailedAlert\";\r\nimport PreviewImage from \"./snippets/PreviewImage\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\n// state management\r\nimport store from \"./snippets/redux\";\r\nimport { useHistory } from \"react-router\";\r\n\r\n//\r\nconst base_url = process.env.REACT_APP_API_BASE_URL;\r\n\r\nexport default function UploadImage() {\r\n  const fileRef = useRef(null);\r\n  const [fileError, setFileError] = useState(false);\r\n  const [preview, setPreview] = useState(false);\r\n  const [previewValue, setPreviewValue] = useState(\"\");\r\n\r\n  // data needs\r\n  const [kategori, setKategori] = useState([]);\r\n  const [listFunction, setFunction] = useState([]);\r\n  const [merek, setListMerek] = useState([]);\r\n\r\n  const [kategoriId, setKategoriId] = useState(0);\r\n  const [subKategoriId, setSubKategoriID] = useState(0);\r\n  const [functionId, setFunctionId] = useState(0);\r\n  const [merekId, setMerekId] = useState(0);\r\n  const [selectedImage, setSelectedImage] = useState([]);\r\n  const [imageName, setImageName] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // error\r\n  const [errKategori, setErrKategori] = useState(false);\r\n  const [errFunction, setErrFunction] = useState(false);\r\n  const [errMerek, setErrMerek] = useState(false);\r\n  const [errFile, setErrFile] = useState(false);\r\n  //\r\n\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    /**\r\n     * It listens to the store's state and changes the state of the component accordingly\r\n     */\r\n    function listenEvent() {\r\n      store.subscribe(() => {\r\n        const state = store.getState();\r\n        switch (state.type) {\r\n          case \"close_error_modal\":\r\n            setFileError(false);\r\n            break;\r\n          case \"close_preview_modal\":\r\n            setPreview(false);\r\n            setLoading(false);\r\n            setImageName(state.selected_image.name);\r\n            break;\r\n          case \"send_image\":\r\n            handleSend();\r\n            break;\r\n          default:\r\n        }\r\n      });\r\n    }\r\n    listenEvent();\r\n    getKategori();\r\n  }, []);\r\n\r\n  /**\r\n   * It fetches the list of item categories from the server and stores it in the state\r\n   */\r\n  async function getKategori() {\r\n    try {\r\n      const req = await fetch(`${base_url}/item-kategori/list`);\r\n      const res = await req.json();\r\n\r\n      if (req.status === 200 && res.response.length > 0) {\r\n        setKategori(res.response);\r\n      }\r\n    } catch (err) {\r\n      //\r\n    }\r\n  }\r\n\r\n  /**\r\n   * It takes in a list of subKategoriIds and returns a list of itemFunctions\r\n   * @param subKategoriIds - The subKategoriIds is the id of the subKategori that you want to get the\r\n   * list of functions.\r\n   */\r\n  async function getListFunction(KategoriIds) {\r\n    try {\r\n      const req = await fetch(\r\n        `${base_url}/item-function/ecom?kategori_id=${KategoriIds}`\r\n      );\r\n      const res = await req.json();\r\n      if (req.status === 200 && res.response.length > 0) {\r\n        setFunction(res.response);\r\n      }\r\n    } catch (err) {}\r\n  }\r\n\r\n  /**\r\n   * It fetches the list of all the available Merek based on the selected Kategori, Sub Kategori,\r\n   * Function, and Sub Function\r\n   * @param subFunctionIds - The sub function id.\r\n   */\r\n  async function getMerek(functionIds) {\r\n    try {\r\n      const req = await fetch(\r\n        `${base_url}/merek/ecom?kategori_id=${kategoriId}&function_id=${functionIds}`\r\n      );\r\n      const res = await req.json();\r\n      if (req.status === 200 && res.response.length > 0) {\r\n        setListMerek(res.response);\r\n      }\r\n    } catch (err) {}\r\n  }\r\n\r\n  /**\r\n   * When the user clicks the file input, the file input will be clicked\r\n   */\r\n  function handleFileWithClick() {\r\n    setFileError(false);\r\n    fileRef.current.click();\r\n  }\r\n\r\n  /**\r\n   * Given a image types, return true if the image type is valid\r\n   * @param types - The file types that are allowed.\r\n   * @returns A boolean value.\r\n   */\r\n  function isImageValid(types) {\r\n    switch (types) {\r\n      case \"image/png\":\r\n        return true;\r\n      case \"image/jpg\":\r\n        return true;\r\n      case \"image/jpeg\":\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  function validateInput() {\r\n    const data = [\r\n      {\r\n        value: kategoriId,\r\n        name: \"kategori\",\r\n      },\r\n      {\r\n        value: functionId,\r\n        name: \"function\",\r\n      },\r\n      {\r\n        value: merekId,\r\n        name: \"merek\",\r\n      },\r\n      {\r\n        value: selectedImage.length,\r\n        name: \"file\",\r\n      },\r\n    ];\r\n\r\n    const valid = [];\r\n\r\n    data.forEach((items) => {\r\n      if (items.value === 0 || items.value === \"0\") {\r\n        switch (items.name) {\r\n          case \"kategori\":\r\n            setErrKategori(true);\r\n            break;\r\n          case \"function\":\r\n            setErrFunction(true);\r\n            break;\r\n          case \"merek\":\r\n            setErrMerek(true);\r\n            break;\r\n          case \"file\":\r\n            setErrFile(true);\r\n            break;\r\n          default:\r\n          //\r\n        }\r\n        valid.push(false);\r\n      } else {\r\n        valid.push(true);\r\n      }\r\n    });\r\n\r\n    return valid.includes(false) ? false : true;\r\n  }\r\n\r\n  /**\r\n   * It takes the form data,\r\n   * converts it to a JSON string, and then sends it to the server\r\n   */\r\n  function handleSend(evt) {\r\n    evt.preventDefault();\r\n    const data = {\r\n      merek_id: merekId,\r\n      kategori_id: kategoriId,\r\n      function_id: functionId,\r\n    };\r\n    if (validateInput()) {\r\n      setLoading(true);\r\n      const payload = new FormData();\r\n      payload.append(\"body\", JSON.stringify(data));\r\n      payload.append(\"file\", selectedImage[0]);\r\n\r\n      fetch(`${base_url}/image/items/save`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.token}`,\r\n        },\r\n        method: \"POST\",\r\n        body: payload,\r\n      })\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((res) => {\r\n          setPreview(false);\r\n          setLoading(false);\r\n          console.log(res);\r\n          history.push(\"/admin/image/list\");\r\n          // window.location.href = `/image/items/${statePayload.kategori_id}/${statePayload.subkategori_id}/${statePayload.merek_id}`;\r\n        })\r\n        .catch((err) => {\r\n          setLoading(false);\r\n          console.warn(err);\r\n        });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * It takes a file object as an argument, and then calls a function that sets the preview value to the\r\n   * result of reading the file as a data URL\r\n   * @param src - The image file that you want to upload.\r\n   */\r\n  function readImage(src) {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      setPreviewValue(reader.result);\r\n    };\r\n    reader.readAsDataURL(src);\r\n  }\r\n\r\n  /**\r\n   * Reads the image file and sets the preview to true\r\n   * @param evt - The event object that contains the file.\r\n   */\r\n  function processImage(evt) {\r\n    const files = evt.target.files;\r\n    if (files.length > 0) {\r\n      const fileSize = Math.round(files[0].size / 1024);\r\n      const selectedFile = files;\r\n      // validation image\r\n      if (isImageValid(files[0].type) && fileSize < 5000) {\r\n        readImage(selectedFile[0]);\r\n        setPreview(true);\r\n        setSelectedImage(selectedFile);\r\n        setErrFile(false);\r\n      } else {\r\n        setFileError(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Upload\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <TabContent activeTab={\"1\"}>\r\n                  {/* alert */}\r\n                  <FailedAlert\r\n                    isOpen={fileError}\r\n                    title=\"Gaga\"\r\n                    message={\r\n                      \"Pastikan file yang anda upload dalam bentuk png, jpg atau jpeg, serta pastikan ukurannya kurang dari 5 MB\"\r\n                    }\r\n                  />\r\n                  <PreviewImage\r\n                    loading={loading}\r\n                    isOpen={preview}\r\n                    src={previewValue}\r\n                    merekId={merekId}\r\n                    kategoriId={kategoriId}\r\n                    subkategoriID={subKategoriId}\r\n                    selectedImage={selectedImage}\r\n                  />\r\n                  <CardHeader>\r\n                    <h3>Upload Image</h3>\r\n                  </CardHeader>\r\n                  {/*  */}\r\n                  <br />\r\n                  <Form\r\n                    noValidate={true}\r\n                    action=\"\"\r\n                    onSubmit={(evt) => handleSend(evt)}\r\n                    method=\"POST\"\r\n                  >\r\n                    <FormGroup>\r\n                      <label htmlFor=\"kategori\">Kategori*</label>\r\n                      <Input\r\n                        id=\"kategori\"\r\n                        type=\"select\"\r\n                        name=\"kategori\"\r\n                        onChange={(evt) => {\r\n                          setKategoriId(evt.target.value);\r\n                          getListFunction(evt.target.value);\r\n                          setErrKategori(false);\r\n                        }}\r\n                        required\r\n                      >\r\n                        <option value=\"0\">-</option>\r\n                        {kategori.map((items, i) => (\r\n                          <option key={i} value={items.id}>\r\n                            {items.name}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      <small className=\"err-text\">\r\n                        {errKategori ? \"Kategori wajib diisi\" : \"\"}\r\n                      </small>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <label className=\"test\" htmlFor=\"function\">\r\n                        Function*\r\n                      </label>\r\n                      <Input\r\n                        id=\"function\"\r\n                        type=\"select\"\r\n                        required\r\n                        name=\"function\"\r\n                        onChange={(evt) => {\r\n                          setFunctionId(evt.target.value);\r\n                          getMerek(evt.target.value);\r\n                          setErrFunction(false);\r\n                        }}\r\n                      >\r\n                        <option value=\"0\">-</option>\r\n                        {listFunction.map((items, i) => (\r\n                          <option value={items.id} key={i}>\r\n                            {items.name}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      <small className=\"err-text\">\r\n                        {errFunction ? \"Function wajib diisi\" : \"\"}\r\n                      </small>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <label htmlFor=\"merek\">Merek*</label>\r\n                      <Input\r\n                        id=\"merek\"\r\n                        type=\"select\"\r\n                        onChange={(evt) => {\r\n                          setMerekId(evt.target.value);\r\n                          setErrMerek(false);\r\n                        }}\r\n                        name=\"merek\"\r\n                        required={true}\r\n                      >\r\n                        <option value=\"0\">-</option>\r\n                        {merek.map((items, i) => (\r\n                          <option value={items.id} key={i}>\r\n                            {items.name}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      <small className=\"err-text\">\r\n                        {errMerek ? \"Merek wajib diisi\" : \"\"}\r\n                      </small>\r\n                    </FormGroup>\r\n                    {/* upload image */}\r\n                    <div className=\"upload-image-container\">\r\n                      <div className=\"upload-image-canvas\">\r\n                        <h4>Upload Gambar</h4>\r\n                        <br />\r\n                        <input\r\n                          type=\"file\"\r\n                          accept=\"image/png, image/jpg, image/jpeg\"\r\n                          className=\"hide-input\"\r\n                          ref={fileRef}\r\n                          required\r\n                          onChange={(evt) => processImage(evt)}\r\n                        />\r\n                        <Button\r\n                          color=\"default\"\r\n                          type=\"button\"\r\n                          onClick={() => handleFileWithClick()}\r\n                        >\r\n                          <i className=\"ni ni-image\"></i>\r\n                          <span className=\"btn-inner--text\">\r\n                            {imageName.length > 0\r\n                              ? imageName.slice(0, 20)\r\n                              : \"Klik Disini\"}\r\n                          </span>\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                    <small className=\"err-text\">\r\n                      {errFile ? \"file wajib diupload\" : \"\"}\r\n                    </small>\r\n\r\n                    <br />\r\n                    <Button color=\"info\" size=\"lg\" type=\"submit\">\r\n                      {loading ? \"Loading...\" : \"Simpan\"}\r\n                    </Button>\r\n                    <Button\r\n                      color=\"secondary\"\r\n                      size=\"lg\"\r\n                      type=\"submit\"\r\n                      onClick={() => history.goBack()}\r\n                    >\r\n                      Kembali\r\n                    </Button>\r\n                  </Form>\r\n\r\n                  {/*  */}\r\n                </TabContent>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport {\r\n  TabContent,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  CardHeader,\r\n  Row,\r\n  Card,\r\n  CardBody,\r\n  Container,\r\n} from \"reactstrap\";\r\nimport FailedAlert from \"./snippets/FailedAlert\";\r\nimport PreviewImage from \"./snippets/PreviewImage\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\n// state management\r\nimport store from \"./snippets/redux\";\r\n\r\n//\r\nconst base_url = process.env.REACT_APP_API_BASE_URL;\r\n\r\nexport default function UploadBanner() {\r\n  const fileRef = useRef(null);\r\n  const [fileError, setFileError] = useState(false);\r\n  const [preview, setPreview] = useState(false);\r\n  const [previewValue, setPreviewValue] = useState(\"\");\r\n\r\n  // data needs\r\n\r\n  const [keterangan, setKeterangan] = useState(\"\");\r\n  const [selectedImage, setSelectedImage] = useState([]);\r\n  const [imageName, setImageName] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // error\r\n  const [errKeterangan, setErrKeterangan] = useState(false);\r\n  const [errFile, setErrFile] = useState(false);\r\n  //\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    listenEvent();\r\n  }, []);\r\n\r\n  /**\r\n   * It listens to the store's state and changes the state of the component accordingly\r\n   */\r\n  function listenEvent() {\r\n    store.subscribe(() => {\r\n      const state = store.getState();\r\n      switch (state.type) {\r\n        case \"close_error_modal\":\r\n          setFileError(false);\r\n          break;\r\n        case \"close_preview_modal\":\r\n          setPreview(false);\r\n          setLoading(false);\r\n          setImageName(state.selected_image.name);\r\n          break;\r\n        case \"send_image\":\r\n          handleSend();\r\n          break;\r\n        default:\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * When the user clicks the file input, the file input will be clicked\r\n   */\r\n  function handleFileWithClick() {\r\n    setFileError(false);\r\n    fileRef.current.click();\r\n  }\r\n\r\n  /**\r\n   * Given a image types, return true if the image type is valid\r\n   * @param types - The file types that are allowed.\r\n   * @returns A boolean value.\r\n   */\r\n  function isImageValid(types) {\r\n    switch (types) {\r\n      case \"image/png\":\r\n        return true;\r\n      case \"image/jpg\":\r\n        return true;\r\n      case \"image/jpeg\":\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  function validateInput() {\r\n    const data = [\r\n      {\r\n        value: keterangan.length,\r\n        name: \"keterangan\",\r\n      },\r\n      {\r\n        value: selectedImage.length,\r\n        name: \"file\",\r\n      },\r\n    ];\r\n\r\n    const valid = [];\r\n\r\n    data.forEach((items) => {\r\n      if (items.value === 0 || items.value === \"0\") {\r\n        switch (items.name) {\r\n          case \"keterangan\":\r\n            setErrKeterangan(true);\r\n            break;\r\n          case \"file\":\r\n            setErrFile(true);\r\n            break;\r\n          default:\r\n          //\r\n        }\r\n        valid.push(false);\r\n      } else {\r\n        valid.push(true);\r\n      }\r\n    });\r\n\r\n    return valid.includes(false) ? false : true;\r\n  }\r\n\r\n  /**\r\n   * It takes the form data,\r\n   * converts it to a JSON string, and then sends it to the server\r\n   */\r\n  function handleSend(evt) {\r\n    evt.preventDefault();\r\n    if (validateInput()) {\r\n      const data = {\r\n        keterangan: keterangan,\r\n      };\r\n      setLoading(true);\r\n      const payload = new FormData();\r\n      payload.append(\"body\", JSON.stringify(data));\r\n      payload.append(\"file\", selectedImage[0]);\r\n\r\n      fetch(`${base_url}/image/banner/save`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.token}`,\r\n        },\r\n        method: \"POST\",\r\n        body: payload,\r\n      })\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((res) => {\r\n          setPreview(false);\r\n          setLoading(false);\r\n          console.log(res);\r\n          history.push({ pathname: \"/admin/image/list\" });\r\n        })\r\n        .catch((err) => {\r\n          setLoading(false);\r\n          console.warn(err);\r\n        });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * It takes a file object as an argument, and then calls a function that sets the preview value to the\r\n   * result of reading the file as a data URL\r\n   * @param src - The image file that you want to upload.\r\n   */\r\n  function readImage(src) {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      setPreviewValue(reader.result);\r\n    };\r\n    reader.readAsDataURL(src);\r\n  }\r\n\r\n  /**\r\n   * Reads the image file and sets the preview to true\r\n   * @param evt - The event object that contains the file.\r\n   */\r\n  function processImage(evt) {\r\n    const files = evt.target.files;\r\n    if (files.length > 0) {\r\n      const fileSize = Math.round(files[0].size / 1024);\r\n      const selectedFile = files;\r\n      // validation image\r\n      if (isImageValid(files[0].type) && fileSize < 5000) {\r\n        readImage(selectedFile[0]);\r\n        setPreview(true);\r\n        setSelectedImage(selectedFile);\r\n        setErrFile(false);\r\n      } else {\r\n        setFileError(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Upload\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <TabContent activeTab={\"1\"}>\r\n                  {/* alert */}\r\n                  <FailedAlert\r\n                    isOpen={fileError}\r\n                    title=\"Gaga\"\r\n                    message={\r\n                      \"Pastikan file yang anda upload dalam bentuk png, jpg atau jpeg, serta pastikan ukurannya kurang dari 5 MB\"\r\n                    }\r\n                  />\r\n                  <PreviewImage\r\n                    loading={loading}\r\n                    isOpen={preview}\r\n                    src={previewValue}\r\n                    merekId={\"\"}\r\n                    kategoriId={\"\"}\r\n                    subkategoriID={\"\"}\r\n                    selectedImage={selectedImage}\r\n                  />\r\n                  <CardHeader>\r\n                    <h3>Upload Banner</h3>\r\n                  </CardHeader>\r\n                  {/*  */}\r\n                  <br />\r\n                  <Form\r\n                    noValidate={true}\r\n                    action=\"\"\r\n                    onSubmit={(evt) => handleSend(evt)}\r\n                    method=\"POST\"\r\n                  >\r\n                    <FormGroup>\r\n                      <label htmlFor=\"kategori\">Keterangan*</label>\r\n                      <Input\r\n                        id=\"kategori\"\r\n                        type=\"textarea\"\r\n                        name=\"keterangan\"\r\n                        onChange={(evt) => {\r\n                          setKeterangan(evt.target.value);\r\n                          setErrKeterangan(false);\r\n                        }}\r\n                        required\r\n                      />\r\n                      <small className=\"err-text\">\r\n                        {errKeterangan ? \"Keterangan wajib diisi\" : \"\"}\r\n                      </small>\r\n                    </FormGroup>\r\n                    {/* upload image */}\r\n                    <div className=\"upload-image-container\">\r\n                      <div className=\"upload-image-canvas\">\r\n                        <h4>Upload Gambar</h4>\r\n                        <br />\r\n                        <input\r\n                          type=\"file\"\r\n                          accept=\"image/png, image/jpg, image/jpeg\"\r\n                          className=\"hide-input\"\r\n                          ref={fileRef}\r\n                          required\r\n                          onChange={(evt) => processImage(evt)}\r\n                        />\r\n                        <Button\r\n                          color=\"default\"\r\n                          type=\"button\"\r\n                          onClick={() => handleFileWithClick()}\r\n                        >\r\n                          <i className=\"ni ni-image\"></i>\r\n                          <span className=\"btn-inner--text\">\r\n                            {imageName.length > 0\r\n                              ? imageName.slice(0, 20)\r\n                              : \"Klik Disini\"}\r\n                          </span>\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                    <small className=\"err-text\">\r\n                      {errFile ? \"file wajib diupload\" : \"\"}\r\n                    </small>\r\n\r\n                    <br />\r\n                    <Button color=\"info\" size=\"lg\" type=\"submit\">\r\n                      {loading ? \"Loading...\" : \"Simpan\"}\r\n                    </Button>\r\n                    <Button\r\n                      color=\"secondary\"\r\n                      size=\"lg\"\r\n                      type=\"submit\"\r\n                      onClick={() => {\r\n                        history.goBack();\r\n                      }}\r\n                    >\r\n                      Kembali\r\n                    </Button>\r\n                  </Form>\r\n\r\n                  {/*  */}\r\n                </TabContent>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  TabContent,\r\n  Table,\r\n  CardHeader,\r\n  Col,\r\n  FormGroup,\r\n  Input,\r\n  Button,\r\n  PaginationItem,\r\n  PaginationLink,\r\n  Pagination,\r\n} from \"reactstrap\";\r\n\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport PreviewImage from \"./snippets/PreviewImage\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n//\r\nimport store from \"./snippets/redux\";\r\n\r\nconst base_url = process.env.REACT_APP_API_BASE_URL;\r\n\r\nexport default function ListImage() {\r\n  const history = useHistory();\r\n  const [amountShown, setAmountShown] = useState(10);\r\n  const [listImage, setListImage] = useState([]);\r\n\r\n  //\r\n  const [kategori, setKategori] = useState([]);\r\n  const [listFunction, setFunction] = useState([]);\r\n  const [merek, setListMerek] = useState([]);\r\n\r\n  //\r\n  const [kategoriId, setKategoriId] = useState(0);\r\n  const [functionId, setFunctionId] = useState(0);\r\n  const [selectedSrc, setSelectedSrc] = useState(\"\");\r\n  const [popupVisible, setPopupVisible] = useState(false);\r\n  const [startNav, setStartNav] = useState(0);\r\n  const [endNav, setEndNav] = useState(3);\r\n\r\n  const [nav, setNav] = useState([1]);\r\n  const [activeNav, setActiveNav] = useState(1);\r\n\r\n  const [filterCriteria, setFilterCriteria] = useState({\r\n    per_page: amountShown,\r\n    page: 1,\r\n  });\r\n\r\n  useEffect(() => {\r\n    listenEvent();\r\n    getListImage();\r\n    getKategori();\r\n  }, []);\r\n\r\n  /**\r\n   * This function is used to handle the navigation of the navbar.\r\n   */\r\n  function handleNextNav() {\r\n    const nextStart = startNav + 1;\r\n    const nextend = endNav + 1;\r\n    if (nav.slice(nextStart, nextend).length > 0) {\r\n      setStartNav(nextStart);\r\n      setEndNav(nextend);\r\n    }\r\n  }\r\n\r\n  function handlePrev() {\r\n    console.log(\"work\");\r\n    const nextStart = startNav - 1;\r\n    const nextend = endNav - 1;\r\n    if (nav.slice(nextStart, nextend).length > 0) {\r\n      setStartNav(nextStart);\r\n      setEndNav(nextend);\r\n    }\r\n  }\r\n\r\n  async function getListImage(amount = 10, page = 1) {\r\n    try {\r\n      const data = {\r\n        page: page,\r\n        per_page: amount,\r\n      };\r\n      const req = await fetch(`${base_url}/image/items`, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n      });\r\n      const res = await req.json();\r\n      if (req.status === 200 && res.response.length > 0) {\r\n        setListImage(res.response);\r\n\r\n        // create navigation button based on amount of data\r\n        const navigationList = [];\r\n        for (let i = 0; i < res.total_item / amountShown; i++) {\r\n          navigationList.push(i + 1);\r\n        }\r\n        setNav(navigationList);\r\n      } else {\r\n        setListImage([]);\r\n      }\r\n    } catch (err) {\r\n      setListImage([]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * It fetches the list of item categories from the server and stores it in the state\r\n   */\r\n  async function getKategori() {\r\n    try {\r\n      const req = await fetch(`${base_url}/item-kategori/list`);\r\n      const res = await req.json();\r\n\r\n      if (req.status === 200 && res.response.length > 0) {\r\n        setKategori(res.response);\r\n      }\r\n    } catch (err) {\r\n      //\r\n    }\r\n  }\r\n\r\n  /**\r\n   * It takes in a list of subKategoriIds and returns a list of itemFunctions\r\n   * @param subKategoriIds - The subKategoriIds is the id of the subKategori that you want to get the\r\n   * list of functions.\r\n   */\r\n  async function getListFunction(KategoriIds) {\r\n    try {\r\n      const req = await fetch(\r\n        `${base_url}/item-function/ecom?kategori_id=${KategoriIds}`\r\n      );\r\n      const res = await req.json();\r\n      if (req.status === 200 && res.response.length > 0) {\r\n        setFunction(res.response);\r\n      }\r\n    } catch (err) {}\r\n  }\r\n\r\n  /**\r\n   * It fetches the list of all the available Merek based on the selected Kategori, Sub Kategori,\r\n   * Function, and Sub Function\r\n   * @param subFunctionIds - The sub function id.\r\n   */\r\n  async function getMerek(FunctionId) {\r\n    try {\r\n      const req = await fetch(\r\n        `${base_url}/merek/ecom?kategori_id=${kategoriId}&function_id=${FunctionId}`\r\n      );\r\n      const res = await req.json();\r\n      if (req.status === 200 && res.response.length > 0) {\r\n        setListMerek(res.response);\r\n      }\r\n    } catch (err) {}\r\n  }\r\n\r\n  /**\r\n   * It fetches the list of images from the server, and then sets the list of images to the state\r\n   */\r\n  async function getByFilter() {\r\n    try {\r\n      const criteria = filterCriteria;\r\n      const req = await fetch(`${base_url}/image/items`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.token}`,\r\n        },\r\n        method: \"POST\",\r\n        body: JSON.stringify(criteria),\r\n      });\r\n\r\n      const res = await req.json();\r\n\r\n      if (req.status === 200 && res.response.length > 0) {\r\n        setListImage(res.response);\r\n      }\r\n    } catch (err) {\r\n      //\r\n    }\r\n  }\r\n\r\n  function listenEvent() {\r\n    store.subscribe(() => {\r\n      const state = store.getState();\r\n      switch (state.type) {\r\n        case \"close_preview_modal\":\r\n          setPopupVisible(false);\r\n          break;\r\n        default:\r\n        //\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * It shows a warning message, then asks the user to confirm the action. If the user confirms, it sends\r\n   * a POST request to the server to delete the image. If the request is successful, it reloads the page\r\n   * to show the updated list of images\r\n   * @param [id=0] - The id of the image you want to delete.\r\n   */\r\n  function handleDelete(id = 0) {\r\n    Swal.fire({\r\n      icon: \"warning\",\r\n      title: \"Peringatan\",\r\n      text: \"apakah anda yakin hapus data ini ?\",\r\n      showCancelButton: true,\r\n      showConfirmButton: true,\r\n    })\r\n      .then(async (res) => {\r\n        if (res.isConfirmed) {\r\n          const req = await fetch(`${base_url}/image/items/delete/${id}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.token}`,\r\n            },\r\n            method: \"POST\",\r\n          });\r\n\r\n          if (req.status === 200) {\r\n            getListImage(amountShown, activeNav);\r\n            Swal.fire({\r\n              icon: \"success\",\r\n              title: \"Berhasil\",\r\n              text: \"Data berhasil dihapus\",\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              icon: \"error\",\r\n              title: \"Gagal\",\r\n              text: \"Silahkan coba beberapa saat lagi\",\r\n            });\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Gagal\",\r\n          text: \"Silahkan coba beberapa saat lagi\",\r\n        });\r\n        console.warn(err);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TabContent activeTab={\"1\"} className=\"table-container\">\r\n        <CardHeader>\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <h3>Image</h3>\r\n            <div style={{ textAlign: \"right\" }}>\r\n              <Link\r\n                className=\"btn btn-info\"\r\n                to={{ pathname: \"/admin/image/upload\" }}\r\n              >\r\n                Add\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </CardHeader>\r\n        {/* preview */}\r\n        <PreviewImage page={\"list\"} src={selectedSrc} isOpen={popupVisible} />\r\n        {/* filter */}\r\n        <br />\r\n        <Row className=\"table\">\r\n          <Col>\r\n            <FormGroup>\r\n              <label htmlFor=\"kategori\">Kategori</label>\r\n              <Input\r\n                id=\"kategori\"\r\n                type=\"select\"\r\n                onChange={(evt) => {\r\n                  filterCriteria.kategori_id = evt.target.value;\r\n                  setKategoriId(evt.target.value);\r\n                  getListFunction(evt.target.value);\r\n                  getByFilter();\r\n                }}\r\n              >\r\n                <option value=\"-\">-</option>\r\n                {kategori.map((items, i) => (\r\n                  <option value={items.id} key={i}>\r\n                    {items.name}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col>\r\n            <FormGroup>\r\n              <label htmlFor=\"function\">Function</label>\r\n              <Input\r\n                id=\"function\"\r\n                onChange={(evt) => {\r\n                  filterCriteria.function_id = evt.target.value;\r\n                  setFunctionId(evt.target.value);\r\n                  getMerek(evt.target.value);\r\n                  getByFilter();\r\n                }}\r\n                type=\"select\"\r\n              >\r\n                <option value=\"-\">-</option>\r\n                {listFunction.map((items, i) => (\r\n                  <option value={items.id} key={i}>\r\n                    {items.name}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col>\r\n            <FormGroup>\r\n              <label htmlFor=\"merek\">Merek</label>\r\n              <Input\r\n                id=\"merek\"\r\n                type=\"select\"\r\n                onChange={(evt) => {\r\n                  filterCriteria.merek_id = evt.target.value;\r\n                  getByFilter();\r\n                }}\r\n              >\r\n                <option value=\"-\">-</option>\r\n                {merek.map((items, i) => (\r\n                  <option value={items.id} key={i}>\r\n                    {items.name}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        {/*  */}\r\n        <Table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Merek</th>\r\n              <th>Kategori</th>\r\n              <th>Function Name</th>\r\n              <th>Tampilan</th>\r\n              <th>Aksi</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {listImage.map((items, i) => (\r\n              <tr key={i}>\r\n                <td>{(i + 1) + ((activeNav - 1) * amountShown)}</td>\r\n                <td>{items.merek_name}</td>\r\n                <td>{items.kategori_name}</td>\r\n                <td>{items.function_name}</td>\r\n                <td>\r\n                  <Button\r\n                    onClick={() => {\r\n                      setPopupVisible(true);\r\n                      setSelectedSrc(items.image_url);\r\n                    }}\r\n                    color=\"primary\"\r\n                    size=\"sm\"\r\n                    type=\"button\"\r\n                  >\r\n                    Lihat Gambar\r\n                  </Button>\r\n                </td>\r\n                <td>\r\n                  <Button\r\n                    onClick={() => {\r\n                      history.push({\r\n                        pathname: `/admin/image/update/${items.id}`,\r\n                      });\r\n                    }}\r\n                    color=\"warning\"\r\n                    size=\"sm\"\r\n                    type=\"button\"\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n                  <Button\r\n                    onClick={() => handleDelete(items.id)}\r\n                    color=\"danger\"\r\n                    size=\"sm\"\r\n                    type=\"button\"\r\n                  >\r\n                    Hapus\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n        {/* filter */}\r\n        <div className=\"filter-page\">\r\n          <div className=\"section-1\">\r\n            <span>Show</span>\r\n            <select\r\n              className=\"filter-select\"\r\n              onChange={(evt) => {\r\n                setAmountShown(parseInt(evt.target.value));\r\n                getListImage(parseInt(evt.target.value), activeNav);\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n            <span>\r\n              {\" \"}\r\n              entries. Showing rows 1 to {listImage.length} of {amountShown}\r\n            </span>\r\n          </div>\r\n          <div className=\"section-2\">\r\n            <nav aria-label=\"...\">\r\n              <Pagination>\r\n                <PaginationItem className={startNav < 1 ? \"disabled\" : \"\"}>\r\n                  <PaginationLink\r\n                    href=\"#pablo\"\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      handlePrev();\r\n                    }}\r\n                    tabIndex=\"-1\"\r\n                  >\r\n                    <i className=\"fa fa-angle-left\" />\r\n                    <span className=\"sr-only\">Previous</span>\r\n                  </PaginationLink>\r\n                </PaginationItem>\r\n\r\n                {nav.slice(startNav, endNav).map((items, i) => (\r\n                  <PaginationItem\r\n                    className={activeNav === items ? \"active\" : \"\"}\r\n                    key={i}\r\n                  >\r\n                    <PaginationLink\r\n                      href=\"#pablo\"\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveNav(items);\r\n                        getListImage(amountShown, items);\r\n                      }}\r\n                    >\r\n                      {items}\r\n                    </PaginationLink>\r\n                  </PaginationItem>\r\n                ))}\r\n                <PaginationItem\r\n                  className={endNav > nav.length ? \"disabled\" : \"\"}\r\n                >\r\n                  <PaginationLink\r\n                    href=\"#pablo\"\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      handleNextNav();\r\n                    }}\r\n                  >\r\n                    <i className=\"fa fa-angle-right\" />\r\n                    <span className=\"sr-only\">Next</span>\r\n                  </PaginationLink>\r\n                </PaginationItem>\r\n              </Pagination>\r\n            </nav>\r\n          </div>\r\n        </div>\r\n        {/*  */}\r\n      </TabContent>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  TabContent,\r\n  Table,\r\n  CardHeader,\r\n  Col,\r\n  PaginationItem,\r\n  PaginationLink,\r\n  Button,\r\n  Pagination,\r\n} from \"reactstrap\";\r\n\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport PreviewImage from \"./snippets/PreviewImage\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n// state management\r\nimport store from \"./snippets/redux\";\r\n\r\nconst base_url = process.env.REACT_APP_API_BASE_URL;\r\n\r\nexport default function ListBanner() {\r\n  const history = useHistory();\r\n\r\n  const [amountShown, setAmountShown] = useState(10);\r\n  const [listImage, setListImage] = useState([]);\r\n  const [selectedSrc, setSelectedSrc] = useState(\"\");\r\n  const [popupVisible, setPopupVisible] = useState(false);\r\n\r\n  const [nav, setNav] = useState([1]);\r\n  const [activeNav, setActiveNav] = useState(1);\r\n  const [startNav, setStartNav] = useState(0);\r\n  const [endNav, setEndNav] = useState(3);\r\n\r\n  //\r\n  const [selectedKeterangan, setKeterangan] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    listenEvent();\r\n    getListImage();\r\n  }, []);\r\n  /**\r\n   * It takes a parameter of\r\n   * `amount` which is the number of images you want to display, and a list of\r\n   * `images` which is the list of images you want to display\r\n   * @param [amount=10] - The amount of images to be fetched.\r\n   */\r\n  async function getListImage(amount = 10, page = 1) {\r\n    try {\r\n      const data = {\r\n        page: page,\r\n        per_page: amount,\r\n      };\r\n      const req = await fetch(`${base_url}/image/banner`, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n      });\r\n      const res = await req.json();\r\n      if (req.status === 200 && res.response.length > 0) {\r\n        setListImage(res.response);\r\n\r\n        // create navigation button based on amount of data\r\n        const navigationList = [];\r\n        for (let i = 0; i < res.total_item / amountShown; i++) {\r\n          navigationList.push(i + 1);\r\n        }\r\n        setNav(navigationList);\r\n      } else {\r\n        setListImage([]);\r\n      }\r\n    } catch (err) {\r\n      setListImage([]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * It listens to the store's state changes and changes the state of the popup accordingly\r\n   */\r\n  function listenEvent() {\r\n    store.subscribe(() => {\r\n      const state = store.getState();\r\n      switch (state.type) {\r\n        case \"close_preview_modal\":\r\n          setPopupVisible(false);\r\n          break;\r\n        default:\r\n        //\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * It shows a warning message, then asks the user to confirm the action. If the user confirms, it sends\r\n   * a POST request to the server to delete the image. If the request is successful, it reloads the page\r\n   * to show the updated list of images\r\n   * @param [id=0] - The id of the image you want to delete.\r\n   */\r\n  function handleDelete(id = 0) {\r\n    Swal.fire({\r\n      icon: \"warning\",\r\n      title: \"Peringatan\",\r\n      text: \"apakah anda yakin hapus data ini ?\",\r\n      showCancelButton: true,\r\n      showConfirmButton: true,\r\n    })\r\n      .then(async (res) => {\r\n        if (res.isConfirmed) {\r\n          const req = await fetch(`${base_url}/image/banner/delete/${id}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.token}`,\r\n            },\r\n            method: \"POST\",\r\n          });\r\n          const res = await req.json();\r\n\r\n          if (req.status === 200) {\r\n            getListImage(amountShown, activeNav);\r\n            Swal.fire({\r\n              icon: \"success\",\r\n              title: \"Berhasil\",\r\n              text: \"Data berhasil dihapus\",\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              icon: \"error\",\r\n              title: \"Gagal\",\r\n              text: \"Silahkan coba beberapa saat lagi\",\r\n            });\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Gagal\",\r\n          text: \"Silahkan coba beberapa saat lagi\",\r\n        });\r\n        console.warn(err);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * This function is used to handle the navigation of the navbar.\r\n   */\r\n  function handleNextNav() {\r\n    const nextStart = startNav + 1;\r\n    const nextend = endNav + 1;\r\n    if (nav.slice(nextStart, nextend).length > 0) {\r\n      setStartNav(nextStart);\r\n      setEndNav(nextend);\r\n    }\r\n  }\r\n\r\n  function handlePrev() {\r\n    console.log(\"work\");\r\n    const nextStart = startNav - 1;\r\n    const nextend = endNav - 1;\r\n    if (nav.slice(nextStart, nextend).length > 0) {\r\n      setStartNav(nextStart);\r\n      setEndNav(nextend);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TabContent activeTab={\"1\"} className=\"table-container\">\r\n        <CardHeader>\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <h3>Banner</h3>\r\n            <div style={{ textAlign: \"right\" }}>\r\n              <Link\r\n                className=\"btn btn-info\"\r\n                to={{ pathname: \"/admin/banner/upload\" }}\r\n              >\r\n                Add\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </CardHeader>\r\n        {/* preview */}\r\n        <PreviewImage\r\n          detail={true}\r\n          keterangan={selectedKeterangan}\r\n          page={\"list\"}\r\n          src={selectedSrc}\r\n          isOpen={popupVisible}\r\n        />\r\n        {/* filter */}\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <Table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Keterangan</th>\r\n                  <th>Tampilan</th>\r\n                  <th>Aksi</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {listImage.map((items, i) => (\r\n                  <tr key={i}>\r\n                    <td>{(i + 1) + ((activeNav - 1) * amountShown)}</td>\r\n                    <td>{items.keterangan.slice(0, 50)}</td>\r\n                    <td>\r\n                      <Button\r\n                        onClick={() => {\r\n                          setPopupVisible(true);\r\n                          setSelectedSrc(items.image_url);\r\n                          setKeterangan(items.keterangan);\r\n                        }}\r\n                        color=\"primary\"\r\n                        size=\"sm\"\r\n                        type=\"button\"\r\n                      >\r\n                        Lihat Detail\r\n                      </Button>\r\n                    </td>\r\n                    <td>\r\n                      <Button\r\n                        onClick={() =>\r\n                          history.push({\r\n                            pathname: `/admin/image/banner/update/${items.id}`,\r\n                          })\r\n                        }\r\n                        color=\"warning\"\r\n                        size=\"sm\"\r\n                        type=\"button\"\r\n                      >\r\n                        Edit\r\n                      </Button>\r\n                      <Button\r\n                        onClick={() => handleDelete(items.id)}\r\n                        color=\"danger\"\r\n                        size=\"sm\"\r\n                        type=\"button\"\r\n                      >\r\n                        Hapus\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n        </Row>\r\n        {/* filter */}\r\n        <div className=\"filter-page\">\r\n          <div className=\"section-1\">\r\n            <span>Show</span>\r\n            <select\r\n              className=\"filter-select\"\r\n              onChange={(evt) => {\r\n                setAmountShown(parseInt(evt.target.value));\r\n                getListImage(parseInt(evt.target.value), activeNav);\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n            <span>\r\n              {\" \"}\r\n              entries. Showing rows 1 to {listImage.length} of {amountShown}\r\n            </span>\r\n          </div>\r\n          <div className=\"section-2\">\r\n            <nav aria-label=\"...\">\r\n              <Pagination>\r\n                <PaginationItem className={startNav < 1 ? \"disabled\" : \"\"}>\r\n                  <PaginationLink\r\n                    href=\"#pablo\"\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      handlePrev();\r\n                    }}\r\n                    tabIndex=\"-1\"\r\n                  >\r\n                    <i className=\"fa fa-angle-left\" />\r\n                    <span className=\"sr-only\">Previous</span>\r\n                  </PaginationLink>\r\n                </PaginationItem>\r\n\r\n                {nav.map((items, i) => (\r\n                  <PaginationItem\r\n                    className={activeNav === items ? \"active\" : \"\"}\r\n                    key={i}\r\n                  >\r\n                    <PaginationLink\r\n                      href=\"#pablo\"\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveNav(items);\r\n                        getListImage(amountShown, items);\r\n                      }}\r\n                    >\r\n                      {items}\r\n                    </PaginationLink>\r\n                  </PaginationItem>\r\n                ))}\r\n                <PaginationItem\r\n                  className={endNav > nav.length ? \"disabled\" : \"\"}\r\n                >\r\n                  <PaginationLink\r\n                    href=\"#pablo\"\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      handleNextNav();\r\n                    }}\r\n                  >\r\n                    <i className=\"fa fa-angle-right\" />\r\n                    <span className=\"sr-only\">Next</span>\r\n                  </PaginationLink>\r\n                </PaginationItem>\r\n              </Pagination>\r\n            </nav>\r\n          </div>\r\n        </div>\r\n        {/*  */}\r\n      </TabContent>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  TabContent,\r\n  Table,\r\n  CardHeader,\r\n  Col,\r\n  PaginationItem,\r\n  PaginationLink,\r\n  Button,\r\n  Pagination,\r\n  FormGroup,\r\n  Input,\r\n} from \"reactstrap\";\r\n\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport PreviewImage from \"./snippets/PreviewImage\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n// state management\r\nimport store from \"./snippets/redux\";\r\nimport axios from \"axios\";\r\n\r\nconst base_url = process.env.REACT_APP_API_BASE_URL;\r\n\r\nexport default function ListImageItem() {\r\n  const history = useHistory();\r\n\r\n  const [amountShown, setAmountShown] = useState(10);\r\n  const [listImage, setListImage] = useState([]);\r\n  const [selectedSrc, setSelectedSrc] = useState(\"\");\r\n  const [tipeMaterial, setTipeMaterial] = useState(\"1\");\r\n  const [kodeItem, setKodeItem] = useState(\"\");\r\n  const [popupVisible, setPopupVisible] = useState(false);\r\n  const [detailData, setDetailData] = useState([]);\r\n  const [alias, setAlias] = useState({});\r\n  const [itemName, setItemName] = useState(\"\")\r\n\r\n  const [nav, setNav] = useState([1]);\r\n  const [activeNav, setActiveNav] = useState(1);\r\n  const [startNav, setStartNav] = useState(0);\r\n  const [endNav, setEndNav] = useState(3);\r\n\r\n  //\r\n  const [selectedKeterangan, setKeterangan] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    listenEvent();\r\n    getListImage();\r\n  }, []);\r\n\r\n  function getDetail(id) {\r\n    axios\r\n      .get(`${base_url}/items/${id}`)\r\n      .then((res) => {\r\n        setSelectedSrc(res.data.response.items.image_url);\r\n        setDetailData({\r\n          kode_item: res.data.response.items.item_code,\r\n          nama_item: res.data.response.items.item_name,\r\n        });\r\n        setAlias({\r\n          kode_item: \"KODE ITEM\",\r\n          nama_item: \"NAMA ITEM\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.warn(err);\r\n      });\r\n  }\r\n  /**\r\n   * It takes a parameter of\r\n   * `amount` which is the number of images you want to display, and a list of\r\n   * `images` which is the list of images you want to display\r\n   * @param [amount=10] - The amount of images to be fetched.\r\n   */\r\n  async function getListImage(amount = 10, page = 1, type = 1, kodeItem = \"\") {\r\n    const payload = {\r\n      page: page,\r\n      per_page: amount,\r\n      warehouse_id: parseInt(localStorage.warehouse),\r\n      type: type,\r\n      item_name: itemName,\r\n      item_code: kodeItem,\r\n    };\r\n\r\n    // terpaksa menggunakan fech karena axios tidak mau return data\r\n    const req = await fetch(`${base_url}/items`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(payload),\r\n    });\r\n    const res = await req.json();\r\n\r\n    setListImage(res.response);\r\n    // create navigation button based on amount of data\r\n    const navigationList = [];\r\n    for (let i = 0; i < res.total_item / amountShown; i++) {\r\n      navigationList.push(i + 1);\r\n    }\r\n    setNav(navigationList);\r\n  }\r\n\r\n  let cancelToken;\r\n  async function getByItemName(itemname = \"\") {\r\n    try {\r\n      if (typeof cancelToken !== typeof undefined) {\r\n        cancelToken.cancel(\"membatalkan request sebelumnya\");\r\n      }\r\n\r\n      cancelToken = axios.CancelToken.source();\r\n\r\n      const data = {\r\n        page: parseInt(activeNav),\r\n        per_page: parseInt(amountShown),\r\n        item_name: itemname,\r\n        item_code: \"\",\r\n        type: parseInt(tipeMaterial),\r\n      };\r\n\r\n      const req = await axios.post(\r\n        `${base_url}/items`,\r\n        JSON.stringify(data, true),\r\n        {\r\n          cancelToken: cancelToken.token,\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      const res = await req.data;\r\n      setListImage(res.response);\r\n    } catch (err) {\r\n      console.warn(err);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * It listens to the store's state changes and changes the state of the popup accordingly\r\n   */\r\n  function listenEvent() {\r\n    store.subscribe(() => {\r\n      const state = store.getState();\r\n      switch (state.type) {\r\n        case \"close_preview_modal\":\r\n          setPopupVisible(false);\r\n          break;\r\n        default:\r\n        //\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * It shows a warning message, then asks the user to confirm the action. If the user confirms, it sends\r\n   * a POST request to the server to delete the image. If the request is successful, it reloads the page\r\n   * to show the updated list of images\r\n   * @param [id=0] - The id of the image you want to delete.\r\n   */\r\n  function handleDelete(id = 0) {\r\n    Swal.fire({\r\n      icon: \"warning\",\r\n      title: \"Peringatan\",\r\n      text: \"apakah anda yakin hapus data ini ?\",\r\n      showCancelButton: true,\r\n      showConfirmButton: true,\r\n    })\r\n      .then(async (res) => {\r\n        if (res.isConfirmed) {\r\n          const req = await fetch(`${base_url}/image/banner/delete/${id}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.token}`,\r\n            },\r\n            method: \"POST\",\r\n          });\r\n          const res = await req.json();\r\n\r\n          if (req.status === 200) {\r\n            getListImage(amountShown, activeNav);\r\n            Swal.fire({\r\n              icon: \"success\",\r\n              title: \"Berhasil\",\r\n              text: \"Data berhasil dihapus\",\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              icon: \"error\",\r\n              title: \"Gagal\",\r\n              text: \"Silahkan coba beberapa saat lagi\",\r\n            });\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Gagal\",\r\n          text: \"Silahkan coba beberapa saat lagi\",\r\n        });\r\n      });\r\n  }\r\n\r\n  /**\r\n   * This function is used to handle the navigation of the navbar.\r\n   */\r\n  function handleNextNav() {\r\n    const nextStart = startNav + 1;\r\n    const nextend = endNav + 1;\r\n    if (nav.slice(nextStart, nextend).length > 0) {\r\n      setStartNav(nextStart);\r\n      setEndNav(nextend);\r\n    }\r\n  }\r\n\r\n  function handlePrev() {\r\n    console.log(\"work\");\r\n    const nextStart = startNav - 1;\r\n    const nextend = endNav - 1;\r\n    if (nav.slice(nextStart, nextend).length > 0) {\r\n      setStartNav(nextStart);\r\n      setEndNav(nextend);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TabContent activeTab={\"1\"} className=\"table-container\">\r\n        <CardHeader>\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <h3>Item Image</h3>\r\n            <div style={{ textAlign: \"right\" }}></div>\r\n          </div>\r\n        </CardHeader>\r\n        {/* preview */}\r\n        <PreviewImage\r\n          detail={true}\r\n          keterangan={selectedKeterangan}\r\n          page={\"image-items\"}\r\n          src={selectedSrc}\r\n          isOpen={popupVisible}\r\n          ObjectData={detailData}\r\n          alias={alias}\r\n        />\r\n        {/* filter */}\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <div className=\"flex-container\">\r\n              <FormGroup>\r\n                <br />\r\n                <label htmlFor=\"tipeitem\" className=\"form-control-label\">\r\n                  Tipe Item\r\n                </label>\r\n                <Input\r\n                  type=\"select\"\r\n                  id=\"tipeitem\"\r\n                  onChange={(evt) => {\r\n                    setTipeMaterial(evt.target.value);\r\n                    getListImage(amountShown, activeNav, evt.target.value);\r\n                  }}\r\n                >\r\n                  <option value=\"1\">Item Material</option>\r\n                  <option value=\"2\">Item Production</option>\r\n                </Input>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <br />\r\n                <label htmlFor=\"query\" className=\"form-control-label\">\r\n                  Nama Item\r\n                </label>\r\n                <Input\r\n                  onChange={(evt) =>{getByItemName(evt.target.value); setItemName(evt.target.value)}}\r\n                  type=\"text\"\r\n                  id=\"query\"\r\n                  placeholder=\"Masukan nama item\"\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <br />\r\n                <label htmlFor=\"query\" className=\"form-control-label\">\r\n                  Kode Item\r\n                </label>\r\n                <Input\r\n                  onChange={(evt) => {\r\n                    setKodeItem(evt.target.value);\r\n                    getListImage(\r\n                      amountShown,\r\n                      activeNav,\r\n                      tipeMaterial,\r\n                      evt.target.value\r\n                    );\r\n                  }}\r\n                  type=\"text\"\r\n                  id=\"query\"\r\n                  placeholder=\"Masukan kode Item\"\r\n                />\r\n              </FormGroup>\r\n            </div>\r\n            <Table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Nama Item</th>\r\n                  <th>Kode Item</th>\r\n                  <th>Aksi</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {listImage.map((items, i) => (\r\n                  <tr key={i}>\r\n                    <td>{(i + 1) + ((activeNav - 1) * amountShown)}</td>\r\n                    <td>{items.item_name}</td>\r\n                    <td>{items.item_code}</td>\r\n                    <td>\r\n                      <Button\r\n                        onClick={() => {\r\n                          setPopupVisible(true);\r\n                          setSelectedSrc(items.image_url);\r\n                          setKeterangan(items.keterangan);\r\n                          getDetail(items.id);\r\n                        }}\r\n                        color=\"primary\"\r\n                        size=\"sm\"\r\n                        type=\"button\"\r\n                      >\r\n                        Preview\r\n                      </Button>\r\n                      <Button\r\n                        onClick={() =>\r\n                          history.push({\r\n                            pathname: `/admin/image/item/update/${items.id}`,\r\n                          })\r\n                        }\r\n                        color=\"warning\"\r\n                        size=\"sm\"\r\n                        type=\"button\"\r\n                      >\r\n                        <i className=\"ni ni-image\"></i>\r\n                        <span>Masukan Gambar</span>\r\n                      </Button>\r\n                      {/* <Button\r\n                        onClick={() => handleDelete(items.id)}\r\n                        color=\"danger\"\r\n                        size=\"sm\"\r\n                        type=\"button\"\r\n                      >\r\n                        Hapus\r\n                      </Button> */}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n        </Row>\r\n        {/* filter */}\r\n        <div className=\"filter-page\">\r\n          <div className=\"section-1\">\r\n            <span>Show</span>\r\n            <select\r\n              className=\"filter-select\"\r\n              onChange={(evt) => {\r\n                setAmountShown(parseInt(evt.target.value));\r\n                getListImage(\r\n                  parseInt(evt.target.value),\r\n                  activeNav,\r\n                  tipeMaterial\r\n                );\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n            <span>\r\n              {\" \"}\r\n              entries. Showing rows 1 to {listImage.length} of {amountShown}\r\n            </span>\r\n          </div>\r\n          <div className=\"section-2\">\r\n            <nav aria-label=\"...\">\r\n              <Pagination>\r\n                <PaginationItem className={startNav < 1 ? \"disabled\" : \"\"}>\r\n                  <PaginationLink\r\n                    href=\"#pablo\"\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      handlePrev();\r\n                    }}\r\n                  >\r\n                    <i className=\"fa fa-angle-left\" />\r\n                    <span className=\"sr-only\">Previous</span>\r\n                  </PaginationLink>\r\n                </PaginationItem>\r\n\r\n                {nav.slice(startNav, endNav).map((items, i) => (\r\n                  <PaginationItem\r\n                    className={activeNav === items ? \"active\" : \"\"}\r\n                    key={i}\r\n                  >\r\n                    <PaginationLink\r\n                      href=\"#pablo\"\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveNav(items);\r\n                        getListImage(amountShown, items, tipeMaterial);\r\n                      }}\r\n                    >\r\n                      {items}\r\n                    </PaginationLink>\r\n                  </PaginationItem>\r\n                ))}\r\n                <PaginationItem\r\n                  className={endNav > nav.length ? \"disabled\" : \"\"}\r\n                >\r\n                  <PaginationLink\r\n                    href=\"#pablo\"\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      handleNextNav();\r\n                    }}\r\n                  >\r\n                    <i className=\"fa fa-angle-right\" />\r\n                    <span className=\"sr-only\">Next</span>\r\n                  </PaginationLink>\r\n                </PaginationItem>\r\n              </Pagination>\r\n            </nav>\r\n          </div>\r\n        </div>\r\n        {/*  */}\r\n      </TabContent>\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  TabContent,\r\n  CardHeader,\r\n  Row,\r\n  Card,\r\n  CardBody,\r\n  Container,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Col,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\n\r\nconst base_url = process.env.REACT_APP_API_BASE_URL;\r\n\r\nexport default function Update() {\r\n  const history = useHistory();\r\n  const params = useParams();\r\n\r\n  //\r\n  const hariRef = useRef(null);\r\n\r\n  const [nama, setName] = useState(\"\");\r\n  const [keterangan, setKeterangan] = useState(\"\");\r\n  const [hari, setHari] = useState(\"0\");\r\n  const [durasi, setDurasi] = useState(0);\r\n\r\n  // error\r\n  const [errNama, setErrNama] = useState(false);\r\n  const [errKet, setErrKeterangan] = useState(false);\r\n  const [errHari, setErrHari] = useState(false);\r\n  const [errDurasi, setErrDurasi] = useState(false);\r\n\r\n  //\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    showDetail(params.id);\r\n  }, [params.id]);\r\n  async function showDetail(id) {\r\n    try {\r\n      const req = await fetch(`${base_url}/jwkredit/${id}`);\r\n      const res = await req.json();\r\n\r\n      if (res.status === 200) {\r\n        const { name, keterangan, hari, durasi } = res.response;\r\n        setHari(hari);\r\n        setDurasi(parseInt(durasi));\r\n        setName(name);\r\n        setKeterangan(keterangan);\r\n      }\r\n    } catch (err) {}\r\n  }\r\n\r\n  /**\r\n   * -   If the length of the input is 0, then the input is invalid.\r\n   * -   If the length of the input is not 0, then the input is valid\r\n   * @returns The value of the return is the value of the function.\r\n   */\r\n  function isValid() {\r\n    const data = [\r\n      {\r\n        value: nama.length,\r\n        name: \"nama\",\r\n      },\r\n      {\r\n        value: keterangan.length,\r\n        name: \"keterangan\",\r\n      },\r\n      {\r\n        value: hari.length,\r\n        name: \"hari\",\r\n      },\r\n      {\r\n        value: durasi.length,\r\n        name: \"durasi\",\r\n      },\r\n    ];\r\n\r\n    const valid = [];\r\n\r\n    data.forEach((items) => {\r\n      if (items.value === 0 || items.value === \"0\") {\r\n        switch (items.name) {\r\n          case \"nama\":\r\n            setErrNama(true);\r\n            break;\r\n          case \"keterangan\":\r\n            setErrKeterangan(true);\r\n            break;\r\n          case \"hari\":\r\n            setErrHari(true);\r\n            break;\r\n          case \"durasi\":\r\n            setErrDurasi(true);\r\n            break;\r\n          default:\r\n          //\r\n        }\r\n        valid.push(false);\r\n      } else {\r\n        valid.push(true);\r\n      }\r\n    });\r\n\r\n    return valid.includes(false) ? false : true;\r\n  }\r\n\r\n  /**\r\n   * It takes the form data, checks if it's valid, and if it is, it sends a POST request to the server\r\n   * with the form data\r\n   * @param evt - The event object that was triggered.\r\n   */\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    if (isValid()) {\r\n      setLoading(true);\r\n      const payload = {\r\n        name: nama,\r\n        keterangan: keterangan,\r\n        hari: hari,\r\n        durasi: durasi,\r\n      };\r\n      fetch(`${base_url}/jwkredit/update/${params.id}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.token}`,\r\n        },\r\n        body: JSON.stringify(payload),\r\n      })\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((res) => {\r\n          setLoading(false);\r\n          if (res.status === 200) {\r\n            history.push({ pathname: \"/admin/jangka-waktu/list\" });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.warn(err);\r\n          setLoading(false);\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Jangka Waktu\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <TabContent activeTab={\"1\"}>\r\n                  {/* header */}\r\n                  <CardHeader>\r\n                    <h3>Update Jangka Waktu</h3>\r\n                  </CardHeader>\r\n\r\n                  {/* body */}\r\n                  <br />\r\n                  <Row>\r\n                    <Col>\r\n                      <Form\r\n                        action=\"\"\r\n                        method=\"POST\"\r\n                        onSubmit={(evt) => handleSubmit(evt)}\r\n                      >\r\n                        <FormGroup>\r\n                          <label className=\"form-control-label\" htmlFor=\"nama\">\r\n                            Nama*\r\n                          </label>\r\n                          <Input\r\n                            defaultValue={nama}\r\n                            type=\"text\"\r\n                            placeholder=\"Masukan nama\"\r\n                            id=\"nama\"\r\n                            onChange={(evt) => {\r\n                              setErrNama(false);\r\n                              setName(evt.target.value);\r\n                            }}\r\n                          />\r\n                          <small className=\"err-text\">\r\n                            {errNama ? \"Nama wajib diisi\" : \"\"}\r\n                          </small>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <label\r\n                            className=\"form-control-label\"\r\n                            htmlFor=\"keterangan\"\r\n                          >\r\n                            Keterangan*\r\n                          </label>\r\n                          <Input\r\n                            defaultValue={keterangan}\r\n                            type=\"textarea\"\r\n                            placeholder=\"Keterangan\"\r\n                            id=\"keterangan\"\r\n                            onChange={(evt) => {\r\n                              setErrKeterangan(false);\r\n                              setKeterangan(evt.target.value);\r\n                            }}\r\n                          />\r\n                          <small className=\"err-text\">\r\n                            {errKet ? \"Keterangan wajib diisi\" : \"\"}\r\n                          </small>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <label className=\"form-control-label\" htmlFor=\"hari\">\r\n                            Hari*\r\n                          </label>\r\n                          <Input\r\n                            type=\"number\"\r\n                            placeholder=\"Contoh : 10,20,30\"\r\n                            id=\"hari\"\r\n                            defaultValue={\r\n                              parseInt(hari) > 0 ? parseInt(hari) : \"\"\r\n                            }\r\n                            ref={hariRef}\r\n                            onChange={(evt) => {\r\n                              setErrHari(false);\r\n                              setHari(evt.target.value);\r\n                            }}\r\n                          />\r\n                          <small className=\"err-text\">\r\n                            {errHari ? \"Hari wajib diisi\" : \"\"}\r\n                          </small>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <label\r\n                            className=\"form-control-label\"\r\n                            htmlFor=\"durasi\"\r\n                          >\r\n                            Durasi*\r\n                          </label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            placeholder=\"contoh : 10\"\r\n                            id=\"durasi\"\r\n                            defaultValue={durasi > 0 ? durasi : \"\"}\r\n                            onChange={(evt) => {\r\n                              setErrDurasi(false);\r\n                              setDurasi(evt.target.value);\r\n                            }}\r\n                          />\r\n                          <small className=\"err-text\">\r\n                            {errDurasi ? \"Durasi wajib diisi\" : \"\"}\r\n                          </small>\r\n                        </FormGroup>\r\n                        <Button color=\"info\" type=\"submit\">\r\n                          {loading ? \"Loading...\" : \"Simpan\"}\r\n                        </Button>\r\n                        <Button\r\n                          color=\"secondary\"\r\n                          type=\"button\"\r\n                          onClick={() => {\r\n                            history.goBack();\r\n                          }}\r\n                        >\r\n                          Kembali\r\n                        </Button>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                  {/*  */}\r\n                </TabContent>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import { createStore } from \"redux\";\r\n\r\nconst store = createStore((state, action) => {\r\n  return action;\r\n});\r\n\r\nexport default store;\r\n","import { Modal, Button } from \"reactstrap\";\r\nimport store from \"../redux\";\r\n\r\nexport default function Preview({ nama, hari, durasi, keterangan, visible }) {\r\n  /**\r\n   * It closes the detail modal\r\n   */\r\n  function closeDetail() {\r\n    store.dispatch({\r\n      type: \"close_preview_modal\",\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        className=\"modal-dialog-centered\"\r\n        isOpen={visible}\r\n        // toggle={() => this.toggleModal(\"exampleModal\")}\r\n      >\r\n        <div className=\"modal-header\">\r\n          <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n            Detail\r\n          </h5>\r\n          <button\r\n            aria-label=\"Close\"\r\n            className=\"close\"\r\n            data-dismiss=\"modal\"\r\n            type=\"button\"\r\n            onClick={() => closeDetail()}\r\n          >\r\n            <span aria-hidden={true}>×</span>\r\n          </button>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          <label className=\"form-control-label\" htmlFor=\"nama\">\r\n            Nama\r\n          </label>\r\n          <span style={{ display: \"block\" }}>{nama}</span>\r\n          <br />\r\n          <label className=\"form-control-label\" htmlFor=\"nama\">\r\n            Hari\r\n          </label>\r\n          <span style={{ display: \"block\" }}>{hari}</span>\r\n          <br />\r\n          <label className=\"form-control-label\" htmlFor=\"nama\">\r\n            Durasi\r\n          </label>\r\n          <span style={{ display: \"block\" }}>{durasi}</span>\r\n          <br />\r\n          <label className=\"form-control-label\" htmlFor=\"nama\">\r\n            Keterangan\r\n          </label>\r\n          <p style={{ display: \"block\" }}>{keterangan}</p>\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <Button\r\n            color=\"info\"\r\n            block\r\n            type=\"button\"\r\n            onClick={() => closeDetail()}\r\n          >\r\n            Tutup\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  CardBody,\r\n  TabContent,\r\n  CardHeader,\r\n  Table,\r\n  Button,\r\n  Pagination,\r\n  PaginationLink,\r\n  PaginationItem,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport Preview from \"../snippets/Preview\";\r\n\r\n// state management\r\nimport { useEffect, useState } from \"react\";\r\nimport store from \"../snippets/redux\";\r\n\r\nconst base_url = process.env.REACT_APP_API_BASE_URL;\r\nexport default function MainJangka() {\r\n  const history = useHistory();\r\n  const [listData, setListData] = useState([]);\r\n\r\n  // navigation\r\n  const [amountShown, setAmountShown] = useState(10);\r\n  const [nav, setNav] = useState([1]);\r\n  const [activeNav, setActiveNav] = useState(1);\r\n  const [detailVisible, setDetailVisible] = useState(false);\r\n\r\n  // detail data\r\n  const [detailData, setDetailData] = useState({\r\n    id: 0,\r\n    name: \"\",\r\n    keterangan: \"\",\r\n    hari: \"\",\r\n    durasi: \"\",\r\n    active_flag: 1,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    listenEvent();\r\n  }, []);\r\n  /**\r\n   * It fetches the data from the API and then sets the listData to the response\r\n   * @param [amount=10] - the number of items to be displayed on the page\r\n   * @param [page=1] - The page number of the data you want to fetch.\r\n   */\r\n  async function getData(amount = 10, page = 1) {\r\n    try {\r\n      const body = {\r\n        per_page: amount,\r\n        page: page,\r\n      };\r\n\r\n      const req = await fetch(`${base_url}/jwkredit`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(body),\r\n      });\r\n      const res = await req.json();\r\n\r\n      if (res.status === 200 && res.response.length > 0) {\r\n        setListData(res.response);\r\n        const navigationList = [];\r\n        for (let i = 0; i < res.total_item / amountShown; i++) {\r\n          navigationList.push(i + 1);\r\n        }\r\n        setNav(navigationList);\r\n      } else {\r\n        setListData([]);\r\n      }\r\n    } catch (err) {\r\n      setListData([]);\r\n    }\r\n  }\r\n\r\n  async function showDetail(id) {\r\n    try {\r\n      setDetailVisible(true);\r\n      const req = await fetch(`${base_url}/jwkredit/${id}`);\r\n      const res = await req.json();\r\n\r\n      if (res.status === 200) {\r\n        setDetailData(res.response);\r\n      }\r\n    } catch (err) {}\r\n  }\r\n\r\n  /**\r\n   * It listens to the store's state change and if the state is \"close_modal_preview\", it will set the\r\n   * detailVisible to false\r\n   */\r\n  function listenEvent() {\r\n    store.subscribe(() => {\r\n      const state = store.getState();\r\n      if (state.type === \"close_preview_modal\") {\r\n        setDetailVisible(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Preview\r\n        nama={detailData.name}\r\n        hari={detailData.hari}\r\n        durasi={detailData.durasi}\r\n        keterangan={detailData.keterangan}\r\n        visible={detailVisible}\r\n      />\r\n      <SimpleHeader name=\"Jangka Waktu\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row className=\"table\">\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <TabContent activeTab={\"1\"}>\r\n                  {/* header */}\r\n                  <CardHeader>\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                      }}\r\n                    >\r\n                      <h3>Jangka Waktu</h3>\r\n                      <div style={{ textAlign: \"right\" }}>\r\n                        <Link\r\n                          className=\"btn btn-info\"\r\n                          to={{ pathname: \"/admin/jangka-waktu/create\" }}\r\n                        >\r\n                          Add\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                  </CardHeader>\r\n                  {/* body */}\r\n                  <div className=\"table-container\">\r\n                    <Table className=\"table\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th>#</th>\r\n                          <th>Nama</th>\r\n                          <th>Hari</th>\r\n                          <th>Durasi</th>\r\n                          <th>Aksi</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {listData.map((items, i) => (\r\n                          <tr key={i}>\r\n                            <td>{i + 1}</td>\r\n                            <td>{items.name}</td>\r\n                            <td>{items.hari}</td>\r\n                            <td>{items.durasi}</td>\r\n                            <td>\r\n                              <Button\r\n                                onClick={() => showDetail(items.id)}\r\n                                type=\"button\"\r\n                                color=\"primary\"\r\n                                size=\"sm\"\r\n                              >\r\n                                Detail\r\n                              </Button>\r\n                              <Button\r\n                                onClick={() => {\r\n                                  history.push({\r\n                                    pathname: `/admin/jangka-waktu/update/${items.id}`,\r\n                                  });\r\n                                }}\r\n                                type=\"button\"\r\n                                color=\"warning\"\r\n                                size=\"sm\"\r\n                              >\r\n                                Edit\r\n                              </Button>\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </Table>\r\n                    {/* filter */}\r\n                    <div className=\"filter-page\">\r\n                      <div className=\"section-1\">\r\n                        <span>Show</span>\r\n                        <select\r\n                          className=\"filter-select\"\r\n                          onChange={(evt) => {\r\n                            setAmountShown(parseInt(evt.target.value));\r\n                            getData(parseInt(evt.target.value), activeNav);\r\n                          }}\r\n                        >\r\n                          <option value=\"10\">10</option>\r\n                          <option value=\"20\">20</option>\r\n                          <option value=\"25\">25</option>\r\n                          <option value=\"50\">50</option>\r\n                        </select>\r\n                        <span>\r\n                          {\" \"}\r\n                          entries. Showing rows 1 to {listData.length} of{\" \"}\r\n                          {amountShown}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"section-2\">\r\n                        <nav aria-label=\"...\">\r\n                          <Pagination>\r\n                            <PaginationItem className=\"disabled\">\r\n                              <PaginationLink\r\n                                href=\"#pablo\"\r\n                                onClick={(e) => e.preventDefault()}\r\n                                tabIndex=\"-1\"\r\n                              >\r\n                                <i className=\"fa fa-angle-left\" />\r\n                                <span className=\"sr-only\">Previous</span>\r\n                              </PaginationLink>\r\n                            </PaginationItem>\r\n\r\n                            {nav.map((items, i) => (\r\n                              <PaginationItem\r\n                                className={activeNav === items ? \"active\" : \"\"}\r\n                                key={i}\r\n                              >\r\n                                <PaginationLink\r\n                                  href=\"#pablo\"\r\n                                  onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    setActiveNav(items);\r\n                                    getData(amountShown, items);\r\n                                  }}\r\n                                >\r\n                                  {items}\r\n                                </PaginationLink>\r\n                              </PaginationItem>\r\n                            ))}\r\n                            <PaginationItem>\r\n                              <PaginationLink\r\n                                href=\"#pablo\"\r\n                                onClick={(e) => e.preventDefault()}\r\n                              >\r\n                                <i className=\"fa fa-angle-right\" />\r\n                                <span className=\"sr-only\">Next</span>\r\n                              </PaginationLink>\r\n                            </PaginationItem>\r\n                          </Pagination>\r\n                        </nav>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  {/*  */}\r\n                </TabContent>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import { createStore } from \"redux\";\r\nconst store = createStore((state, action) => {\r\n  return action;\r\n});\r\nexport default store;\r\n","/*eslint-disable*/\r\nimport { Modal, Button } from \"reactstrap\";\r\nimport store from \"../redux\";\r\n\r\nexport default function DetailData({ visible, data }) {\r\n  function closePreview() {\r\n    store.dispatch({\r\n      type: \"close_modal_preview\",\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      className=\"modal-dialog-centered\"\r\n      isOpen={visible}\r\n      toggle={() => closePreview()}\r\n    >\r\n      <div className=\"modal-header\">\r\n        <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n          Detail\r\n        </h5>\r\n        <button\r\n          aria-label=\"Close\"\r\n          className=\"close\"\r\n          data-dismiss=\"modal\"\r\n          type=\"button\"\r\n          onClick={() => closePreview()}\r\n        >\r\n          <span aria-hidden={true}>×</span>\r\n        </button>\r\n      </div>\r\n      <div className=\"modal-body\">\r\n        <div className=\"table-container\">\r\n          <table className=\"table\">\r\n            <tbody>\r\n              {(Object.keys(data) || []).map((items, i) => (\r\n                <tr key={i}>\r\n                  <td className=\"table-key\">{items}</td>\r\n                  <td className=\"table-value\">{data[items]}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        <Button\r\n          color=\"info\"\r\n          data-dismiss=\"modal\"\r\n          type=\"button\"\r\n          block\r\n          onClick={() => closePreview()}\r\n        >\r\n          Tutup\r\n        </Button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Table,\r\n  Button,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n  Input,\r\n  FormGroup,\r\n} from \"reactstrap\";\r\nimport DetailData from \"../snippets/DetailData\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\n// state management\r\nimport store from \"../snippets/redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst base_url = process.env.REACT_APP_API_BASE_URL;\r\n\r\nexport default function PoReturHistory() {\r\n  const [listData, setListData] = useState([]);\r\n  const [amountShown, setAmountShown] = useState(10);\r\n  const [returCode, setReturCode] = useState(\"\");\r\n  const usernameSo = localStorage.username;\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const [preview, setPreview] = useState(false);\r\n  const [detailData, setDetailData] = useState({});\r\n  const [orderCode, setOrderCode] = useState([]);\r\n\r\n  const [nav, setNav] = useState([1]);\r\n  const [activeNav, setActiveNav] = useState(1);\r\n\r\n  useEffect(() => {\r\n    listenEvent();\r\n    getData(activeNav, amountShown, returCode, usernameSo, startDate, endDate);\r\n    getOrderCode();\r\n  }, []);\r\n\r\n  function getOrderCode() {\r\n    axios\r\n      .get(`${base_url}/sales-order/list`)\r\n      .then((res) => {\r\n        setOrderCode(res.data.response_data);\r\n      })\r\n      .catch((err) => {\r\n        console.warn(err);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * It gets the data from the server and then set the data to the state\r\n   * @param [page=1] - The page number of the data that you want to retrieve.\r\n   * @param [per_page=10] - The number of items per page.\r\n   * @param [retur_code] - The code of the return.\r\n   * @param [username_so] - The username of the sales order\r\n   * @param [start_date] - The start date of the date range.\r\n   * @param [end_date] - The end date of the date range.\r\n   */\r\n  function getData(\r\n    page = 1,\r\n    per_page = 10,\r\n    retur_code = \"\",\r\n    username_so = \"\",\r\n    start_date = \"\",\r\n    end_date = \"\"\r\n  ) {\r\n    const payload = {\r\n      page: page,\r\n      per_page: per_page,\r\n      retur_code: retur_code,\r\n      username_so: username_so,\r\n      start_date: start_date,\r\n      end_date: end_date,\r\n      werehouse_id: parseInt(localStorage.warehouse),\r\n    };\r\n\r\n    axios\r\n      .post(`${base_url}/retur-po/history`, {\r\n        body: JSON.stringify(payload),\r\n      })\r\n      .then((res) => {\r\n        setListData(res.data.response_data);\r\n\r\n        // membuat list tombol navigasi ie.1,2,3,4 etc\r\n        const navigationList = [];\r\n        for (let i = 0; i < res.data.total_item / amountShown; i++) {\r\n          navigationList.push(i + 1);\r\n        }\r\n        setNav(navigationList);\r\n      })\r\n      .catch((err) => {\r\n        console.warn(err);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Listen to the store and when the store emits a change, run the function\r\n   */\r\n  function listenEvent() {\r\n    store.subscribe(() => {\r\n      const state = store.getState();\r\n      if (state.type === \"close_modal_preview\") {\r\n        setPreview(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  function searchDataByFilter() {\r\n    getData(activeNav, amountShown, returCode, usernameSo, startDate, endDate);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Sales Order\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        {/* preview */}\r\n        <DetailData visible={preview} data={detailData} />\r\n        {/*  */}\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <h3>Riwayat Retur Purchase Order</h3>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                {/* filter */}\r\n                <div className=\"flex-container\">\r\n                  <FormGroup>\r\n                    <label className=\"form-control-label\" htmlFor=\"koderetur\">\r\n                      Kode Retur\r\n                    </label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      id=\"koderetur\"\r\n                      onChange={(evt) => setReturCode(evt.target.value)}\r\n                    >\r\n                      <option value=\"\">-</option>\r\n                      {orderCode.map((items, i) => (\r\n                        <option value={items.order_code} key={i}>\r\n                          {items.order_code}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <label\r\n                      className=\"form-control-label\"\r\n                      htmlFor=\"tanggalmulai\"\r\n                    >\r\n                      Tanggal Mulai\r\n                    </label>\r\n                    <Input type=\"date\" id=\"tanggalmulai\" />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <label\r\n                      className=\"form-control-label\"\r\n                      htmlFor=\"tanggalselesai\"\r\n                    >\r\n                      Tanggal Selesai\r\n                    </label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      id=\"tanggalselesai\"\r\n                      onChange={(evt) => console.log(evt.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                  <Button\r\n                    onClick={() => searchDataByFilter()}\r\n                    type=\"button\"\r\n                    color=\"primary\"\r\n                  >\r\n                    Telusuri\r\n                  </Button>\r\n                </div>\r\n                {/*  */}\r\n                <div className=\"table-container\">\r\n                  <Table className=\"table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>#</th>\r\n                        <th>Username SO</th>\r\n                        <th>Retur Code</th>\r\n                        <th>Item or Money</th>\r\n                        <th>Total QTY</th>\r\n                        <th>Total Price</th>\r\n                        <th>Status Barang</th>\r\n                        <th>Aksi</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {listData.map((items, i) => (\r\n                        <tr key={i}>\r\n                          <td>{i + 1}</td>\r\n                          <td>{items.username_so}</td>\r\n                          <td>{items.retur_code}</td>\r\n                          <td>{items.item_or_money}</td>\r\n                          <td>{items.total_qty}</td>\r\n                          <td>{items.total_price}</td>\r\n                          <td>{items.status_barang}</td>\r\n                          <td>\r\n                            <Button\r\n                              onClick={() => {\r\n                                setPreview(true);\r\n                                setDetailData(items);\r\n                              }}\r\n                              size=\"sm\"\r\n                              color=\"primary\"\r\n                              type=\"button\"\r\n                            >\r\n                              Detail\r\n                            </Button>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </Table>\r\n\r\n                  <div className=\"filter-page\">\r\n                    <div className=\"section-1\">\r\n                      <span>Show</span>\r\n                      <select\r\n                        className=\"filter-select\"\r\n                        onChange={(evt) => {\r\n                          setAmountShown(parseInt(evt.target.value));\r\n                          getData(\r\n                            activeNav,\r\n                            parseInt(evt.target.value),\r\n                            returCode,\r\n                            usernameSo,\r\n                            startDate,\r\n                            endDate\r\n                          );\r\n                        }}\r\n                      >\r\n                        <option value=\"10\">10</option>\r\n                        <option value=\"20\">20</option>\r\n                        <option value=\"25\">25</option>\r\n                        <option value=\"50\">50</option>\r\n                      </select>\r\n                      <span>\r\n                        {\" \"}\r\n                        entries. Showing rows 1 to {listData.length} of{\" \"}\r\n                        {amountShown}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"section-2\">\r\n                      <nav aria-label=\"...\">\r\n                        <Pagination>\r\n                          <PaginationItem className=\"disabled\">\r\n                            <PaginationLink\r\n                              href=\"#pablo\"\r\n                              onClick={(e) => e.preventDefault()}\r\n                              tabIndex=\"-1\"\r\n                            >\r\n                              <i className=\"fa fa-angle-left\" />\r\n                              <span className=\"sr-only\">Previous</span>\r\n                            </PaginationLink>\r\n                          </PaginationItem>\r\n\r\n                          {nav.map((items, i) => (\r\n                            <PaginationItem\r\n                              className={activeNav === items ? \"active\" : \"\"}\r\n                              key={i}\r\n                            >\r\n                              <PaginationLink\r\n                                href=\"#pablo\"\r\n                                onClick={(e) => {\r\n                                  e.preventDefault();\r\n                                  setActiveNav(items);\r\n                                  getData(\r\n                                    items,\r\n                                    amountShown,\r\n                                    returCode,\r\n                                    usernameSo,\r\n                                    startDate,\r\n                                    endDate\r\n                                  );\r\n                                }}\r\n                              >\r\n                                {items}\r\n                              </PaginationLink>\r\n                            </PaginationItem>\r\n                          ))}\r\n                          <PaginationItem>\r\n                            <PaginationLink\r\n                              href=\"#pablo\"\r\n                              onClick={(e) => e.preventDefault()}\r\n                            >\r\n                              <i className=\"fa fa-angle-right\" />\r\n                              <span className=\"sr-only\">Next</span>\r\n                            </PaginationLink>\r\n                          </PaginationItem>\r\n                        </Pagination>\r\n                      </nav>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { \r\n    Card, \r\n    Button, \r\n    Row, \r\n    Col, \r\n    CardBody, \r\n    CardHeader, \r\n    UncontrolledTooltip, \r\n    ButtonGroup, \r\n    Collapse, \r\n    Form, \r\n    FormGroup, \r\n    Label, \r\n    Input \r\n} from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst PermintaanBarang = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const redirectPrefix = `/admin/po/permintaan-barang/edit/`;\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allPermintaanBarang, setAllPermintaanBarang] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n  const [uomCode, setUomCode] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n  \r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, uomCode, description);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort, uomCode, description) => {\r\n    getPermintaanBarang(page, perPage, sort, uomCode, description);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setUomCode(uomCode);\r\n    setDescription(description);\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort,  uomCode, description)\r\n    }\r\n  }\r\n\r\n  \r\n  useEffect(() => {\r\n    getPermintaanBarang(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  // fungsi dari ambil data\r\n  const getPermintaanBarang = (page, perPage, currentSort) => {\r\n    \r\n    let filter = { \r\n      \r\n      page: page, \r\n      per_page: perPage, \r\n      status: 0,\r\n      \r\n    };\r\n    const data = filter;\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/rfq-po/page`, data, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setAllPermintaanBarang(data.data.response);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const reset = () => {\r\n    setUomCode(\"\");\r\n    setDescription(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        \r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>Permintaan Barang</h3>\r\n                  <div style={{ textAlign: 'right' }}>\r\n                    <Link className=\"btn btn-info\" to=\"/admin/permintaan-barang/create\">\r\n                      Buat Permintaan Barang\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n              <h3 onClick={toggleOpen} >Search &nbsp;\r\n                  {\r\n                    isOpen === true ? <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i> : <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  }\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                        <Row md=\"12\">\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Kode RFQ</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Kode Uom\"\r\n                                value={uomCode}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, e.target.value, description)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Keterangan</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Deskripsi\"\r\n                                value={description}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, uomCode, e.target.value)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Button type=\"button\" onClick={reset} color=\"secondary\">Reset</Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Collapse>\r\n                    <ToolkitProvider\r\n                            rowNumber={rowIndex}\r\n                            data={allPermintaanBarang}\r\n                            keyField=\"id\"\r\n                            columns={[\r\n                            {\r\n                                dataField: \"no\",\r\n                                text: \"#\",\r\n                                sort: true,\r\n                                page: 1,\r\n                                formatter: (cell, row, index) => {\r\n                                let currentRow = ++index;\r\n                                return currentRow + rowIndex;\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"rfq_code\",\r\n                                text: \"Kode RFQ\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"person_id\",\r\n                                text: \"Supplier\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"qty_total\",\r\n                                text: \"Jumlah Total\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"keterangan\",\r\n                                text: \"Keterangan\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"status\",\r\n                                text: \"Status\",\r\n                                sort: true,\r\n                                formatter: (cell, row) => {\r\n                                  return row.status_barang === 0\r\n                                    ? 'proses'\r\n                                    : row.status_barang === 1\r\n                                    ? 'Setuju'\r\n                                    : 'Tidak Setuju';\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"aksi\", text: \"Aksi\", formatter: (cell, row, index) => {\r\n                                return (\r\n                                    <ButtonGroup>\r\n                                    <Button>\r\n                                        <Link\r\n                                        to={redirectPrefix + row.id}\r\n                                        id={\"tooltip_\" + row.id}\r\n                                        >\r\n                                        <i className=\"fas fa-user-edit\" />\r\n                                        </Link>\r\n                                    </Button>\r\n                                    <UncontrolledTooltip delay={0} target={\"tooltip_\" + row.id}>\r\n                                        Edit\r\n                                    </UncontrolledTooltip>\r\n                                    </ButtonGroup>\r\n                                )\r\n                                }\r\n                            },\r\n                            ]}\r\n                        >\r\n                            {(props) => (\r\n                            <div className=\"py-4 table-responsive\">\r\n                                <BootstrapTable\r\n                                remote\r\n                                {...props.baseProps}\r\n                                bootstrap4={true}\r\n                                bordered={false}\r\n                                hover={true}\r\n                                pagination={paginationFactory({ ...paginationOption })}\r\n                                onTableChange={handleTableChange}\r\n                                />\r\n                            </div>\r\n                            )}\r\n                    </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PermintaanBarang;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { \r\n    Card, \r\n    Button, \r\n    Row, \r\n    Col, \r\n    CardBody, \r\n    CardHeader, \r\n    UncontrolledTooltip, \r\n    ButtonGroup, \r\n    Collapse, \r\n    Form, \r\n    FormGroup, \r\n    Label, \r\n    Input \r\n} from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst ValidasiPermintaanBarang = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const redirectPrefix = `/admin/po/validasi-Permintaan-barang/edit/`;\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allPermintaanBarang, setAllPermintaanBarang] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n  const [uomCode, setUomCode] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n  \r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, uomCode, description);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort, uomCode, description) => {\r\n    getPermintaanBarang(page, perPage, sort, uomCode, description);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setUomCode(uomCode);\r\n    setDescription(description);\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort,  uomCode, description)\r\n    }\r\n  }\r\n\r\n  \r\n  useEffect(() => {\r\n    getPermintaanBarang(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  // fungsi dari ambil data\r\n  const getPermintaanBarang = (page, perPage, currentSort) => {\r\n    \r\n    let filter = { \r\n      \r\n      page: page, \r\n      per_page: perPage, \r\n      status: 0,\r\n      \r\n    };\r\n    const data = filter;\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/rfq-po/page`, data, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setAllPermintaanBarang(data.data.response);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const reset = () => {\r\n    setUomCode(\"\");\r\n    setDescription(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        \r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>Validasi Permintaan Barang</h3>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n              <h3 onClick={toggleOpen} >Search &nbsp;\r\n                  {\r\n                    isOpen === true ? <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i> : <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  }\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                        <Row md=\"12\">\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Kode RFQ</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Kode Uom\"\r\n                                value={uomCode}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, e.target.value, description)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Keterangan</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Deskripsi\"\r\n                                value={description}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, uomCode, e.target.value)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Button type=\"button\" onClick={reset} color=\"secondary\">Reset</Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Collapse>\r\n                    <ToolkitProvider\r\n                            rowNumber={rowIndex}\r\n                            data={allPermintaanBarang}\r\n                            keyField=\"id\"\r\n                            columns={[\r\n                            {\r\n                                dataField: \"no\",\r\n                                text: \"#\",\r\n                                sort: true,\r\n                                page: 1,\r\n                                formatter: (cell, row, index) => {\r\n                                let currentRow = ++index;\r\n                                return currentRow + rowIndex;\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"rfq_code\",\r\n                                text: \"Kode RFQ\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"person_id\",\r\n                                text: \"Supplier\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"qty_total\",\r\n                                text: \"Jumlah Total\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"keterangan\",\r\n                                text: \"Keterangan\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"status\",\r\n                                text: \"Status\",\r\n                                sort: true,\r\n                                formatter: (cell, row) => {\r\n                                  return row.status_barang === 0\r\n                                    ? 'proses'\r\n                                    : row.status_barang === 1\r\n                                    ? 'Setuju'\r\n                                    : 'Tidak Setuju';\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"aksi\", text: \"Aksi\", formatter: (cell, row, index) => {\r\n                                return (\r\n                                    <ButtonGroup>\r\n                                    <Button>\r\n                                        <Link\r\n                                        to={redirectPrefix + row.id}\r\n                                        id={\"tooltip_\" + row.id}\r\n                                        >\r\n                                        <i className=\"fas fa-user-edit\" />\r\n                                        </Link>\r\n                                    </Button>\r\n                                    <UncontrolledTooltip delay={0} target={\"tooltip_\" + row.id}>\r\n                                        Edit\r\n                                    </UncontrolledTooltip>\r\n                                    </ButtonGroup>\r\n                                )\r\n                                }\r\n                            },\r\n                            ]}\r\n                        >\r\n                            {(props) => (\r\n                            <div className=\"py-4 table-responsive\">\r\n                                <BootstrapTable\r\n                                remote\r\n                                {...props.baseProps}\r\n                                bootstrap4={true}\r\n                                bordered={false}\r\n                                hover={true}\r\n                                pagination={paginationFactory({ ...paginationOption })}\r\n                                onTableChange={handleTableChange}\r\n                                />\r\n                            </div>\r\n                            )}\r\n                    </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ValidasiPermintaanBarang;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  \r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  CardBody,\r\n  CardHeader,\r\n  CardFooter,\r\n  Table,\r\n  ButtonGroup,\r\n  Container,\r\n  Form,\r\n  FormGroup,\r\n  UncontrolledTooltip,\r\n  Label,\r\n  Input,\r\n  \r\n} from \"reactstrap\";\r\nimport { Link,useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nconst CreatePermintaanBarang = () => {\r\n  const token = localStorage.token;\r\n  const username = localStorage.username;\r\n  const warehouse = localStorage.warehouse;\r\n  let history = useHistory();\r\n  \r\n  // const warehouse = parseInt(localStorage.warehouse);\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n  const [alert, setAlert] = React.useState(null);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const redirectPrefix = `/admin/item/edit/`;\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n  const [page, setPage] = useState(1);\r\n  const [hargatotal,setHargaTotal] = useState(\"\");\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n  const [nameItem, setNameItem] = useState(\"\");\r\n  const [satuan, setSatuan] = useState(\"\");\r\n  const [allSatuan, setAllSatuan] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [savedItems, setSavedItems] = useState([]);\r\n  const [allPo, setAllPo] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [usernamePo, setUsernamePo] = useState(username);\r\n  const [Item_Code,setItemCode] = useState(\"\");\r\n  const [qty,setQty] = useState([]);\r\n  const [harga, setHarga] = useState(\"\");\r\n  const [typereq, setTypeReq] = useState([]);\r\n  const [persons, setPersons] = useState([]);\r\n  const [person, setPerson] = useState(\"\");\r\n  const [payment_method,setPaymentMethod] = useState([]);\r\n  const [durasipo,setDurasiPo] = useState(\"\");\r\n  const [descriptionPayment,setDescriptionPayment] = useState(\"\");\r\n  const [keterangan,setKeterangan] = useState(\"\");\r\n  const [isShow, setIsShow] = useState(false);\r\n  const [jangkaWaktu,setJangkaWaktu] = useState([]);\r\n  const [is_cicil,setIsCicil] = useState([]);\r\n  const [quantity, setQuantity] = useState(0);\r\n  const [active, setActive] = useState(0);\r\n  const [filtered, setFiltered] = useState([]);\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n\r\n  const [inputList, setInputList] = useState([\r\n    {\r\n      item_id: \"\",\r\n      qty: \"\",\r\n      satuan: \"\",\r\n      harga: \"\",\r\n      qty_fisik: \"\",\r\n      keterangan_fisik: \"\",\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    getPerson();\r\n    getSatuan();\r\n\r\n  }, []);\r\n\r\n  const getPerson = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/person/list`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        setPersons(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getSatuan = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/uom/list`, { headers })\r\n      .then((data) => {\r\n        setAllSatuan(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n\r\n  function CreateData() {\r\n    setLoading(true);\r\n    \r\n   }\r\n\r\n \r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, nameItem);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort);\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const updateDataTable = (page, perPage, sort, nameItem) => {\r\n    getItem(page, perPage, sort, nameItem);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setNameItem(nameItem);\r\n    getPrice(page, perPage, sort);\r\n  };\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`;\r\n      updateDataTable(page, perPage, sort, nameItem);\r\n    }\r\n  };\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  // ambil data dari harga\r\n\r\n  useEffect(() => {\r\n    getPo(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  // fungsi dari ambil data\r\n  const getPo = (page, perPage, currentSort) => {\r\n    \r\n    let filter = {\r\n       page: page,\r\n       per_page: perPage, \r\n      };\r\n\r\n    const data = filter;\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/purchase-order/page`, data, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setAllPo(data.data.response);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n\r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...inputList];\r\n    list.splice(index, 1);\r\n    setInputList(list);\r\n  };\r\n\r\n  // handle click event of the Add button\r\n  const handleAddClick = () => {\r\n    setInputList([\r\n      ...inputList,\r\n      {\r\n        item_id: \"\",\r\n        qty: \"\",\r\n        satuan: \"\",\r\n        harga: \"\",\r\n        qty_fisik: \"\",\r\n        keterangan_fisik: \"\",\r\n      },\r\n    ]);\r\n  };\r\n\r\n  function CreateData() {\r\n    setLoading(true);\r\n    let data = {\r\n      warehouse_id : parseInt(warehouse),\r\n      username_po : \"\",\r\n      payment_method : [],\r\n      jangka_waktu: parseInt(jangkaWaktu),\r\n      keterangan_payment: descriptionPayment,\r\n      is_cicil: parseInt(is_cicil),\r\n      person: parseInt(person),\r\n      po_type : poType,\r\n      durasi_po: durasipo,\r\n      keterangan_po : descriptionPo ,\r\n      approve : 0,\r\n      username_admin: \"\",\r\n      admin_approval: 0,\r\n      keterangan_admin: \"\",\r\n      username_validator : \"\",\r\n      clear : 0,\r\n      keterangan_validator : \"\" ,\r\n      username_gudang : \"\",\r\n      status_barang : 0,\r\n      keterangan_gudang : \"\",\r\n      username_kurir : \"\",\r\n      \r\n      items : []\r\n      \r\n    };\r\n    axios\r\n        .post(\r\n          `${process.env.REACT_APP_API_BASE_URL}/purchase-order/save`,\r\n          data,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        )\r\n        .then(function (response) {\r\n          history.push(\"/admin/po\");\r\n        })\r\n        .then((json) => {\r\n          setLoading(false);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n  }\r\n\r\n  const saveItem = () => {\r\n    if (quantity === '' || quantity <= 0)\r\n        return;\r\n\r\n    // let haveSameData = savedItems.find(object => object.item_id === selectedItem.value);\r\n    // if (haveSameData !== undefined)\r\n    //     return;\r\n\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/items`, {\r\n        page: 1,\r\n        per_page: 1,\r\n        name: input\r\n    }).then(async response => {\r\n        const length = response.data.response.length;\r\n        if (length === 0)\r\n            return;\r\n\r\n        const idItem = response.data.response[0].id;\r\n\r\n        axios.get(`${process.env.REACT_APP_API_BASE_URL}/items/${idItem}`)\r\n            .then(async response => {\r\n                return {\r\n                    item: response.data.response,\r\n                    satuan: satuan\r\n                };\r\n            }).then((data) => {\r\n                let stateItem = [...savedItems, {\r\n                    item_id: idItem,\r\n                    qty: parseInt(quantity),\r\n                }];\r\n\r\n                setTotalPrice(totalPrice + data.item.harga * parseInt(quantity));\r\n                setSavedItems(stateItem);\r\n            });\r\n    });\r\n}\r\n\r\nconst onChange = e => {\r\n    const input = e.currentTarget.value;\r\n\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/items`, {\r\n        page: 1,\r\n        per_page: 10,\r\n        name: input\r\n    }).then(async response => {\r\n        let suggests = [];\r\n\r\n        await Promise.all(response.data.response.map((data) =>\r\n            suggests = [...suggests, data.item_name]\r\n        ));\r\n\r\n        setActive(0);\r\n        setFiltered(suggests);\r\n        setIsShow(true);\r\n    });\r\n\r\n    setInput(e.currentTarget.value);\r\n};\r\nconst onClick = e => {\r\n    setActive(0);\r\n    setFiltered([]);\r\n    setIsShow(false);\r\n    setInput(e.currentTarget.innerText)\r\n};\r\nconst onKeyDown = e => {\r\n    if (e.keyCode === 13) { // enter key\r\n        setActive(0);\r\n        setIsShow(false);\r\n        setInput(filtered[active])\r\n    }\r\n    else if (e.keyCode === 38) { // up arrow\r\n        return (active === 0) ? null : setActive(active - 1);\r\n    }\r\n    else if (e.keyCode === 40) { // down arrow\r\n        return (active - 1 === filtered.length) ? null : setActive(active + 1);\r\n    }\r\n};\r\n\r\nconst AutoCompleTes = () => {\r\n    if (isShow && input) {\r\n        if (filtered.length) {\r\n            return (\r\n                <ul className=\"autocomplete\">\r\n                    {filtered.map((suggestion, index) => {\r\n                        let className;\r\n                        if (index === active) {\r\n                            className = \"active\";\r\n                        }\r\n                        return (\r\n                            <li key={index} className={className} onClick={onClick}>\r\n                                {suggestion}\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className=\"no-autocomplete\">\r\n                    <em>Not found</em>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n    return <></>;\r\n}\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    {\r\n      CreateData();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <SimpleHeader name=\"Create Permintaan Barang\" parentName=\"PO\" />\r\n    <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n              <Card>\r\n                <Form onSubmit={handleSubmit}>\r\n                <CardBody>\r\n                    <CardHeader>\r\n                      <h3>Daftar Purchase Order</h3>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                      <Row md=\"12\">\r\n                          <Col md=\"6\">\r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={5}\r\n                              >\r\n                                Supplier\r\n                              </Label>\r\n                              <Col sm={7}>\r\n                              <Input\r\n                                  name=\"person\"\r\n                                  type=\"select\"\r\n                                  value={person}\r\n                                  onChange={(e) => {\r\n                                    setPerson(e.target.value);\r\n                                  }}\r\n                                >\r\n                                  <option value=''>Pilih Supplier</option>\r\n                                  {persons.map((person, key) => {\r\n                                      return (\r\n                                        <option key={key} value={person.id}>\r\n                                          {person.person_name}\r\n                                        </option>\r\n                                      );\r\n                                    })}\r\n                                  </Input>\r\n                              </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={5}\r\n                              >\r\n                                Keterangan\r\n                              </Label>\r\n                              <Col sm={7}>\r\n                                <Input\r\n                                  type=\"text\"\r\n                                  name=\"desc\"\r\n                                  placeholder=\"Masukan Keterangan\"\r\n                                  value={keterangan}\r\n                                  onChange={(e) => {\r\n                                    setKeterangan(e.target.value);\r\n                                  }}\r\n                                />\r\n                              </Col>                             \r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={5}\r\n                            >\r\n                              Tipe Request\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                                name=\"Tipe Po\"\r\n                                type=\"select\"\r\n                                value={typereq}\r\n                                onChange={(e) => {\r\n                                  setTypeReq(e.target.value);\r\n                                }}\r\n                              >\r\n                                <option value={1}>Customer Request</option>\r\n                                <option value={2}>Stok Request</option>\r\n                              </Input>\r\n                            </Col>\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"6\">\r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={5}\r\n                              >\r\n                                Durasi PO\r\n                              </Label>\r\n                              <Col sm={7}>\r\n                              <Input\r\n                                  type=\"text\"\r\n                                  name=\"barcode\"\r\n                                  placeholder=\"Masukan Durasi Tempo\"\r\n                                  value={durasipo}\r\n                                  onChange={(e) => {\r\n                                    setDurasiPo(e.target.value);\r\n                                  }}\r\n                                />\r\n                              </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={5}\r\n                              >\r\n                                Jangka Waktu\r\n                              </Label>\r\n                              <Col sm={7}>\r\n                              <Input\r\n                                  type=\"number\"\r\n                                  name=\"jangka waktu\"\r\n                                  placeholder=\"Masukan Jangka Waktu\"\r\n                                  value={jangkaWaktu}\r\n                                  onChange={(e) => {\r\n                                    setJangkaWaktu(e.target.value);\r\n                                  }}\r\n                                />\r\n                              </Col>\r\n                            </FormGroup>\r\n                            \r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={5}\r\n                              >\r\n                                Cicilan\r\n                              </Label>\r\n                              <Col sm={7}>\r\n                              <Input\r\n                              name=\"satuan\"\r\n                              type=\"select\"\r\n                              value={is_cicil}\r\n                              onChange={(e) => {\r\n                                setSatuan(e.target.value);\r\n                              }}\r\n                            >\r\n                              <option value={1}>Lunas</option>\r\n                              <option value={2}>Belum Lunas</option>\r\n                            </Input>\r\n                              </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={5}\r\n                              >\r\n                                Nominal Cicilan\r\n                              </Label>\r\n                              <Col sm={7}>\r\n                                <Input\r\n                                  type=\"text\"\r\n                                  name=\"desc\"\r\n                                  placeholder=\"Masukan Nominal Cicilan\"\r\n                                  value={is_cicil}\r\n                                  onChange={(e) => {\r\n                                    setIsCicil(e.target.value);\r\n                                  }}\r\n                                />\r\n                              </Col>\r\n                            </FormGroup>\r\n                          </Col>\r\n                      </Row>\r\n                      <Col xs=\"12\">\r\n                                        <hr />\r\n                                    </Col>\r\n\r\n                                    <Col xl=\"10\">\r\n                                        <FormGroup>\r\n                                            <Label>\r\n                                                Item\r\n                                            </Label>\r\n                                            {/* <Select options={items} placeholder=\"Item ...\" onChange={(e) => console.log(e)} /> */}\r\n                                            <Input\r\n                                                placeholder=\"Item ...\"\r\n                                                type=\"text\"\r\n                                                style={{ height: 38 }}\r\n                                                onChange={onChange}\r\n                                                onKeyDown={onKeyDown}\r\n                                                value={input}\r\n                                            />\r\n                                            <AutoCompleTes />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col xl=\"2\">\r\n                                        <FormGroup>\r\n                                            <Label>\r\n                                                Quantity\r\n                                            </Label>\r\n                                            <Input\r\n                                                placeholder=\"Quantity\"\r\n                                                type=\"number\"\r\n                                                style={{ height: 38 }}\r\n                                                onChange={(e) => setQuantity(e.target.value)}\r\n                                            />\r\n\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col xl=\"12\">\r\n                                        <FormGroup>\r\n                                            <Label>\r\n                                                Deskripsi\r\n                                            </Label>\r\n                                            <Input\r\n                                                placeholder=\"Deskripsi\"\r\n                                                type=\"textarea\"\r\n                                                rows=\"2\"\r\n                                                onChange={(e) => setDescription(e.target.value)}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col xl=\"12\">\r\n                                        <Button color=\"primary\" className=\"mb-3\" onClick={() => saveItem()}>Add</Button>\r\n                                    </Col>\r\n                      <Table>\r\n                              <thead>\r\n                                <tr>\r\n                                  <th>\r\n                                    <center>Nama Item</center>\r\n                                  </th>\r\n                                  <th>\r\n                                    <center>Kode Item</center>\r\n                                  </th>\r\n                                  <th>\r\n                                    <center>Quantity</center>\r\n                                  </th>\r\n                                  <th>\r\n                                    <center>Satuan</center>\r\n                                  </th>\r\n                                  <th>\r\n                                    <center>Harga</center>\r\n                                  </th>\r\n                                  <th>\r\n                                    <center>Aksi</center>\r\n                                  </th>\r\n                                </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                {\r\n                                    savedItems.map((savedItem, key) => {\r\n                                        return (\r\n                                            <tr key={key}>\r\n                                                <td>{savedItem.data.name}</td>\r\n                                                <td>{savedItem.satuan.name}</td>\r\n                                                <td>{savedItem.qty}</td>\r\n                                                <td>{formatRupiah(savedItem.data.harga)}</td>\r\n                                                <td>{formatRupiah(savedItem.data.harga * savedItem.qty)}</td>\r\n                                                <td>\r\n                                                    <Button color=\"danger\" onClick={() => deleteItem(savedItem.item_id)}>Delete</Button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n                              </tbody>\r\n                      </Table>\r\n                    </CardBody>\r\n                    <CardFooter >\r\n                    <Row md=\"12\">\r\n                          <Col md=\"8\">\r\n                          </Col>\r\n                          <Col md=\"4\">\r\n                            <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                              >\r\n                                Harga Total\r\n                              </Label>\r\n                              <Col sm={6}>\r\n                              <Input\r\n                                  type=\"text\"\r\n                                  name=\"barcode\"\r\n                                  placeholder=\"Harga Total\"\r\n                                  value={hargatotal}\r\n                                  onChange={(e) => {\r\n                                    setHargaTotal(e.target.value);\r\n                                  }}\r\n                                />\r\n                              </Col>\r\n                            </FormGroup>\r\n                          </Col>\r\n                      </Row>\r\n                    </CardFooter>\r\n                </CardBody>\r\n                <CardFooter>\r\n                      {!isLoading && (\r\n                        <Button color=\"primary\" type=\"submit\">\r\n                          Simpan\r\n                        </Button>\r\n                      )}\r\n                      {isLoading && (\r\n                        <Button color=\"primary\" disabled>\r\n                          <i className=\"fas fa-spinner fa-spin\"></i>\r\n                          {\"\"}\r\n                          loading...\r\n                        </Button>\r\n                      )}\r\n                      <Link className=\"btn btn-info\" to=\"/admin/po\">\r\n                        Kembali\r\n                      </Link>\r\n                </CardFooter>\r\n                </Form>\r\n              </Card>\r\n          </div>\r\n        </Row>\r\n    </Container>  \r\n    </>\r\n  );\r\n}\r\n\r\nexport default CreatePermintaanBarang;","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { \r\n    Card, \r\n    Button, \r\n    Row, \r\n    Col, \r\n    CardBody, \r\n    CardHeader, \r\n    UncontrolledTooltip, \r\n    ButtonGroup, \r\n    Collapse, \r\n    Form, \r\n    FormGroup, \r\n    Label, \r\n    Input \r\n} from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst MemoKurirPO = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const redirectPrefix = `/admin/po/memo-kurir-po/edit/`;\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allMemoKurirPo, setAllMemoKurirPo] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n  const [uomCode, setUomCode] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n  \r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, uomCode, description);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort, uomCode, description) => {\r\n    getMemoKurirPo(page, perPage, sort, uomCode, description);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setUomCode(uomCode);\r\n    setDescription(description);\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort,  uomCode, description)\r\n    }\r\n  }\r\n\r\n  \r\n  useEffect(() => {\r\n    getMemoKurirPo(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  // fungsi dari ambil data\r\n  const getMemoKurirPo = (page, perPage, currentSort) => {\r\n    \r\n    let filter = { \r\n      page: page, \r\n      per_page: perPage, \r\n      \r\n    };\r\n    const data = filter;\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/memo-po/page`, data, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setAllMemoKurirPo(data.data.response);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const reset = () => {\r\n    setUomCode(\"\");\r\n    setDescription(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        \r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>Memo Kurir PO</h3>\r\n                  <div style={{ textAlign: 'right' }}>\r\n                    <Link className=\"btn btn-info\" to=\"/admin/memo-kurir-po/create\">\r\n                      Buat Memo Kurir PO\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n              <h3 onClick={toggleOpen} >Search &nbsp;\r\n                  {\r\n                    isOpen === true ? <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i> : <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  }\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                        <Row md=\"12\">\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Kode RFQ</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Kode Uom\"\r\n                                value={uomCode}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, e.target.value, description)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Keterangan</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Deskripsi\"\r\n                                value={description}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, uomCode, e.target.value)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Button type=\"button\" onClick={reset} color=\"secondary\">Reset</Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Collapse>\r\n                    <ToolkitProvider\r\n                            rowNumber={rowIndex}\r\n                            data={allMemoKurirPo}\r\n                            keyField=\"id\"\r\n                            columns={[\r\n                            {\r\n                                dataField: \"no\",\r\n                                text: \"#\",\r\n                                sort: true,\r\n                                page: 1,\r\n                                formatter: (cell, row, index) => {\r\n                                let currentRow = ++index;\r\n                                return currentRow + rowIndex;\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"memo_code\",\r\n                                text: \"Kode Memo\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"code_po\",\r\n                                text: \"Kode PO\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"person_id\",\r\n                                text: \"Supplier\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"qty_total\",\r\n                                text: \"Jumlah Total\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"status_memo\",\r\n                                text: \"Status\",\r\n                                sort: true,\r\n                                formatter: (cell, row) => {\r\n                                  return row.status_barang === 0\r\n                                    ? 'proses'\r\n                                    : row.status_barang === 1\r\n                                    ? 'Setuju'\r\n                                    : 'Tidak Setuju';\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"aksi\", text: \"Aksi\", formatter: (cell, row, index) => {\r\n                                return (\r\n                                    <ButtonGroup>\r\n                                    <Button>\r\n                                        <Link\r\n                                        to={redirectPrefix + row.id}\r\n                                        id={\"tooltip_\" + row.id}\r\n                                        >\r\n                                        <i className=\"fas fa-user-edit\" />\r\n                                        </Link>\r\n                                    </Button>\r\n                                    <UncontrolledTooltip delay={0} target={\"tooltip_\" + row.id}>\r\n                                        Edit\r\n                                    </UncontrolledTooltip>\r\n                                    </ButtonGroup>\r\n                                )\r\n                                }\r\n                            },\r\n                            ]}\r\n                        >\r\n                            {(props) => (\r\n                            <div className=\"py-4 table-responsive\">\r\n                                <BootstrapTable\r\n                                remote\r\n                                {...props.baseProps}\r\n                                bootstrap4={true}\r\n                                bordered={false}\r\n                                hover={true}\r\n                                pagination={paginationFactory({ ...paginationOption })}\r\n                                onTableChange={handleTableChange}\r\n                                />\r\n                            </div>\r\n                            )}\r\n                    </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MemoKurirPO;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { \r\n    Card, \r\n    Button, \r\n    Row, \r\n    Col, \r\n    CardBody, \r\n    CardHeader, \r\n    UncontrolledTooltip, \r\n    ButtonGroup, \r\n    Collapse, \r\n    Form, \r\n    FormGroup, \r\n    Label, \r\n    Input \r\n} from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst ValidasiAdminPO = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const redirectPrefix = `/admin/po/memo-kurir-po/edit/`;\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allMemoKurirPo, setAllMemoKurirPo] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n  const [uomCode, setUomCode] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n  \r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, uomCode, description);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort, uomCode, description) => {\r\n    getMemoKurirPo(page, perPage, sort, uomCode, description);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setUomCode(uomCode);\r\n    setDescription(description);\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort,  uomCode, description)\r\n    }\r\n  }\r\n\r\n  \r\n  useEffect(() => {\r\n    getMemoKurirPo(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  // fungsi dari ambil data\r\n  const getMemoKurirPo = (page, perPage, currentSort) => {\r\n    \r\n    let filter = { \r\n      \r\n      page: page, \r\n      per_page: perPage, \r\n      status: 0,\r\n      \r\n    };\r\n    const data = filter;\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/memo-po/page`, data, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setAllMemoKurirPo(data.data.response);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const reset = () => {\r\n    setUomCode(\"\");\r\n    setDescription(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        \r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>Validasi Admin PO</h3>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n              <h3 onClick={toggleOpen} >Search &nbsp;\r\n                  {\r\n                    isOpen === true ? <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i> : <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  }\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                        <Row md=\"12\">\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Kode Memo</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Kode Uom\"\r\n                                value={uomCode}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, e.target.value, description)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Keterangan</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Deskripsi\"\r\n                                value={description}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, uomCode, e.target.value)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Button type=\"button\" onClick={reset} color=\"secondary\">Reset</Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Collapse>\r\n                    <ToolkitProvider\r\n                            rowNumber={rowIndex}\r\n                            data={allMemoKurirPo}\r\n                            keyField=\"id\"\r\n                            columns={[\r\n                            {\r\n                                dataField: \"no\",\r\n                                text: \"#\",\r\n                                sort: true,\r\n                                page: 1,\r\n                                formatter: (cell, row, index) => {\r\n                                let currentRow = ++index;\r\n                                return currentRow + rowIndex;\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"memo_code\",\r\n                                text: \"Kode Memo\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"code_po\",\r\n                                text: \"Kode PO\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"person_id\",\r\n                                text: \"Supplier\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"qty_total\",\r\n                                text: \"Jumlah Total\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"status_memo\",\r\n                                text: \"Status\",\r\n                                sort: true,\r\n                                formatter: (cell, row) => {\r\n                                  return row.status_barang === 0\r\n                                    ? 'proses'\r\n                                    : row.status_barang === 1\r\n                                    ? 'Setuju'\r\n                                    : 'Tidak Setuju';\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"aksi\", text: \"Aksi\", formatter: (cell, row, index) => {\r\n                                return (\r\n                                    <ButtonGroup>\r\n                                    <Button>\r\n                                        <Link\r\n                                        to={redirectPrefix + row.id}\r\n                                        id={\"tooltip_\" + row.id}\r\n                                        >\r\n                                        <i className=\"fas fa-user-edit\" />\r\n                                        </Link>\r\n                                    </Button>\r\n                                    <UncontrolledTooltip delay={0} target={\"tooltip_\" + row.id}>\r\n                                        Edit\r\n                                    </UncontrolledTooltip>\r\n                                    </ButtonGroup>\r\n                                )\r\n                                }\r\n                            },\r\n                            ]}\r\n                        >\r\n                            {(props) => (\r\n                            <div className=\"py-4 table-responsive\">\r\n                                <BootstrapTable\r\n                                remote\r\n                                {...props.baseProps}\r\n                                bootstrap4={true}\r\n                                bordered={false}\r\n                                hover={true}\r\n                                pagination={paginationFactory({ ...paginationOption })}\r\n                                onTableChange={handleTableChange}\r\n                                />\r\n                            </div>\r\n                            )}\r\n                    </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ValidasiAdminPO;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { \r\n    Card, \r\n    Button, \r\n    Row, \r\n    Col, \r\n    CardBody, \r\n    CardHeader, \r\n    UncontrolledTooltip, \r\n    ButtonGroup, \r\n    Collapse, \r\n    Form, \r\n    FormGroup, \r\n    Label, \r\n    Input \r\n} from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst InvoicePO = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const redirectPrefix = `/admin/po/invoice-po/edit/`;\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allInvoicePo, setAllInvoicePo] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n  const [uomCode, setUomCode] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n  \r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, uomCode, description);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort, uomCode, description) => {\r\n    getInvoicePo(page, perPage, sort, uomCode, description);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setUomCode(uomCode);\r\n    setDescription(description);\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort,  uomCode, description)\r\n    }\r\n  }\r\n\r\n  \r\n  useEffect(() => {\r\n    getInvoicePo(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  // fungsi dari ambil data\r\n  const getInvoicePo = (page, perPage, currentSort) => {\r\n    \r\n    let filter = { \r\n      page: page, \r\n      per_page: perPage, \r\n      \r\n    };\r\n    const data = filter;\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/invoice-po/page`, data, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setAllInvoicePo(data.data.response);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const reset = () => {\r\n    setUomCode(\"\");\r\n    setDescription(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        \r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>Invoice PO</h3>\r\n                  <div style={{ textAlign: 'right' }}>\r\n                    <Link className=\"btn btn-info\" to=\"/admin/memo-kurir-po/create\">\r\n                      Buat Invoice PO\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n              <h3 onClick={toggleOpen} >Search &nbsp;\r\n                  {\r\n                    isOpen === true ? <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i> : <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  }\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                        <Row md=\"12\">\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Kode Invoice</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Kode Uom\"\r\n                                value={uomCode}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, e.target.value, description)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Keterangan</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Deskripsi\"\r\n                                value={description}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, uomCode, e.target.value)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Button type=\"button\" onClick={reset} color=\"secondary\">Reset</Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Collapse>\r\n                    <ToolkitProvider\r\n                            rowNumber={rowIndex}\r\n                            data={allInvoicePo}\r\n                            keyField=\"id\"\r\n                            columns={[\r\n                            {\r\n                                dataField: \"no\",\r\n                                text: \"#\",\r\n                                sort: true,\r\n                                page: 1,\r\n                                formatter: (cell, row, index) => {\r\n                                let currentRow = ++index;\r\n                                return currentRow + rowIndex;\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"invoice_code\",\r\n                                text: \"Kode Invoice\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"code_po\",\r\n                                text: \"Kode PO\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"person_id\",\r\n                                text: \"Supplier\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"qty_total\",\r\n                                text: \"Jumlah Total\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"price_total\",\r\n                                text: \"Harga Total\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"fisik_total\",\r\n                                text: \"Fisik Total\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"pembayaran_total\",\r\n                                text: \"Pembayaran Total\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"status_af\",\r\n                                text: \"Status Admin Finance\",\r\n                                sort: true,\r\n                                formatter: (cell, row) => {\r\n                                  return row.status_barang === 0\r\n                                    ? 'proses'\r\n                                    : row.status_barang === 1\r\n                                    ? 'Setuju'\r\n                                    : 'Tidak Setuju';\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"status_d\",\r\n                                text: \"Status Pimpinan\",\r\n                                sort: true,\r\n                                formatter: (cell, row) => {\r\n                                  return row.status_barang === 0\r\n                                    ? 'proses'\r\n                                    : row.status_barang === 1\r\n                                    ? 'Setuju'\r\n                                    : 'Tidak Setuju';\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"aksi\", text: \"Aksi\", formatter: (cell, row, index) => {\r\n                                return (\r\n                                    <ButtonGroup>\r\n                                    <Button>\r\n                                        <Link\r\n                                        to={redirectPrefix + row.id}\r\n                                        id={\"tooltip_\" + row.id}\r\n                                        >\r\n                                        <i className=\"fas fa-user-edit\" />\r\n                                        </Link>\r\n                                    </Button>\r\n                                    <UncontrolledTooltip delay={0} target={\"tooltip_\" + row.id}>\r\n                                        Edit\r\n                                    </UncontrolledTooltip>\r\n                                    </ButtonGroup>\r\n                                )\r\n                                }\r\n                            },\r\n                            ]}\r\n                        >\r\n                            {(props) => (\r\n                            <div className=\"py-4 table-responsive\">\r\n                                <BootstrapTable\r\n                                remote\r\n                                {...props.baseProps}\r\n                                bootstrap4={true}\r\n                                bordered={false}\r\n                                hover={true}\r\n                                pagination={paginationFactory({ ...paginationOption })}\r\n                                onTableChange={handleTableChange}\r\n                                />\r\n                            </div>\r\n                            )}\r\n                    </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InvoicePO;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { \r\n    Card, \r\n    Button, \r\n    Row, \r\n    Col, \r\n    CardBody, \r\n    CardHeader, \r\n    UncontrolledTooltip, \r\n    ButtonGroup, \r\n    Collapse, \r\n    Form, \r\n    FormGroup, \r\n    Label, \r\n    Input \r\n} from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst ValidasiAdminFinance = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const redirectPrefix = `/admin/po/validasi-admin-finance/edit/`;\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allInvoicePo, setAllInvoicePo] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n  const [uomCode, setUomCode] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n  \r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, uomCode, description);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort, uomCode, description) => {\r\n    getInvoicePo(page, perPage, sort, uomCode, description);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setUomCode(uomCode);\r\n    setDescription(description);\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort,  uomCode, description)\r\n    }\r\n  }\r\n\r\n  \r\n  useEffect(() => {\r\n    getInvoicePo(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  // fungsi dari ambil data\r\n  const getInvoicePo = (page, perPage, currentSort) => {\r\n    \r\n    let filter = { \r\n      page: page, \r\n      per_page: perPage, \r\n      status_af:0,\r\n      status_af:0,\r\n      \r\n    };\r\n    const data = filter;\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/invoice-po/page`, data, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setAllInvoicePo(data.data.response);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const reset = () => {\r\n    setUomCode(\"\");\r\n    setDescription(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        \r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>Validasi Admin Finance</h3>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n              <h3 onClick={toggleOpen} >Search &nbsp;\r\n                  {\r\n                    isOpen === true ? <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i> : <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  }\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                        <Row md=\"12\">\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Kode Invoice</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Kode Uom\"\r\n                                value={uomCode}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, e.target.value, description)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Keterangan</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Deskripsi\"\r\n                                value={description}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, uomCode, e.target.value)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Button type=\"button\" onClick={reset} color=\"secondary\">Reset</Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Collapse>\r\n                    <ToolkitProvider\r\n                            rowNumber={rowIndex}\r\n                            data={allInvoicePo}\r\n                            keyField=\"id\"\r\n                            columns={[\r\n                            {\r\n                                dataField: \"no\",\r\n                                text: \"#\",\r\n                                sort: true,\r\n                                page: 1,\r\n                                formatter: (cell, row, index) => {\r\n                                let currentRow = ++index;\r\n                                return currentRow + rowIndex;\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"invoice_code\",\r\n                                text: \"Kode Invoice\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"code_po\",\r\n                                text: \"Kode PO\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"person_id\",\r\n                                text: \"Supplier\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"qty_total\",\r\n                                text: \"Jumlah Total\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"price_total\",\r\n                                text: \"Harga Total\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"fisik_total\",\r\n                                text: \"Fisik Total\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"pembayaran_total\",\r\n                                text: \"Pembayaran Total\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"status_af\",\r\n                                text: \"Status Admin Pro\",\r\n                                sort: true,\r\n                                formatter: (cell, row) => {\r\n                                  return row.status_barang === 0\r\n                                    ? 'proses'\r\n                                    : row.status_barang === 1\r\n                                    ? 'Setuju'\r\n                                    : 'Tidak Setuju';\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"status_d\",\r\n                                text: \"Status Pimpinan\",\r\n                                sort: true,\r\n                                formatter: (cell, row) => {\r\n                                  return row.status_barang === 0\r\n                                    ? 'proses'\r\n                                    : row.status_barang === 1\r\n                                    ? 'Setuju'\r\n                                    : 'Tidak Setuju';\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"aksi\", text: \"Aksi\", formatter: (cell, row, index) => {\r\n                                return (\r\n                                    <ButtonGroup>\r\n                                    <Button>\r\n                                        <Link\r\n                                        to={redirectPrefix + row.id}\r\n                                        id={\"tooltip_\" + row.id}\r\n                                        >\r\n                                        <i className=\"fas fa-user-edit\" />\r\n                                        </Link>\r\n                                    </Button>\r\n                                    <UncontrolledTooltip delay={0} target={\"tooltip_\" + row.id}>\r\n                                        Edit\r\n                                    </UncontrolledTooltip>\r\n                                    </ButtonGroup>\r\n                                )\r\n                                }\r\n                            },\r\n                            ]}\r\n                        >\r\n                            {(props) => (\r\n                            <div className=\"py-4 table-responsive\">\r\n                                <BootstrapTable\r\n                                remote\r\n                                {...props.baseProps}\r\n                                bootstrap4={true}\r\n                                bordered={false}\r\n                                hover={true}\r\n                                pagination={paginationFactory({ ...paginationOption })}\r\n                                onTableChange={handleTableChange}\r\n                                />\r\n                            </div>\r\n                            )}\r\n                    </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ValidasiAdminFinance;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { \r\n    Card, \r\n    Button, \r\n    Row, \r\n    Col, \r\n    CardBody, \r\n    CardHeader, \r\n    UncontrolledTooltip, \r\n    ButtonGroup, \r\n    Collapse, \r\n    Form, \r\n    FormGroup, \r\n    Label, \r\n    Input \r\n} from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst ValidasiPimpinan = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const redirectPrefix = `/admin/po/validasi-pimpinan/edit/`;\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allInvoicePo, setAllInvoicePo] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n  const [uomCode, setUomCode] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n  \r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, uomCode, description);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort, uomCode, description) => {\r\n    getInvoicePo(page, perPage, sort, uomCode, description);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setUomCode(uomCode);\r\n    setDescription(description);\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort,  uomCode, description)\r\n    }\r\n  }\r\n\r\n  \r\n  useEffect(() => {\r\n    getInvoicePo(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  // fungsi dari ambil data\r\n  const getInvoicePo = (page, perPage, currentSort) => {\r\n    \r\n    let filter = { \r\n      page: page, \r\n      per_page: perPage, \r\n      status_af:0,\r\n      status_d:0,\r\n      \r\n    };\r\n    const data = filter;\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/invoice-po/page`, data, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setAllInvoicePo(data.data.response);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const reset = () => {\r\n    setUomCode(\"\");\r\n    setDescription(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        \r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>Validasi Pimpinan</h3>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n              <h3 onClick={toggleOpen} >Search &nbsp;\r\n                  {\r\n                    isOpen === true ? <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i> : <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  }\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                        <Row md=\"12\">\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Kode Invoice</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Kode Uom\"\r\n                                value={uomCode}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, e.target.value, description)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Keterangan</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Deskripsi\"\r\n                                value={description}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, uomCode, e.target.value)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Button type=\"button\" onClick={reset} color=\"secondary\">Reset</Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Collapse>\r\n                    <ToolkitProvider\r\n                            rowNumber={rowIndex}\r\n                            data={allInvoicePo}\r\n                            keyField=\"id\"\r\n                            columns={[\r\n                            {\r\n                                dataField: \"no\",\r\n                                text: \"#\",\r\n                                sort: true,\r\n                                page: 1,\r\n                                formatter: (cell, row, index) => {\r\n                                let currentRow = ++index;\r\n                                return currentRow + rowIndex;\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"invoice_code\",\r\n                                text: \"Kode Invoice\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"code_po\",\r\n                                text: \"Kode PO\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"person_id\",\r\n                                text: \"Supplier\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"qty_total\",\r\n                                text: \"Jumlah Total\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"price_total\",\r\n                                text: \"Harga Total\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"fisik_total\",\r\n                                text: \"Fisik Total\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"pembayaran_total\",\r\n                                text: \"Pembayaran Total\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"status_af\",\r\n                                text: \"Status Admin Pro\",\r\n                                sort: true,\r\n                                formatter: (cell, row) => {\r\n                                  return row.status_barang === 0\r\n                                    ? 'proses'\r\n                                    : row.status_barang === 1\r\n                                    ? 'Setuju'\r\n                                    : 'Tidak Setuju';\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"status_d\",\r\n                                text: \"Status Pimpinan\",\r\n                                sort: true,\r\n                                formatter: (cell, row) => {\r\n                                  return row.status_barang === 0\r\n                                    ? 'proses'\r\n                                    : row.status_barang === 1\r\n                                    ? 'Setuju'\r\n                                    : 'Tidak Setuju';\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"aksi\", text: \"Aksi\", formatter: (cell, row, index) => {\r\n                                return (\r\n                                    <ButtonGroup>\r\n                                    <Button>\r\n                                        <Link\r\n                                        to={redirectPrefix + row.id}\r\n                                        id={\"tooltip_\" + row.id}\r\n                                        >\r\n                                        <i className=\"fas fa-user-edit\" />\r\n                                        </Link>\r\n                                    </Button>\r\n                                    <UncontrolledTooltip delay={0} target={\"tooltip_\" + row.id}>\r\n                                        Edit\r\n                                    </UncontrolledTooltip>\r\n                                    </ButtonGroup>\r\n                                )\r\n                                }\r\n                            },\r\n                            ]}\r\n                        >\r\n                            {(props) => (\r\n                            <div className=\"py-4 table-responsive\">\r\n                                <BootstrapTable\r\n                                remote\r\n                                {...props.baseProps}\r\n                                bootstrap4={true}\r\n                                bordered={false}\r\n                                hover={true}\r\n                                pagination={paginationFactory({ ...paginationOption })}\r\n                                onTableChange={handleTableChange}\r\n                                />\r\n                            </div>\r\n                            )}\r\n                    </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ValidasiPimpinan;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { \r\n    Card, \r\n    Button, \r\n    Row, \r\n    Col, \r\n    CardBody, \r\n    CardHeader, \r\n    UncontrolledTooltip, \r\n    ButtonGroup, \r\n    Collapse, \r\n    Form, \r\n    FormGroup, \r\n    Label, \r\n    Input \r\n} from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst HistoryInvoicePo = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const redirectPrefix = `/admin/po/history-invoice-po/edit/`;\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allInvoicePo, setAllInvoicePo] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n  const [uomCode, setUomCode] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n  \r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, uomCode, description);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort, uomCode, description) => {\r\n    getInvoicePo(page, perPage, sort, uomCode, description);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setUomCode(uomCode);\r\n    setDescription(description);\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort,  uomCode, description)\r\n    }\r\n  }\r\n\r\n  \r\n  useEffect(() => {\r\n    getInvoicePo(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  // fungsi dari ambil data\r\n  const getInvoicePo = (page, perPage, currentSort) => {\r\n    \r\n    let filter = { \r\n      page: page, \r\n      per_page: perPage, \r\n      \r\n    };\r\n    const data = filter;\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/invoice-po/page`, data, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setAllInvoicePo(data.data.response);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const reset = () => {\r\n    setUomCode(\"\");\r\n    setDescription(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        \r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>Invoice PO</h3>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n              <h3 onClick={toggleOpen} >Search &nbsp;\r\n                  {\r\n                    isOpen === true ? <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i> : <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  }\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                        <Row md=\"12\">\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Kode Invoice</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Kode Uom\"\r\n                                value={uomCode}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, e.target.value, description)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Keterangan</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Deskripsi\"\r\n                                value={description}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, uomCode, e.target.value)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Button type=\"button\" onClick={reset} color=\"secondary\">Reset</Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Collapse>\r\n                    <ToolkitProvider\r\n                            rowNumber={rowIndex}\r\n                            data={allInvoicePo}\r\n                            keyField=\"id\"\r\n                            columns={[\r\n                            {\r\n                                dataField: \"no\",\r\n                                text: \"#\",\r\n                                sort: true,\r\n                                page: 1,\r\n                                formatter: (cell, row, index) => {\r\n                                let currentRow = ++index;\r\n                                return currentRow + rowIndex;\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"invoice_code\",\r\n                                text: \"Kode Invoice\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"code_po\",\r\n                                text: \"Kode PO\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"person_id\",\r\n                                text: \"Supplier\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"qty_total\",\r\n                                text: \"Jumlah Total\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"price_total\",\r\n                                text: \"Harga Total\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"fisik_total\",\r\n                                text: \"Fisik Total\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"pembayaran_total\",\r\n                                text: \"Pembayaran Total\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"status_af\",\r\n                                text: \"Status Admin Finance\",\r\n                                sort: true,\r\n                                formatter: (cell, row) => {\r\n                                  return row.status_barang === 0\r\n                                    ? 'proses'\r\n                                    : row.status_barang === 1\r\n                                    ? 'Setuju'\r\n                                    : 'Tidak Setuju';\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"status_d\",\r\n                                text: \"Status Pimpinan\",\r\n                                sort: true,\r\n                                formatter: (cell, row) => {\r\n                                  return row.status_barang === 0\r\n                                    ? 'proses'\r\n                                    : row.status_barang === 1\r\n                                    ? 'Setuju'\r\n                                    : 'Tidak Setuju';\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"aksi\", text: \"Aksi\", formatter: (cell, row, index) => {\r\n                                return (\r\n                                    <ButtonGroup>\r\n                                    <Button>\r\n                                        <Link\r\n                                        to={redirectPrefix + row.id}\r\n                                        id={\"tooltip_\" + row.id}\r\n                                        >\r\n                                        <i className=\"fas fa-user-edit\" />\r\n                                        </Link>\r\n                                    </Button>\r\n                                    <UncontrolledTooltip delay={0} target={\"tooltip_\" + row.id}>\r\n                                        Edit\r\n                                    </UncontrolledTooltip>\r\n                                    </ButtonGroup>\r\n                                )\r\n                                }\r\n                            },\r\n                            ]}\r\n                        >\r\n                            {(props) => (\r\n                            <div className=\"py-4 table-responsive\">\r\n                                <BootstrapTable\r\n                                remote\r\n                                {...props.baseProps}\r\n                                bootstrap4={true}\r\n                                bordered={false}\r\n                                hover={true}\r\n                                pagination={paginationFactory({ ...paginationOption })}\r\n                                onTableChange={handleTableChange}\r\n                                />\r\n                            </div>\r\n                            )}\r\n                    </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HistoryInvoicePo;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { \r\n    Card, \r\n    Button, \r\n    Row, \r\n    Col, \r\n    CardBody, \r\n    CardHeader, \r\n    UncontrolledTooltip, \r\n    ButtonGroup, \r\n    Collapse, \r\n    Form, \r\n    FormGroup, \r\n    Label, \r\n    Input \r\n} from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst BuktiKasKeluar = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const redirectPrefix = `/admin/po/bukti-kas-keluar/edit/`;\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allBuktiKasKeluar, setAllBuktiKasKeluar] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n  const [uomCode, setUomCode] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n  \r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, uomCode, description);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort, uomCode, description) => {\r\n    getBuktiKasKeluar(page, perPage, sort, uomCode, description);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setUomCode(uomCode);\r\n    setDescription(description);\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort,  uomCode, description)\r\n    }\r\n  }\r\n\r\n  \r\n  useEffect(() => {\r\n    getBuktiKasKeluar(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  // fungsi dari ambil data\r\n  const getBuktiKasKeluar = (page, perPage, currentSort) => {\r\n    \r\n    let filter = { \r\n      page: page, \r\n      per_page: perPage, \r\n      \r\n    };\r\n    const data = filter;\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/bkk/page`, data, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setAllBuktiKasKeluar(data.data.response);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const reset = () => {\r\n    setUomCode(\"\");\r\n    setDescription(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        \r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>Bukti Kas Keluar</h3>\r\n                  <div style={{ textAlign: 'right' }}>\r\n                    <Link className=\"btn btn-info\" to=\"/admin/bukti-kas-keluar/create\">\r\n                      Buat Bukti Kas Keluar\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n              <h3 onClick={toggleOpen} >Search &nbsp;\r\n                  {\r\n                    isOpen === true ? <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i> : <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  }\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                        <Row md=\"12\">\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Kode Invoice</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Kode Uom\"\r\n                                value={uomCode}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, e.target.value, description)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Keterangan</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Deskripsi\"\r\n                                value={description}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, uomCode, e.target.value)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Button type=\"button\" onClick={reset} color=\"secondary\">Reset</Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Collapse>\r\n                    <ToolkitProvider\r\n                            rowNumber={rowIndex}\r\n                            data={allBuktiKasKeluar}\r\n                            keyField=\"id\"\r\n                            columns={[\r\n                            {\r\n                                dataField: \"no\",\r\n                                text: \"#\",\r\n                                sort: true,\r\n                                page: 1,\r\n                                formatter: (cell, row, index) => {\r\n                                let currentRow = ++index;\r\n                                return currentRow + rowIndex;\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"bkk_code\",\r\n                                text: \"Kode BKK\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"code_invoice\",\r\n                                text: \"Kode Invoice\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"person_id\",\r\n                                text: \"Supplier\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"pembayaran_total\",\r\n                                text: \"Pembayaran Total\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"status_af\",\r\n                                text: \"Status Admin Finance\",\r\n                                sort: true,\r\n                                formatter: (cell, row) => {\r\n                                  return row.status_barang === 0\r\n                                    ? 'proses'\r\n                                    : row.status_barang === 1\r\n                                    ? 'Setuju'\r\n                                    : 'Tidak Setuju';\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"status_d\",\r\n                                text: \"Status Pimpinan\",\r\n                                sort: true,\r\n                                formatter: (cell, row) => {\r\n                                  return row.status_barang === 0\r\n                                    ? 'proses'\r\n                                    : row.status_barang === 1\r\n                                    ? 'Setuju'\r\n                                    : 'Tidak Setuju';\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"aksi\", text: \"Aksi\", formatter: (cell, row, index) => {\r\n                                return (\r\n                                    <ButtonGroup>\r\n                                    <Button>\r\n                                        <Link\r\n                                        to={redirectPrefix + row.id}\r\n                                        id={\"tooltip_\" + row.id}\r\n                                        >\r\n                                        <i className=\"fas fa-user-edit\" />\r\n                                        </Link>\r\n                                    </Button>\r\n                                    <UncontrolledTooltip delay={0} target={\"tooltip_\" + row.id}>\r\n                                        Edit\r\n                                    </UncontrolledTooltip>\r\n                                    </ButtonGroup>\r\n                                )\r\n                                }\r\n                            },\r\n                            ]}\r\n                        >\r\n                            {(props) => (\r\n                            <div className=\"py-4 table-responsive\">\r\n                                <BootstrapTable\r\n                                remote\r\n                                {...props.baseProps}\r\n                                bootstrap4={true}\r\n                                bordered={false}\r\n                                hover={true}\r\n                                pagination={paginationFactory({ ...paginationOption })}\r\n                                onTableChange={handleTableChange}\r\n                                />\r\n                            </div>\r\n                            )}\r\n                    </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BuktiKasKeluar;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { \r\n    Card, \r\n    Button, \r\n    Row, \r\n    Col, \r\n    CardBody, \r\n    CardHeader, \r\n    UncontrolledTooltip, \r\n    ButtonGroup, \r\n    Collapse, \r\n    Form, \r\n    FormGroup, \r\n    Label, \r\n    Input \r\n} from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst ValidasiKepalaFinance = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const redirectPrefix = `/admin/po/bukti-kas-keluar/validasi-kepala-finance/edit/`;\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allBuktiKasKeluar, setAllBuktiKasKeluar] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n  const [uomCode, setUomCode] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n  \r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, uomCode, description);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort, uomCode, description) => {\r\n    getBuktiKasKeluar(page, perPage, sort, uomCode, description);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setUomCode(uomCode);\r\n    setDescription(description);\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort,  uomCode, description)\r\n    }\r\n  }\r\n\r\n  \r\n  useEffect(() => {\r\n    getBuktiKasKeluar(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  // fungsi dari ambil data\r\n  const getBuktiKasKeluar = (page, perPage, currentSort) => {\r\n    \r\n    let filter = { \r\n      page: page, \r\n      per_page: perPage, \r\n      \r\n    };\r\n    const data = filter;\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/bkk/page`, data, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setAllBuktiKasKeluar(data.data.response);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const reset = () => {\r\n    setUomCode(\"\");\r\n    setDescription(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        \r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>Validasi Kepala Finance</h3>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n              <h3 onClick={toggleOpen} >Search &nbsp;\r\n                  {\r\n                    isOpen === true ? <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i> : <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  }\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                        <Row md=\"12\">\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Kode Invoice</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Kode Uom\"\r\n                                value={uomCode}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, e.target.value, description)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Keterangan</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Deskripsi\"\r\n                                value={description}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, uomCode, e.target.value)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Button type=\"button\" onClick={reset} color=\"secondary\">Reset</Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Collapse>\r\n                    <ToolkitProvider\r\n                            rowNumber={rowIndex}\r\n                            data={allBuktiKasKeluar}\r\n                            keyField=\"id\"\r\n                            columns={[\r\n                            {\r\n                                dataField: \"no\",\r\n                                text: \"#\",\r\n                                sort: true,\r\n                                page: 1,\r\n                                formatter: (cell, row, index) => {\r\n                                let currentRow = ++index;\r\n                                return currentRow + rowIndex;\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"bkk_code\",\r\n                                text: \"Kode BKK\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"code_invoice\",\r\n                                text: \"Kode Invoice\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"person_id\",\r\n                                text: \"Supplier\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"pembayaran_total\",\r\n                                text: \"Pembayaran Total\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"status_af\",\r\n                                text: \"Status Admin Finance\",\r\n                                sort: true,\r\n                                formatter: (cell, row) => {\r\n                                  return row.status_barang === 0\r\n                                    ? 'proses'\r\n                                    : row.status_barang === 1\r\n                                    ? 'Setuju'\r\n                                    : 'Tidak Setuju';\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"status_d\",\r\n                                text: \"Status Pimpinan\",\r\n                                sort: true,\r\n                                formatter: (cell, row) => {\r\n                                  return row.status_barang === 0\r\n                                    ? 'proses'\r\n                                    : row.status_barang === 1\r\n                                    ? 'Setuju'\r\n                                    : 'Tidak Setuju';\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"aksi\", text: \"Aksi\", formatter: (cell, row, index) => {\r\n                                return (\r\n                                    <ButtonGroup>\r\n                                    <Button>\r\n                                        <Link\r\n                                        to={redirectPrefix + row.id}\r\n                                        id={\"tooltip_\" + row.id}\r\n                                        >\r\n                                        <i className=\"fas fa-user-edit\" />\r\n                                        </Link>\r\n                                    </Button>\r\n                                    <UncontrolledTooltip delay={0} target={\"tooltip_\" + row.id}>\r\n                                        Edit\r\n                                    </UncontrolledTooltip>\r\n                                    </ButtonGroup>\r\n                                )\r\n                                }\r\n                            },\r\n                            ]}\r\n                        >\r\n                            {(props) => (\r\n                            <div className=\"py-4 table-responsive\">\r\n                                <BootstrapTable\r\n                                remote\r\n                                {...props.baseProps}\r\n                                bootstrap4={true}\r\n                                bordered={false}\r\n                                hover={true}\r\n                                pagination={paginationFactory({ ...paginationOption })}\r\n                                onTableChange={handleTableChange}\r\n                                />\r\n                            </div>\r\n                            )}\r\n                    </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ValidasiKepalaFinance;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { \r\n    Card, \r\n    Button, \r\n    Row, \r\n    Col, \r\n    CardBody, \r\n    CardHeader, \r\n    UncontrolledTooltip, \r\n    ButtonGroup, \r\n    Collapse, \r\n    Form, \r\n    FormGroup, \r\n    Label, \r\n    Input \r\n} from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst ValidasiPimpinan = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const redirectPrefix = `/admin/po/bukti-kas-keluar/validasi-pimpinan/edit/`;\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allBuktiKasKeluar, setAllBuktiKasKeluar] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n  const [uomCode, setUomCode] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n  \r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, uomCode, description);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort, uomCode, description) => {\r\n    getBuktiKasKeluar(page, perPage, sort, uomCode, description);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setUomCode(uomCode);\r\n    setDescription(description);\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort,  uomCode, description)\r\n    }\r\n  }\r\n\r\n  \r\n  useEffect(() => {\r\n    getBuktiKasKeluar(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  // fungsi dari ambil data\r\n  const getBuktiKasKeluar = (page, perPage, currentSort) => {\r\n    \r\n    let filter = { \r\n      page: page, \r\n      per_page: perPage, \r\n      \r\n    };\r\n    const data = filter;\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/bkk/page`, data, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setAllBuktiKasKeluar(data.data.response);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const reset = () => {\r\n    setUomCode(\"\");\r\n    setDescription(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        \r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>Validasi Pimpinan</h3>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n              <h3 onClick={toggleOpen} >Search &nbsp;\r\n                  {\r\n                    isOpen === true ? <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i> : <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  }\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                        <Row md=\"12\">\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Kode Invoice</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Kode Uom\"\r\n                                value={uomCode}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, e.target.value, description)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Keterangan</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Deskripsi\"\r\n                                value={description}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, uomCode, e.target.value)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Button type=\"button\" onClick={reset} color=\"secondary\">Reset</Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Collapse>\r\n                    <ToolkitProvider\r\n                            rowNumber={rowIndex}\r\n                            data={allBuktiKasKeluar}\r\n                            keyField=\"id\"\r\n                            columns={[\r\n                            {\r\n                                dataField: \"no\",\r\n                                text: \"#\",\r\n                                sort: true,\r\n                                page: 1,\r\n                                formatter: (cell, row, index) => {\r\n                                let currentRow = ++index;\r\n                                return currentRow + rowIndex;\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"bkk_code\",\r\n                                text: \"Kode BKK\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"code_invoice\",\r\n                                text: \"Kode Invoice\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"person_id\",\r\n                                text: \"Supplier\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"pembayaran_total\",\r\n                                text: \"Pembayaran Total\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"status_af\",\r\n                                text: \"Status Admin Finance\",\r\n                                sort: true,\r\n                                formatter: (cell, row) => {\r\n                                  return row.status_barang === 0\r\n                                    ? 'proses'\r\n                                    : row.status_barang === 1\r\n                                    ? 'Setuju'\r\n                                    : 'Tidak Setuju';\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"status_d\",\r\n                                text: \"Status Pimpinan\",\r\n                                sort: true,\r\n                                formatter: (cell, row) => {\r\n                                  return row.status_barang === 0\r\n                                    ? 'proses'\r\n                                    : row.status_barang === 1\r\n                                    ? 'Setuju'\r\n                                    : 'Tidak Setuju';\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"aksi\", text: \"Aksi\", formatter: (cell, row, index) => {\r\n                                return (\r\n                                    <ButtonGroup>\r\n                                    <Button>\r\n                                        <Link\r\n                                        to={redirectPrefix + row.id}\r\n                                        id={\"tooltip_\" + row.id}\r\n                                        >\r\n                                        <i className=\"fas fa-user-edit\" />\r\n                                        </Link>\r\n                                    </Button>\r\n                                    <UncontrolledTooltip delay={0} target={\"tooltip_\" + row.id}>\r\n                                        Edit\r\n                                    </UncontrolledTooltip>\r\n                                    </ButtonGroup>\r\n                                )\r\n                                }\r\n                            },\r\n                            ]}\r\n                        >\r\n                            {(props) => (\r\n                            <div className=\"py-4 table-responsive\">\r\n                                <BootstrapTable\r\n                                remote\r\n                                {...props.baseProps}\r\n                                bootstrap4={true}\r\n                                bordered={false}\r\n                                hover={true}\r\n                                pagination={paginationFactory({ ...paginationOption })}\r\n                                onTableChange={handleTableChange}\r\n                                />\r\n                            </div>\r\n                            )}\r\n                    </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ValidasiPimpinan;\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { \r\n    Card, \r\n    Button, \r\n    Row, \r\n    Col, \r\n    CardBody, \r\n    CardHeader, \r\n    UncontrolledTooltip, \r\n    ButtonGroup, \r\n    Collapse, \r\n    Form, \r\n    FormGroup, \r\n    Label, \r\n    Input \r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst HistoryBuktiKasKeluar = () => {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [allBuktiKasKeluar, setAllBuktiKasKeluar] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n  const [uomCode, setUomCode] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n  \r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, uomCode, description);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const updateDataTable = (page, perPage, sort, uomCode, description) => {\r\n    getBuktiKasKeluar(page, perPage, sort, uomCode, description);\r\n    setPage(page);\r\n    setPerpage(perPage);\r\n    setRowIndex((page - 1) * perPage);\r\n    setCurrentSort(sort);\r\n    setUomCode(uomCode);\r\n    setDescription(description);\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort,  uomCode, description)\r\n    }\r\n  }\r\n\r\n  \r\n  useEffect(() => {\r\n    getBuktiKasKeluar(page, perPage, currentSort);\r\n  }, []);\r\n\r\n  // fungsi dari ambil data\r\n  const getBuktiKasKeluar = (page, perPage, currentSort) => {\r\n    \r\n    let filter = { \r\n      page: page, \r\n      per_page: perPage, \r\n      \r\n    };\r\n    const data = filter;\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/bkk/page`, data, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setAllBuktiKasKeluar(data.data.response);\r\n        setPage(data.data.current_page + 1);\r\n        setPerpage(data.data.per_page);\r\n        setTotalItem(data.data.total_item);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const reset = () => {\r\n    setUomCode(\"\");\r\n    setDescription(\"\");\r\n    updateDataTable(1, perPage, currentSort, \"\", \"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        \r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  <h3>Histori Bukti Kas Keluar</h3>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n              <h3 onClick={toggleOpen} >Search &nbsp;\r\n                  {\r\n                    isOpen === true ? <i className=\"fa fa-angle-down\" aria-hidden=\"true\"></i> : <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n                  }\r\n                </h3>\r\n                <Collapse isOpen={isOpen}>\r\n                  <Form>\r\n                        <Row md=\"12\">\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Kode Invoice</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Kode Uom\"\r\n                                value={uomCode}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, e.target.value, description)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"3\">\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"exampleFormControlSelect3\">Keterangan</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Masukan Deskripsi\"\r\n                                value={description}\r\n                                onChange={e => updateDataTable(1, perPage, currentSort, uomCode, e.target.value)}\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Button type=\"button\" onClick={reset} color=\"secondary\">Reset</Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Collapse>\r\n                    <ToolkitProvider\r\n                            rowNumber={rowIndex}\r\n                            data={allBuktiKasKeluar}\r\n                            keyField=\"id\"\r\n                            columns={[\r\n                            {\r\n                                dataField: \"no\",\r\n                                text: \"#\",\r\n                                sort: true,\r\n                                page: 1,\r\n                                formatter: (cell, row, index) => {\r\n                                let currentRow = ++index;\r\n                                return currentRow + rowIndex;\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"username\",\r\n                                text: \"Username\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"bkk_code\",\r\n                                text: \"Kode Invoice\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"code_invoice\",\r\n                                text: \"Kode Invoice\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"person_id\",\r\n                                text: \"Supplier\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"pembayaran_total\",\r\n                                text: \"Pembayaran Total\",\r\n                                sort: true,\r\n                            },\r\n                            {\r\n                                dataField: \"status_af\",\r\n                                text: \"Status Admin Finance\",\r\n                                sort: true,\r\n                                formatter: (cell, row) => {\r\n                                  return row.status_barang === 0\r\n                                    ? 'proses'\r\n                                    : row.status_barang === 1\r\n                                    ? 'Setuju'\r\n                                    : 'Tidak Setuju';\r\n                                },\r\n                            },\r\n                            {\r\n                                dataField: \"status_d\",\r\n                                text: \"Status Pimpinan\",\r\n                                sort: true,\r\n                                formatter: (cell, row) => {\r\n                                  return row.status_barang === 0\r\n                                    ? 'proses'\r\n                                    : row.status_barang === 1\r\n                                    ? 'Setuju'\r\n                                    : 'Tidak Setuju';\r\n                                },\r\n                            },\r\n                            ]}\r\n                        >\r\n                            {(props) => (\r\n                            <div className=\"py-4 table-responsive\">\r\n                                <BootstrapTable\r\n                                remote\r\n                                {...props.baseProps}\r\n                                bootstrap4={true}\r\n                                bordered={false}\r\n                                hover={true}\r\n                                pagination={paginationFactory({ ...paginationOption })}\r\n                                onTableChange={handleTableChange}\r\n                                />\r\n                            </div>\r\n                            )}\r\n                    </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HistoryBuktiKasKeluar;\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard PRO React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-pro-react\r\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport Login from \"views/pages/login/Index.js\";\r\nimport Users from \"views/pages/user/Index.js\";\r\nimport CreateUser from \"views/pages/user/Create.js\";\r\nimport EditUser from \"views/pages/user/Edit.js\";\r\nimport EditPrivileges from \"views/pages/user/privileges/Edit.js\";\r\n\r\nimport Alamat from \"views/pages/address/Index.js\";\r\nimport CreateAlamat from \"views/pages/address/Create.js\";\r\nimport EditAlamat from \"views/pages/address/Edit.js\";\r\n\r\nimport Account from \"views/pages/account/Index.js\";\r\nimport CreateAccount from \"views/pages/account/Create.js\";\r\nimport EditAccount from \"views/pages/account/Edit.js\";\r\n\r\nimport Asset from \"views/pages/asset/Index.js\";\r\nimport CreateAsset from \"views/pages/asset/Create.js\";\r\nimport EditAsset from \"views/pages/asset/Edit.js\";\r\n\r\nimport TypeAsset from \"views/pages/asset/type/Index.js\";\r\nimport CreateTypeAsset from \"views/pages/asset/type/Create.js\";\r\nimport EditTypeAsset from \"views/pages/asset/type/Edit.js\";\r\n\r\nimport Absen from \"views/pages/absen/Index.js\";\r\n\r\nimport Departemen from \"views/pages/departemen/Index.js\";\r\nimport CreateDepartemen from \"views/pages/departemen/Create.js\";\r\nimport EditDepartemen from \"views/pages/departemen/Edit.js\";\r\n\r\nimport Uom from \"views/pages/satuan/Index.js\";\r\nimport CreateUom from \"views/pages/satuan/Create\";\r\nimport EditUom from \"views/pages/satuan/Edit.js\";\r\n\r\nimport Customer from \"views/pages/Customer/Index.js\";\r\nimport CreateCustomer from \"views/pages/Customer/Create.js\";\r\nimport EditCustomer from \"views/pages/Customer/Edit.js\";\r\n\r\nimport Coa from \"views/pages/coa/Index.js\";\r\nimport CreateCoa from \"views/pages/coa/Create.js\";\r\nimport EditCoa from \"views/pages/coa/Edit.js\";\r\n\r\nimport Item from \"views/pages/item/Index.js\";\r\nimport CreateItem from \"views/pages/item/itemMain/Create.js\";\r\nimport EditItem from \"views/pages/item/itemMain/Edit.js\";\r\nimport DetailItems from \"views/pages/item/itemMain/detail/Index.js\";\r\n\r\nimport ItemCategory from \"views/pages/item/itemCategory/Index.js\";\r\nimport CreateItemCategory from \"views/pages/item/itemCategory/Create.js\";\r\nimport EditItemCategory from \"views/pages/item/itemCategory/Edit.js\";\r\n\r\nimport Warehouse from \"views/pages/Warehouse/index.js\";\r\nimport warehousepusat from \"views/pages/Warehouse/WarehousePusat/Index.js\";\r\nimport CreateWarehousePusat from \"views/pages/Warehouse/WarehousePusat/Create.js\";\r\nimport EditWarehousePusat from \"views/pages/Warehouse/WarehousePusat/Edit.js\";\r\n\r\nimport warehousetoko from \"views/pages/Warehouse/WarehouseToko/Index.js\";\r\nimport CreateWarehouseToko from \"views/pages/Warehouse/WarehouseToko/Create.js\";\r\nimport EditWarehouseToko from \"views/pages/Warehouse/WarehouseToko/Edit.js\";\r\n\r\nimport warehousegudang from \"views/pages/Warehouse/WarehouseGudang/Index.js\";\r\nimport CreateWarehouseGudang from \"views/pages/Warehouse/WarehouseGudang/Create.js\";\r\nimport EditWarehouseGudang from \"views/pages/Warehouse/WarehouseGudang/Edit.js\";\r\n\r\nimport ItemSubCategory from \"views/pages/item/itemSubCategory/Index.js\";\r\nimport CreateItemSubCategory from \"views/pages/item/itemSubCategory/Create.js\";\r\n\r\nimport ItemFunction from \"views/pages/item/itemFunction/Index.js\";\r\nimport CreateItemFunction from \"views/pages/item/itemFunction/Create.js\";\r\n\r\nimport ItemSubFunction from \"views/pages/item/itemSubFunction/Index.js\";\r\nimport CreateItemSubFunction from \"views/pages/item/itemSubFunction/Create.js\";\r\n\r\nimport ItemMerek from \"views/pages/item/itemMerek/Index.js\";\r\nimport CreateItemMerek from \"views/pages/item/itemMerek/Create.js\";\r\n\r\nimport ItemSubMerek from \"views/pages/item/itemSubMerek/Index.js\";\r\nimport CreateItemSubMerek from \"views/pages/item/itemSubMerek/Create.js\";\r\n\r\nimport ItemGrade from \"views/pages/item/itemGrade/Index.js\";\r\nimport CreateItemGrade from \"views/pages/item/itemGrade/Create.js\";\r\n\r\nimport Karyawan from \"views/pages/karyawan/Index.js\";\r\nimport CreateKaryawan from \"views/pages/karyawan/Create.js\";\r\nimport EditKaryawan from \"views/pages/karyawan/Edit.js\";\r\n\r\nimport Komisi from \"views/pages/komisi/Index.js\";\r\n\r\nimport Salary from \"views/pages/salary/Index.js\";\r\n\r\nimport Person from \"views/pages/person/Index.js\";\r\nimport CreatePerson from \"views/pages/person/Create.js\";\r\nimport EditPerson from \"views/pages/person/Edit.js\";\r\n\r\nimport Pajak from \"views/pages/pajak/Index.js\";\r\nimport CreatePajak from \"views/pages/pajak/Create.js\";\r\nimport EditPajak from \"views/pages/pajak/Edit.js\";\r\n\r\nimport Rak from \"views/pages/Rak/Index.js\";\r\nimport CreateRak from \"views/pages/Rak/Create\";\r\n\r\nimport Info from \"views/pages/info/Index.js\";\r\n\r\nimport Po from \"views/pages/po/Index.js\";\r\n\r\nimport ValidasiPo from \"views/pages/po/ValidasiPo/Index.js\";\r\nimport EditValidasiPo from \"views/pages/po/ValidasiPo/Edit.js\";\r\n\r\nimport AdminApprove from \"views/pages/po/AdminApprove/Index.js\";\r\nimport EditAdminApprove from \"views/pages/po/AdminApprove/Edit.js\";\r\n\r\nimport ValidatorPo from \"views/pages/po/ValidatorPo/Index.js\";\r\nimport EditValidatorPo from \"views/pages/po/ValidatorPo/Edit.js\";\r\n\r\nimport ReceivingSO from \"views/pages/so/ReceivingSo/Index.js\";\r\nimport EditReceivingSO from \"views/pages/so/ReceivingSo/Edit.js\";\r\n\r\nimport ReceivingPO from \"views/pages/po/ReceivingPo/Index.js\";\r\n\r\nimport CreatePo from \"views/pages/po/Create.js\";\r\nimport EditPo from \"views/pages/po/Edit.js\";\r\nimport HistoryPo from \"views/pages/po/History.js\";\r\nimport PoReturn from \"views/pages/poReturn/Index.js\";\r\nimport CreatePoReturn from \"views/pages/poReturn/Create.js\";\r\nimport EditPoReturn from \"views/pages/poReturn/Edit.js\";\r\n\r\nimport So from \"views/pages/so/Index.js\";\r\n\r\nimport ValidasiSo from \"views/pages/so/ValidasiSo/Index.js\";\r\nimport EditValidasiSo from \"views/pages/so/ValidasiSo/Edit.js\";\r\n\r\nimport AdminApproveSo from \"views/pages/so/AdminApprove/Index.js\";\r\nimport EditAdminApproveSo from \"views/pages/so/AdminApprove/Edit.js\";\r\n\r\nimport PimpinanSo from \"views/pages/so/ValidatorSo/Index.js\";\r\nimport EditPimpinanSo from \"views/pages/so/ValidatorSo/Edit.js\";\r\n\r\nimport CreateSo from \"views/pages/so/Create.js\";\r\nimport EditSo from \"views/pages/so/Edit.js\";\r\nimport SoReturn from \"views/pages/soReturn/Index.js\";\r\nimport CreateSoReturn from \"views/pages/soReturn/Create.js\";\r\nimport EditSoReturn from \"views/pages/soReturn/Edit.js\";\r\n\r\nimport SoHistory from \"views/pages/so/soHistory/Index.js\";\r\nimport SoKasir from \"views/pages/so/soKasir/Create.js\";\r\nimport SoReturHistory from \"views/pages/so/SoReturHistory\";\r\n\r\nimport Price from \"views/pages/Price/Index.js\";\r\nimport EditPrice from \"views/pages/Price/Edit.js\";\r\n\r\nimport StockOpname from \"views/pages/stockOpname/Index.js\";\r\nimport CreateStockOpname from \"views/pages/stockOpname/Create.js\";\r\nimport EditStockOpname from \"views/pages/stockOpname/Edit.js\";\r\nimport AdjustStockOpname from \"views/pages/stockOpname/Adjust.js\";\r\n\r\nimport Promo from \"views/pages/promo/Index.js\";\r\nimport CreatePromo from \"views/pages/promo/Create.js\";\r\nimport EditPromo from \"views/pages/promo/Edit.js\";\r\n\r\nimport ItemStock from \"views/pages/itemStock/Index.js\";\r\n\r\nimport salesCanvasing from \"views/pages/salesCanvasing/Index.js\";\r\nimport HistorysalesCanvasing from \"views/pages/salesCanvasing/History.js\";\r\nimport SalesTarcking from \"views/pages/salesCanvasing/salesTrack/Index.js\";\r\n\r\nimport TransferStock from \"views/pages/transferStock/Index.js\";\r\nimport CreateTransferStock from \"views/pages/transferStock/Create.js\";\r\nimport EditTransferStock from \"views/pages/transferStock/Edit.js\";\r\n\r\nimport Bkm from \"views/pages/bkm/Index.js\";\r\nimport CreateBkm from \"views/pages/bkm/Create.js\";\r\nimport EditBkm from \"views/pages/bkm/Edit.js\";\r\n\r\nimport Jurnal from \"views/pages/jurnal/Index.js\";\r\nimport CreateJurnal from \"views/pages/jurnal/Create.js\";\r\n\r\nimport TransferHistory from \"views/pages/inventory/TransferHistory.js\";\r\n\r\nimport {\r\n  UpdateImage,\r\n  UploadImage,\r\n  MainList,\r\n  UpdateBanner,\r\n  UploadBanner,\r\n} from \"views/pages/admin\";\r\n\r\nimport {\r\n  Create as CreateJangkaWaktu,\r\n  MainJangka,\r\n  Update as UpdateJangkaWaktu,\r\n} from \"views/pages/master\";\r\n\r\nimport PoReturHistory from \"views/pages/po/SoReturHistory\";\r\nimport UpdateImageItem from \"views/pages/admin/UpdateImageItem\";\r\nimport PermintaanBarang from \"views/pages/po/PermintaanBarang/Index.js\";\r\nimport CreatePermintaanBarang from \"views/pages/po/PermintaanBarang/PermintaanBarang/Create.js\"\r\n\r\nimport MemoKurirPO from \"views/pages/po/MemoKurirPo/Index.js\";\r\nimport InvoicePO from \"views/pages/po/InvoicePo/Index.js\";\r\nimport BuktiKasKeluar from \"views/pages/po/BuktiKasKeluar/Index.js\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/login\",\r\n    name: \"Login\",\r\n    miniName: \"L\",\r\n    component: Login,\r\n    layout: \"/auth\",\r\n    hidden: true,\r\n  },\r\n  {\r\n    collapse: true,\r\n    name: \"Master\",\r\n    icon: \"ni ni-folder-17\",\r\n    state: \"MasterCollapse\",\r\n    roles: [\r\n      \"ROLE_SUPERADMIN\",\r\n      \"ROLE_ADMIN\",\r\n      \"ROLE_KARYAWAN\",\r\n      \"ROLE_USER\",\r\n      \"ROLE_OWNER\",\r\n    ],\r\n    views: [\r\n      {\r\n        path: \"/jangka-waktu/update/:id\",\r\n        name: \"Update Jangka Waktu\",\r\n        miniName: \"UJW\",\r\n        component: UpdateJangkaWaktu,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/jangka-waktu/create\",\r\n        name: \"Create Jangka Waktu\",\r\n        miniName: \"CJW\",\r\n        component: CreateJangkaWaktu,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/jangka-waktu\",\r\n        name: \"Jangka Waktu\",\r\n        miniName: \"JW\",\r\n        component: MainJangka,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/warehouse-gudang/edit/:id\",\r\n        name: \"Edit Warehouse Pusat\",\r\n        miniName: \"EWP\",\r\n        component: EditWarehouseGudang,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/warehouse-gudang/create\",\r\n        name: \"Create Warehouse Pusat\",\r\n        miniName: \"CWS\",\r\n        component: CreateWarehouseGudang,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/warehouse-gudang\",\r\n        name: \"Warehouse Gudang\",\r\n        miniName: \"WT\",\r\n        component: warehousegudang,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/warehouse-toko/edit/:id\",\r\n        name: \"Edit Warehouse Toko\",\r\n        miniName: \"EWT\",\r\n        component: EditWarehouseToko,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/warehouse-toko/create\",\r\n        name: \"Create Warehouse Toko\",\r\n        miniName: \"CWT\",\r\n        component: CreateWarehouseToko,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/warehouse-toko\",\r\n        name: \"Warehouse Toko\",\r\n        miniName: \"WT\",\r\n        component: warehousetoko,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/warehouse-pusat/edit/:id\",\r\n        name: \"Edit Warehouse Pusat\",\r\n        miniName: \"EWP\",\r\n        component: EditWarehousePusat,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/warehouse-pusat/create\",\r\n        name: \"Create Warehouse Pusat\",\r\n        miniName: \"CWS\",\r\n        component: CreateWarehousePusat,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/warehouse-pusat\",\r\n        name: \"Warehouse Pusat\",\r\n        miniName: \"WT\",\r\n        component: warehousepusat,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/warehouse\",\r\n        name: \"Warehouse\",\r\n        miniName: \"W\",\r\n        component: Warehouse,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/rak/create\",\r\n        name: \"Create Rak\",\r\n        miniName: \"CTS\",\r\n        component: CreateRak,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/rak\",\r\n        name: \"Rak\",\r\n        miniName: \"R\",\r\n        component: Rak,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/user/edit/:id\",\r\n        name: \"Edit User\",\r\n        miniName: \"EU\",\r\n        component: EditUser,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/privileges/edit\",\r\n        name: \"Edit Privileges\",\r\n        miniName: \"EP\",\r\n        component: EditPrivileges,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/user/create\",\r\n        name: \"Create User\",\r\n        miniName: \"CU\",\r\n        component: CreateUser,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/user\",\r\n        name: \"User\",\r\n        miniName: \"U\",\r\n        component: Users,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/departemen/edit/:id\",\r\n        name: \"Edit Departemen\",\r\n        miniName: \"EA\",\r\n        component: EditDepartemen,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/departemen/create\",\r\n        name: \"Create Departemen\",\r\n        miniName: \"CD\",\r\n        component: CreateDepartemen,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/departemen\",\r\n        name: \"Departemen\",\r\n        miniName: \"D\",\r\n        component: Departemen,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/karyawan/edit/:id\",\r\n        name: \"Edit User\",\r\n        miniName: \"EU\",\r\n        component: EditKaryawan,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/karyawan/create\",\r\n        name: \"Create Karyawan\",\r\n        miniName: \"CK\",\r\n        component: CreateKaryawan,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/karyawan\",\r\n        name: \"Karyawan\",\r\n        miniName: \"K\",\r\n        component: Karyawan,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/alamat/edit/:id\",\r\n        name: \"Edit Alamat\",\r\n        miniName: \"EA\",\r\n        component: EditAlamat,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/alamat/create\",\r\n        name: \"Create Address\",\r\n        miniName: \"CA\",\r\n        component: CreateAlamat,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/alamat\",\r\n        name: \"Alamat\",\r\n        miniName: \"A\",\r\n        component: Alamat,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/customer/edit/:id\",\r\n        name: \"Edit Customer\",\r\n        miniName: \"EC\",\r\n        component: EditCustomer,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/customer/create\",\r\n        name: \"Create Customer\",\r\n        miniName: \"CC\",\r\n        component: CreateCustomer,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/customer\",\r\n        name: \"Customer\",\r\n        miniName: \"C\",\r\n        component: Customer,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/person/edit/:id\",\r\n        name: \"Edit Person\",\r\n        miniName: \"EP\",\r\n        component: EditPerson,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/person/create\",\r\n        name: \"Create Person\",\r\n        miniName: \"CP\",\r\n        component: CreatePerson,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/person\",\r\n        name: \"Supplier\",\r\n        miniName: \"P\",\r\n        component: Person,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/satuan/edit/:id\",\r\n        name: \"Edit Satuan\",\r\n        miniName: \"ES\",\r\n        component: EditUom,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/satuan/create\",\r\n        name: \"Create Satuan\",\r\n        miniName: \"CS\",\r\n        component: CreateUom,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/satuan\",\r\n        name: \"Satuan\",\r\n        miniName: \"S\",\r\n        component: Uom,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/item-grade/create\",\r\n        name: \"Create Item Grade\",\r\n        miniName: \"CIG\",\r\n        component: CreateItemGrade,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/item-grade\",\r\n        name: \"Item Grade\",\r\n        miniName: \"IG\",\r\n        component: ItemGrade,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/item-sub-merek/create\",\r\n        name: \"Create Item Sub Merek\",\r\n        miniName: \"CISM\",\r\n        component: CreateItemSubMerek,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/item-sub-merek\",\r\n        name: \"Item Sub Merek\",\r\n        miniName: \"ISM\",\r\n        component: ItemSubMerek,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/item-merek/create\",\r\n        name: \"Create Item Merek\",\r\n        miniName: \"CIM\",\r\n        component: CreateItemMerek,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/item-merek\",\r\n        name: \"Item Merek\",\r\n        miniName: \"IM\",\r\n        component: ItemMerek,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/item-sub-function/create\",\r\n        name: \"Create Item Sub Function\",\r\n        miniName: \"CISK\",\r\n        component: CreateItemSubFunction,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/item-sub-function\",\r\n        name: \"Item Sub Function\",\r\n        miniName: \"ISF\",\r\n        component: ItemSubFunction,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/item-function/create\",\r\n        name: \"Create Item Function\",\r\n        miniName: \"CSK\",\r\n        component: CreateItemFunction,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/item-function\",\r\n        name: \"Item Function\",\r\n        miniName: \"IF\",\r\n        component: ItemFunction,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/item-sub-kategori/create\",\r\n        name: \"Create Sub Kategori\",\r\n        miniName: \"CSK\",\r\n        component: CreateItemSubCategory,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/item-sub-kategori\",\r\n        name: \"Item Sub Kategori\",\r\n        miniName: \"ISK\",\r\n        component: ItemSubCategory,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/item-kategori/edit/:id\",\r\n        name: \"Edit Item Kategori\",\r\n        miniName: \"EIK\",\r\n        component: EditItemCategory,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/item-kategori/create\",\r\n        name: \"Create Kategori\",\r\n        miniName: \"CK\",\r\n        component: CreateItemCategory,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/item-kategori\",\r\n        name: \"Item Kategori\",\r\n        miniName: \"IK\",\r\n        component: ItemCategory,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/item/edit/:id\",\r\n        name: \"Edit Item\",\r\n        miniName: \"EI\",\r\n        component: EditItem,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/item/details/:id\",\r\n        name: \"Detail Item\",\r\n        miniName: \"DI\",\r\n        component: DetailItems,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/item/create\",\r\n        name: \"Create Item\",\r\n        miniName: \"CI\",\r\n        component: CreateItem,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/item\",\r\n        name: \"Item\",\r\n        miniName: \"i\",\r\n        component: Item,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/price/edit/:id\",\r\n        name: \"Edit Price\",\r\n        miniName: \"EP\",\r\n        component: EditPrice,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/price\",\r\n        name: \"Price\",\r\n        miniName: \"P\",\r\n        component: Price,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/pajak/edit/:id\",\r\n        name: \"Edit Pajak\",\r\n        miniName: \"EP\",\r\n        component: EditPajak,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/pajak/create\",\r\n        name: \"Create Pajak\",\r\n        miniName: \"CP\",\r\n        component: CreatePajak,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/pajak\",\r\n        name: \"Pajak\",\r\n        miniName: \"P\",\r\n        component: Pajak,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/promo/edit/:id\",\r\n        name: \"Edit Promo\",\r\n        miniName: \"EP\",\r\n        component: EditPromo,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/promo/create\",\r\n        name: \"Create Promo\",\r\n        miniName: \"EP\",\r\n        component: CreatePromo,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/promo\",\r\n        name: \"Promo\",\r\n        miniName: \"P\",\r\n        component: Promo,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/type-asset/edit/:id\",\r\n        name: \"Edit Type Asset\",\r\n        miniName: \"EA\",\r\n        component: EditTypeAsset,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/type-asset/create\",\r\n        name: \"Create Type Asset\",\r\n        miniName: \"CA\",\r\n        component: CreateTypeAsset,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/type-asset\",\r\n        name: \"Type Asset\",\r\n        miniName: \"A\",\r\n        component: TypeAsset,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/asset/edit/:id\",\r\n        name: \"Edit Asset\",\r\n        miniName: \"EA\",\r\n        component: EditAsset,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/asset/create\",\r\n        name: \"Create Asset\",\r\n        miniName: \"CA\",\r\n        component: CreateAsset,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/asset\",\r\n        name: \"Asset\",\r\n        miniName: \"A\",\r\n        component: Asset,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/account/edit/:id\",\r\n        name: \"Edit Account\",\r\n        miniName: \"EA\",\r\n        component: EditAccount,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/account/create\",\r\n        name: \"Create Account\",\r\n        miniName: \"CA\",\r\n        component: CreateAccount,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/account\",\r\n        name: \"Account\",\r\n        miniName: \"A\",\r\n        component: Account,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/coa/edit/:id\",\r\n        name: \"Edit COA\",\r\n        miniName: \"EC\",\r\n        component: EditCoa,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/coa/create\",\r\n        name: \"Create COA\",\r\n        miniName: \"CC\",\r\n        component: CreateCoa,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/coa\",\r\n        name: \"Coa\",\r\n        miniName: \"C\",\r\n        component: Coa,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/type-asset\",\r\n        name: \"Type Asset\",\r\n        miniName: \"A\",\r\n        component: TypeAsset,\r\n        hidden: true,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/stock-opname/create\",\r\n        name: \"Create Promo\",\r\n        miniName: \"EP\",\r\n        component: CreateStockOpname,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n\r\n      {\r\n        path: \"/info\",\r\n        name: \"Info\",\r\n        miniName: \"P\",\r\n        component: Info,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    collapse: true,\r\n    name: \"Inventory\",\r\n    icon: \"ni ni-folder-17\",\r\n    state: \"inventoryCollapse\",\r\n    roles: [\r\n      \"ROLE_SUPERADMIN\",\r\n      \"ROLE_ADMIN\",\r\n      \"ROLE_KARYAWAN\",\r\n      \"ROLE_USER\",\r\n      \"ROLE_OWNER\",\r\n    ],\r\n    views: [\r\n      {\r\n        path: \"/Item-stock\",\r\n        name: \"Item Stock\",\r\n        miniName: \"IS\",\r\n        component: ItemStock,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/stock-opname/edit/:id\",\r\n        name: \"Edit Stock Opname\",\r\n        miniName: \"EP\",\r\n        component: EditStockOpname,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/stock-opname/adjust\",\r\n        name: \"Adjust Stock Opname\",\r\n        miniName: \"ASO\",\r\n        component: AdjustStockOpname,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n\r\n      {\r\n        path: \"/stock-opname\",\r\n        name: \"Stock Opname\",\r\n        miniName: \"SO\",\r\n        component: StockOpname,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/receiving-so/edit/:id\",\r\n        name: \"Edit Receiving So\",\r\n        miniName: \"ERS\",\r\n        component: EditReceivingSO,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/receiving-so\",\r\n        name: \"Receiving SO\",\r\n        miniName: \"RS\",\r\n        component: ReceivingSO,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/transfer-stock/edit/:id\",\r\n        name: \"Edit Transfer Stock\",\r\n        miniName: \"ETS\",\r\n        component: EditTransferStock,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/transfer-stock/create\",\r\n        name: \"Create Transfer Stock\",\r\n        miniName: \"CTS\",\r\n        component: CreateTransferStock,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/transfer-stock\",\r\n        name: \"Transfer Stock\",\r\n        miniName: \"TS\",\r\n        component: TransferStock,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n\r\n      {\r\n        path: \"/transfer-history\",\r\n        name: \"Transfer History\",\r\n        miniName: \"TH\",\r\n        component: TransferHistory,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    collapse: true,\r\n    name: \"Purchase Order\",\r\n    icon: \"ni ni-folder-17\",\r\n    state: \"POCollapse\",\r\n    roles: [\r\n      \"ROLE_SUPERADMIN\",\r\n      \"ROLE_ADMIN\",\r\n      \"ROLE_KARYAWAN\",\r\n      \"ROLE_USER\",\r\n      \"ROLE_OWNER\",\r\n    ],\r\n    views: [\r\n      {\r\n        path: \"/permintaan-barang/create\",\r\n        name: \"Create Permintaan Barang\",\r\n        miniName: \"CPB\",\r\n        component: CreatePermintaanBarang,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/permintaan-barang\",\r\n        name: \"Permintaan Barang\",\r\n        miniName: \"PB\",\r\n        component: PermintaanBarang,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/purchase-order/validasi-pimpinan-po/edit/:id\",\r\n        name: \"Validasi Pimpinan Edit\",\r\n        miniName: \"VPE\",\r\n        component: EditValidatorPo,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/purchase-order/validasi-pimpinan-po\",\r\n        name: \"Validasi Pimpinan\",\r\n        miniName: \"VP\",\r\n        component: ValidatorPo,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/purchase-order/validasi-admin-approve-po/edit/:id\",\r\n        name: \"Validasi Penawaran Po\",\r\n        miniName: \"VPP\",\r\n        component: EditAdminApprove,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/purchase-order/validasi-admin-approve-po\",\r\n        name: \"Admin Approve\",\r\n        miniName: \"AA\",\r\n        component: AdminApprove,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/po/validasi-penawaran-po/edit/:id\",\r\n        name: \"Validasi Penawaran Po\",\r\n        miniName: \"VPP\",\r\n        component: EditValidasiPo,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/po/validasi-penawaran-po\",\r\n        name: \"Validasi Penawaran Po\",\r\n        miniName: \"VP\",\r\n        component: ValidasiPo,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/po/edit/:id\",\r\n        name: \"Edit Purchase Order\",\r\n        miniName: \"EPO\",\r\n        component: EditPo,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/po/create\",\r\n        name: \"Create Purchase Order\",\r\n        miniName: \"CPO\",\r\n        component: CreatePo,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/po\",\r\n        name: \"Purchase Order\",\r\n        miniName: \"Po\",\r\n        component: Po,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/memo-kurir-po\",\r\n        name: \"Memo Kurir PO\",\r\n        miniName: \"MKP\",\r\n        component: MemoKurirPO,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/receiving-po\",\r\n        name: \"Receiving PO\",\r\n        miniName: \"RP\",\r\n        component: ReceivingPO,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/invoice-po\",\r\n        name: \"Invoice PO\",\r\n        miniName: \"IP\",\r\n        component: InvoicePO,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/bukti-kas-keluar\",\r\n        name: \"Bukti Kas Keluar\",\r\n        miniName: \"BKK\",\r\n        component: BuktiKasKeluar,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/purchase-order-history\",\r\n        name: \"Purchase Order Riwayat\",\r\n        miniName: \"POR\",\r\n        component: HistoryPo,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/po-return/create\",\r\n        name: \"Create Purchase Order Return\",\r\n        miniName: \"CPORT\",\r\n        component: CreatePoReturn,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/po-return/edit/:id\",\r\n        name: \"Edit Purchase Order Return\",\r\n        miniName: \"EPORT\",\r\n        component: EditPoReturn,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/purchase-order-retur\",\r\n        name: \"Purchase Order Retur\",\r\n        miniName: \"POR\",\r\n        component: PoReturn,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/po-retur-riwayat/list\",\r\n        name: \"Riwayat Retur\",\r\n        miniName: \"RRP\",\r\n        component: PoReturHistory,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    collapse: true,\r\n    name: \"Sales Order\",\r\n    icon: \"ni ni-folder-17\",\r\n    state: \"SOCollapse\",\r\n    roles: [\r\n      \"ROLE_SUPERADMIN\",\r\n      \"ROLE_ADMIN\",\r\n      \"ROLE_KARYAWAN\",\r\n      \"ROLE_USER\",\r\n      \"ROLE_OWNER\",\r\n    ],\r\n    views: [\r\n      {\r\n        path: \"/sales-order/validasi-pimpinan-so/edit/:id\",\r\n        name: \"Edit Validasi Pimpinan So\",\r\n        miniName: \"EVPS\",\r\n        component: EditPimpinanSo,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/sales-order/validas-pimpinan-so\",\r\n        name: \"Validasi Pimpinan SO\",\r\n        miniName: \"VPS\",\r\n        component: PimpinanSo,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/sales-order/validasi-admin-so/edit/:id\",\r\n        name: \"Edit Validasi Admin So\",\r\n        miniName: \"EVAS\",\r\n        component: EditAdminApproveSo,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/sales-order/validasi-admin-so\",\r\n        name: \"Validasi Admin SO\",\r\n        miniName: \"VAS\",\r\n        component: AdminApproveSo,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/sales-order/validasi-penawaran-so/edit/:id\",\r\n        name: \"Validasi Penawaran So\",\r\n        miniName: \"VPS\",\r\n        component: EditValidasiSo,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/sales-order/validasi-penawaran-so\",\r\n        name: \"Validasi Penawaran So\",\r\n        miniName: \"VPS\",\r\n        component: ValidasiSo,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/sales-order/edit/:id\",\r\n        name: \"Edit Sales Order\",\r\n        miniName: \"ESO\",\r\n        component: EditSo,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/sales-order/create\",\r\n        name: \"Create Sales Order\",\r\n        miniName: \"CSO\",\r\n        component: CreateSo,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/sales-order\",\r\n        name: \"Sales Order\",\r\n        miniName: \"SO\",\r\n        component: So,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/sales-order-history\",\r\n        name: \"History Sales Order\",\r\n        miniName: \"HSO\",\r\n        component: SoHistory,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/sales-order-kasir\",\r\n        name: \"Sales Order Kasir\",\r\n        miniName: \"HSO\",\r\n        component: SoKasir,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/so-return/create\",\r\n        name: \"Create Sales Order Return\",\r\n        miniName: \"CSORT\",\r\n        component: CreateSoReturn,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/so-return/edit/:id\",\r\n        name: \"Edit Sales Order Return\",\r\n        miniName: \"ESORT\",\r\n        component: EditSoReturn,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/so-return\",\r\n        name: \"Sales Order Return\",\r\n        miniName: \"SORT\",\r\n        component: SoReturn,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/bkm/edit/:id\",\r\n        name: \"Edit Bukti Kas Masuk\",\r\n        miniName: \"EBKM\",\r\n        component: EditBkm,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/bkm/create\",\r\n        name: \"Create Bukti Kas Masuk\",\r\n        miniName: \"CBKM\",\r\n        component: CreateBkm,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/bkm\",\r\n        name: \"Bukti Kas Masuk\",\r\n        miniName: \"BKM\",\r\n        component: Bkm,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/so-riwayat-retur/list\",\r\n        name: \"Riwayat Retur So\",\r\n        miniName: \"RRS\",\r\n        component: SoReturHistory,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    collapse: true,\r\n    name: \"Finance\",\r\n    icon: \"ni ni-folder-17\",\r\n    state: \"FinanceCollapse\",\r\n    roles: [\r\n      \"ROLE_SUPERADMIN\",\r\n      \"ROLE_ADMIN\",\r\n      \"ROLE_KARYAWAN\",\r\n      \"ROLE_USER\",\r\n      \"ROLE_OWNER\",\r\n    ],\r\n    views: [\r\n      {\r\n        path: \"/salary\",\r\n        name: \"Salary\",\r\n        miniName: \"S\",\r\n        component: Salary,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/komisi\",\r\n        name: \"Komisi\",\r\n        miniName: \"iS\",\r\n        component: Komisi,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/jurnal/create\",\r\n        name: \"Create Jurnal\",\r\n        miniName: \"CJ\",\r\n        component: CreateJurnal,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/jurnal\",\r\n        name: \"Jurnal\",\r\n        miniName: \"J\",\r\n        component: Jurnal,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    collapse: true,\r\n    name: \"Mobile\",\r\n    icon: \"ni ni-folder-17\",\r\n    state: \"MobileCollapse\",\r\n    roles: [\r\n      \"ROLE_SUPERADMIN\",\r\n      \"ROLE_ADMIN\",\r\n      \"ROLE_KARYAWAN\",\r\n      \"ROLE_USER\",\r\n      \"ROLE_OWNER\",\r\n    ],\r\n    views: [\r\n      {\r\n        path: \"/sales-canvasing\",\r\n        name: \"Sales Canvasing\",\r\n        miniName: \"SC\",\r\n        component: salesCanvasing,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/history-sales-canvasing\",\r\n        name: \"History Sales Canvasing\",\r\n        miniName: \"HSC\",\r\n        component: HistorysalesCanvasing,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/sales-tracking\",\r\n        name: \"Sales Tracking\",\r\n        miniName: \"HSC\",\r\n        component: SalesTarcking,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/absen\",\r\n        name: \"Absen\",\r\n        miniName: \"A\",\r\n        component: Absen,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    collapse: true,\r\n    name: \"E-Commerce\",\r\n    icon: \"ni ni-folder-17\",\r\n    state: \"AdminEcomCollapse\",\r\n    roles: [\r\n      \"ROLE_SUPERADMIN\",\r\n      \"ROLE_ADMIN\",\r\n      \"ROLE_KARYAWAN\",\r\n      \"ROLE_USER\",\r\n      \"ROLE_OWNER\",\r\n    ],\r\n    views: [\r\n      {\r\n        path: \"/image/upload\",\r\n        name: \"Upload Image\",\r\n        miniName: \"UI\",\r\n        component: UploadImage,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/banner/upload\",\r\n        name: \"Upload Banner\",\r\n        miniName: \"UB\",\r\n        component: UploadBanner,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/image/list/\",\r\n        name: \"Upload Gambar\",\r\n        miniName: \"UG\",\r\n        component: MainList,\r\n        layout: \"/admin\",\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/image/update/:id\",\r\n        name: \"Udate Image\",\r\n        miniName: \"UI\",\r\n        component: UpdateImage,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/image/banner/update/:id\",\r\n        name: \"Udate Image\",\r\n        miniName: \"UI\",\r\n        component: UpdateBanner,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n      {\r\n        path: \"/image/item/update/:id\",\r\n        name: \"Update Item Image\",\r\n        miniName: \"UII\",\r\n        component: UpdateImageItem,\r\n        layout: \"/admin\",\r\n        hidden: true,\r\n        roles: [\r\n          \"ROLE_SUPERADMIN\",\r\n          \"ROLE_ADMIN\",\r\n          \"ROLE_KARYAWAN\",\r\n          \"ROLE_USER\",\r\n          \"ROLE_OWNER\",\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import {\r\n  TabContent,\r\n  CardHeader,\r\n  Row,\r\n  Card,\r\n  CardBody,\r\n  Container,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Col,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst base_url = process.env.REACT_APP_API_BASE_URL;\r\n\r\nexport default function Create() {\r\n  const history = useHistory();\r\n  const [nama, setName] = useState(\"\");\r\n  const [keterangan, setKeterangan] = useState(\"\");\r\n  const [hari, setHari] = useState(\"0\");\r\n  const [durasi, setDurasi] = useState(\"0\");\r\n\r\n  // error\r\n  const [errNama, setErrNama] = useState(false);\r\n  const [errKet, setErrKeterangan] = useState(false);\r\n  const [errHari, setErrHari] = useState(false);\r\n  const [errDurasi, setErrDurasi] = useState(false);\r\n\r\n  //\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  /**\r\n   * -   If the length of the input is 0, then the input is invalid.\r\n   * -   If the length of the input is not 0, then the input is valid\r\n   * @returns The value of the return is the value of the function.\r\n   */\r\n  function isValid() {\r\n    const data = [\r\n      {\r\n        value: nama.length,\r\n        name: \"nama\",\r\n      },\r\n      {\r\n        value: keterangan.length,\r\n        name: \"keterangan\",\r\n      },\r\n      {\r\n        value: hari.length,\r\n        name: \"hari\",\r\n      },\r\n      {\r\n        value: durasi.length,\r\n        name: \"durasi\",\r\n      },\r\n    ];\r\n\r\n    const valid = [];\r\n\r\n    data.forEach((items) => {\r\n      if (items.value === 0 || items.value === \"0\") {\r\n        switch (items.name) {\r\n          case \"nama\":\r\n            setErrNama(true);\r\n            break;\r\n          case \"keterangan\":\r\n            setErrKeterangan(true);\r\n            break;\r\n          case \"hari\":\r\n            setErrHari(true);\r\n            break;\r\n          case \"durasi\":\r\n            setErrDurasi(true);\r\n            break;\r\n          default:\r\n          //\r\n        }\r\n        valid.push(false);\r\n      } else {\r\n        valid.push(true);\r\n      }\r\n    });\r\n\r\n    return valid.includes(false) ? false : true;\r\n  }\r\n\r\n  /**\r\n   * It takes the form data, checks if it's valid, and if it is, it sends a POST request to the server\r\n   * with the form data\r\n   * @param evt - The event object that was triggered.\r\n   */\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    if (isValid()) {\r\n      setLoading(true);\r\n      const payload = {\r\n        name: nama,\r\n        keterangan: keterangan,\r\n        hari: hari,\r\n        durasi: durasi,\r\n      };\r\n\r\n      fetch(`${base_url}/jwkredit/save`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.token}`,\r\n        },\r\n        body: JSON.stringify(payload),\r\n      })\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((res) => {\r\n          setLoading(false);\r\n          if (res.status === 200) {\r\n            history.push({ pathname: \"/admin/jangka-waktu/list\" });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.warn(err);\r\n          setLoading(false);\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Jangka Waktu\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <TabContent activeTab={\"1\"}>\r\n                  {/* header */}\r\n                  <CardHeader>\r\n                    <h3>Buat Jangka Waktu</h3>\r\n                  </CardHeader>\r\n\r\n                  {/* body */}\r\n                  <br />\r\n                  <Row>\r\n                    <Col>\r\n                      <Form\r\n                        action=\"\"\r\n                        method=\"POST\"\r\n                        onSubmit={(evt) => handleSubmit(evt)}\r\n                      >\r\n                        <FormGroup>\r\n                          <label className=\"form-control-label\" htmlFor=\"nama\">\r\n                            Nama*\r\n                          </label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            placeholder=\"Masukan nama\"\r\n                            id=\"nama\"\r\n                            onChange={(evt) => {\r\n                              setErrNama(false);\r\n                              setName(evt.target.value);\r\n                            }}\r\n                          />\r\n                          <small className=\"err-text\">\r\n                            {errNama ? \"Nama wajib diisi\" : \"\"}\r\n                          </small>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <label\r\n                            className=\"form-control-label\"\r\n                            htmlFor=\"keterangan\"\r\n                          >\r\n                            Keterangan*\r\n                          </label>\r\n                          <Input\r\n                            type=\"textarea\"\r\n                            placeholder=\"Keterangan\"\r\n                            id=\"keterangan\"\r\n                            onChange={(evt) => {\r\n                              setErrKeterangan(false);\r\n                              setKeterangan(evt.target.value);\r\n                            }}\r\n                          />\r\n                          <small className=\"err-text\">\r\n                            {errKet ? \"Keterangan wajib diisi\" : \"\"}\r\n                          </small>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <label className=\"form-control-label\" htmlFor=\"hari\">\r\n                            Hari*\r\n                          </label>\r\n                          <Input\r\n                            type=\"number\"\r\n                            placeholder=\"Contoh : 10,20,30\"\r\n                            id=\"hari\"\r\n                            onChange={(evt) => {\r\n                              setErrHari(false);\r\n                              setHari(evt.target.value);\r\n                            }}\r\n                          />\r\n                          <small className=\"err-text\">\r\n                            {errHari ? \"Hari wajib diisi\" : \"\"}\r\n                          </small>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <label\r\n                            className=\"form-control-label\"\r\n                            htmlFor=\"durasi\"\r\n                          >\r\n                            Durasi*\r\n                          </label>\r\n                          <Input\r\n                            type=\"number\"\r\n                            placeholder=\"contoh : 10\"\r\n                            id=\"durasi\"\r\n                            onChange={(evt) => {\r\n                              setErrDurasi(false);\r\n                              setDurasi(evt.target.value);\r\n                            }}\r\n                          />\r\n                          <small className=\"err-text\">\r\n                            {errDurasi ? \"Durasi wajib diisi\" : \"\"}\r\n                          </small>\r\n                        </FormGroup>\r\n                        <Button color=\"info\" type=\"submit\">\r\n                          {loading ? \"Loading...\" : \"Simpan\"}\r\n                        </Button>\r\n                        <Button\r\n                          color=\"secondary\"\r\n                          type=\"button\"\r\n                          onClick={() => {\r\n                            history.goBack();\r\n                          }}\r\n                        >\r\n                          Kembali\r\n                        </Button>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                  {/*  */}\r\n                </TabContent>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  CardBody,\r\n  Form,\r\n  CardFooter,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Container,\r\n} from \"reactstrap\";\r\n\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function EditWarehouseToko(props) {\r\n  const token = localStorage.token;\r\n  const history = useHistory();\r\n\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [city, setCity] = useState([]);\r\n  const [longitude, setLongitude] = useState([]);\r\n  const [latitude, setLatitude] = useState([]);\r\n  const [province, setProvince] = useState([]);\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [fax, setFax] = useState(\"\");\r\n  const [status,setStatus] = useState([]); \r\n  const [indent,setIndent]= useState([]);\r\n  const [npwp, setNpwp] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [warehousepusat, setWarehousePusat] = useState([]);\r\n  const [warehousepusats, setWarehousePusats] = useState([]);\r\n  const [warehousetoko, setWarehouseToko] = useState([]);\r\n  const [warehousetokos, setWarehouseTokos] = useState([]);\r\n  const [citys, setCitys] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getById();\r\n  }, []);\r\n\r\n  const getById = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/warehouse/get/${props.match.params.id}`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        setName(data.data.response.warehouse_name);\r\n        setAddress(data.data.response.address);\r\n        getPusat(data.data.response.pusat_id);\r\n        getToko(data.data.response.toko_id);\r\n        getProvinsi(data.data.response.province_id);\r\n        getKota(data.data.response.city_id);\r\n        setLongitude(data.data.response.longitude);\r\n        setLatitude(data.data.response.latitude);\r\n        setPhone(data.data.response.warehouse_phone);\r\n        setFax(data.data.response.warehouse_fax);\r\n        setStatus(data.data.response.active_flag);\r\n        setIndent(data.data.response.type);\r\n        setNpwp(data.data.response.warehouse_npwp);\r\n        setImage(data.data.response.logo);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getProvinsi = (id) => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/province/list`, { headers\r\n    })\r\n    .then(data => {\r\n      setProvinces(data.data.response_data);\r\n      setProvince(id);\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const getKota = (id) => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/city/list`, { headers\r\n    })\r\n    .then(data => {\r\n      setCitys(data.data.response_data);\r\n      setCity(id);\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const getPusat = (id) => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/warehouse/pusat/list`, { headers\r\n    })\r\n    .then(data => {\r\n      setWarehousePusats(data.data.response);\r\n      setWarehousePusat(id);\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n  const getToko = (id) => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/warehouse/toko/lists`, { headers\r\n    })\r\n    .then(data => {\r\n      setWarehouseTokos(data.data.response);\r\n      setWarehouseToko(id);\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n  \r\n  function CreateData() {\r\n    setLoading(true);{\r\n        UpdateWarehouseToko();\r\n    }\r\n  }\r\n\r\n  const UpdateWarehouseToko = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    \r\n    const myjson = JSON.stringify ({\r\n        \r\n        name,\r\n        active_flag:1,\r\n        pusat_id:parseInt(warehousepusat),\r\n        toko_id:parseInt(warehousetoko),\r\n        address,\r\n        level:2,\r\n        city : parseInt(city),\r\n        longitude,\r\n        latitude,\r\n        active_flag : parseInt(status),\r\n        type:parseInt(indent),\r\n        province:parseInt(province),\r\n        phone,\r\n        fax,\r\n        npwp\r\n\r\n    });     \r\n    let data = new FormData();\r\n    data.append(\"body\",myjson)\r\n    data.append(\"logo\",image)\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/warehouse/gudang/update/${props.match.params.id}`, data, { headers })\r\n      .then(function (response) {\r\n        history.push(\"/admin/warehouse\");\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    {\r\n      CreateData();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SimpleHeader name=\"Warehouse Gudang\" parentName=\"Master\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <Form onSubmit={handleSubmit}>\r\n                <CardBody>\r\n                  <Row md=\"12\">\r\n                      <Col md=\"6\">\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Nama\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Nama\"\r\n                              placeholder=\"Masukan Nama\"\r\n                              value={name}\r\n                              onChange={(e) => {\r\n                                setName(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Alamat\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Alamat\"\r\n                              placeholder=\"Masukan Alamat\"\r\n                              value={address}\r\n                              onChange={(e) => {\r\n                                setAddress(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                            >\r\n                                Pusat\r\n                                <span className=\"text-danger\">*</span>\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    value={warehousepusat}\r\n                                    onChange={(e) => {\r\n                                    setWarehousePusat(e.target.value);\r\n                                    \r\n                                    }}\r\n                                >\r\n                                    <option>Pilih Warehouse Pusat</option>\r\n                                    {\r\n                                    warehousepusats.map((a, key) => {\r\n                                        return <option key={key} value={a.id}>{a.name}</option>\r\n                                    })\r\n                                    }\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                            >\r\n                                Toko\r\n                                <span className=\"text-danger\">*</span>\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    value={warehousetoko}\r\n                                    onChange={(e) => {\r\n                                    setWarehousetoko(e.target.value);\r\n                                    \r\n                                    }}\r\n                                >\r\n                                    <option>Pilih Warehouse Pusat</option>\r\n                                    {\r\n                                    warehousetokos.map((a, key) => {\r\n                                        return <option key={key} value={a.id}>{a.name}</option>\r\n                                    })\r\n                                    }\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                            >\r\n                                Provinsi\r\n                                <span className=\"text-danger\">*</span>\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    value={province}\r\n                                    onChange={(e) => {\r\n                                    setProvince(e.target.value);\r\n                                    getKota(e.target.value);\r\n                                    }}\r\n                                >\r\n                                    <option>Pilih Provinsi</option>\r\n                                    {\r\n                                    provinces.map((a, key) => {\r\n                                        return <option key={key} value={a.id}>{a.name}</option>\r\n                                    })\r\n                                    }\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                            >\r\n                                Kota\r\n                                <span className=\"text-danger\">*</span>\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                                <Input\r\n                                    name=\"function\"\r\n                                    type=\"select\"\r\n                                    value={city}\r\n                                    onChange={(e) => {\r\n                                    setCity(e.target.value);\r\n                                    }}\r\n                                >\r\n                                    <option>Pilih Kota</option>\r\n                                    {\r\n                                    citys.map((b, key) => {\r\n                                        return <option key={key} value={b.id}>{b.name}</option>\r\n                                    })\r\n                                    }\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Longitude\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Longitude\"\r\n                              placeholder=\"Masukan Longitude\"\r\n                              value={longitude}\r\n                              onChange={(e) => {\r\n                                setLongitude(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Latitude\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Latitude\"\r\n                              placeholder=\"Masukan Latitude\"\r\n                              value={latitude}\r\n                              onChange={(e) => {\r\n                                setLatitude(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"6\">\r\n                      <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Phone\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Phone\"\r\n                              placeholder=\"Masukan Phone\"\r\n                              value={phone}\r\n                              onChange={(e) => {\r\n                                setPhone(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Fax\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Fax\"\r\n                              placeholder=\"Masukan Fax\"\r\n                              value={fax}\r\n                              onChange={(e) => {\r\n                                setFax(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Npwp\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Npwp\"\r\n                              placeholder=\"Masukan Npwp\"\r\n                              value={npwp}\r\n                              onChange={(e) => {\r\n                                setNpwp(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                              >\r\n                                Tipe \r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                                <Col sm={7}>\r\n                                  <div style={{ display: \"flex\" }}>\r\n                                    <div className=\"custom-control custom-radio mb-3\">\r\n                                      <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"customRadio11\"\r\n                                        name=\"custom-radio-4\"\r\n                                        type=\"checkbox\"\r\n                                        value={1}\r\n                                        checked={indent === 1}\r\n                                        onChange={() => setIndent(1)}\r\n                                      />\r\n                                      <Label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"customRadio11\"\r\n                                      >\r\n                                        STOK GUDANG\r\n                                      </Label>\r\n                                    </div>\r\n                                    <div\r\n                                      className=\"custom-control custom-radio mb-3\"\r\n                                      style={{ marginLeft: \"20px\" }}\r\n                                    >\r\n                                      <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"customRadio12\"\r\n                                        name=\"custom-radio-4\"\r\n                                        type=\"radio\"\r\n                                        value={2}\r\n                                        checked={indent === 2}\r\n                                        onChange={() => setIndent(2)}\r\n                                      />\r\n                                      <Label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"customRadio12\"\r\n                                      >\r\n                                        STOK INDENT\r\n                                      </Label>\r\n                                    </div>\r\n                                  </div>\r\n                                </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                              >\r\n                                Status\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                                <Col sm={7}>\r\n                                  <div style={{ display: \"flex\" }}>\r\n                                    <div className=\"custom-control custom-radio mb-3\">\r\n                                      <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"customRadio13\"\r\n                                        name=\"custom-radio-5\"\r\n                                        type=\"checkbox\"\r\n                                        value={1}\r\n                                        checked={status === 1}\r\n                                        onChange={() => setStatus(1)}\r\n                                      />\r\n                                      <Label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"customRadio13\"\r\n                                      >\r\n                                        Aktif\r\n                                      </Label>\r\n                                    </div>\r\n                                    <div\r\n                                      className=\"custom-control custom-radio mb-3\"\r\n                                      style={{ marginLeft: \"20px\" }}\r\n                                    >\r\n                                      <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"customRadio14\"\r\n                                        name=\"custom-radio-5\"\r\n                                        type=\"radio\"\r\n                                        value={2}\r\n                                        checked={status === 2}\r\n                                        onChange={() => setStatus(2)}\r\n                                      />\r\n                                      <Label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"customRadio14\"\r\n                                      >\r\n                                        Tidak Aktif\r\n                                      </Label>\r\n                                    </div>\r\n                                  </div>\r\n                                </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                            >\r\n                                FOTO \r\n                                <span className=\"text-danger\">*</span>\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                                id=\"exampleFile\"\r\n                                name=\"file\"\r\n                                type=\"file\"\r\n                                onChange={(event) => {\r\n                                    setImage(event.target.files[0]);\r\n                                }}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                      </Col>\r\n                  </Row>\r\n                </CardBody>\r\n                <CardFooter>\r\n                    {!isLoading && (<Button color=\"primary\" type=\"submit\">\r\n                      Simpan\r\n                    </Button>)}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {\"\"}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/warehouse\">\r\n                      Kembali\r\n                    </Link>\r\n                </CardFooter>\r\n               </Form>      \r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n    \r\n  );\r\n};","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  CardBody,\r\n  Form,\r\n  CardFooter,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Container,\r\n} from \"reactstrap\";\r\n\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function EditWarehouseToko(props) {\r\n  const token = localStorage.token;\r\n  const history = useHistory();\r\n\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [pusat, setPusat] = useState(\"\");\r\n  const [city, setCity] = useState([]);\r\n  const [longitude, setLongitude] = useState([]);\r\n  const [latitude, setLatitude] = useState([]);\r\n  const [province, setProvince] = useState([]);\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [fax, setFax] = useState(\"\");\r\n  const [status,setStatus] = useState([]); \r\n  const [indent,setIndent]= useState([]);\r\n  const [npwp, setNpwp] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [warehousepusat, setWarehousePusat] = useState([]);\r\n  const [warehousepusats, setWarehousePusats] = useState([]);\r\n  const [citys, setCitys] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getById();\r\n  }, []);\r\n\r\n  const getById = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/warehouse/get/${props.match.params.id}`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        setName(data.data.response.warehouse_name);\r\n        setAddress(data.data.response.address);\r\n        getPusat(data.data.response.pusat_id);\r\n        getProvinsi(data.data.response.province_id);\r\n        getKota(data.data.response.city_id);\r\n        setLongitude(data.data.response.longitude);\r\n        setLatitude(data.data.response.latitude);\r\n        setPhone(data.data.response.warehouse_phone);\r\n        setFax(data.data.response.warehouse_fax);\r\n        setStatus(data.data.response.active_flag);\r\n        setIndent(data.data.response.type);\r\n        setNpwp(data.data.response.warehouse_npwp);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getProvinsi = (id) => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/province/list`, { headers\r\n    })\r\n    .then(data => {\r\n      setProvinces(data.data.response_data);\r\n      setProvince(id);\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const getKota = (id) => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/city/list`, { headers\r\n    })\r\n    .then(data => {\r\n      setCitys(data.data.response_data);\r\n      setCity(id);\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const getPusat = (id) => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/warehouse/pusat/list`, { headers\r\n    })\r\n    .then(data => {\r\n      setWarehousePusats(data.data.response);\r\n      setWarehousePusat(id);\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n  \r\n  function CreateData() {\r\n    setLoading(true);{\r\n        UpdateWarehouseToko();\r\n    }\r\n  }\r\n\r\n  const UpdateWarehouseToko = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    \r\n    const myjson = JSON.stringify ({\r\n        \r\n        name,\r\n        active_flag:1,\r\n        pusat_id:parseInt(warehousepusat),\r\n        address,\r\n        level:2,\r\n        city : parseInt(city),\r\n        longitude,\r\n        latitude,\r\n        active_flag : parseInt(status),\r\n        type:parseInt(indent),\r\n        province:parseInt(province),\r\n        phone,\r\n        fax,\r\n        npwp\r\n\r\n    });     \r\n    let data = new FormData();\r\n    data.append(\"body\",myjson)\r\n    data.append(\"logo\",image)\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/warehouse/toko/update/${props.match.params.id}`, data, { headers })\r\n      .then(function (response) {\r\n        history.push(\"/admin/warehouse\");\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    {\r\n      CreateData();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SimpleHeader name=\"Warehouse Toko\" parentName=\"Master\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <Form onSubmit={handleSubmit}>\r\n                <CardBody>\r\n                  <Row md=\"12\">\r\n                      <Col md=\"6\">\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Nama\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Nama\"\r\n                              placeholder=\"Masukan Nama\"\r\n                              value={name}\r\n                              onChange={(e) => {\r\n                                setName(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Alamat\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Alamat\"\r\n                              placeholder=\"Masukan Alamat\"\r\n                              value={address}\r\n                              onChange={(e) => {\r\n                                setAddress(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                            >\r\n                                Pusat\r\n                                <span className=\"text-danger\">*</span>\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    value={warehousepusat}\r\n                                    onChange={(e) => {\r\n                                    setWarehousePusat(e.target.value);\r\n                                    \r\n                                    }}\r\n                                >\r\n                                    <option>Pilih Warehouse Pusat</option>\r\n                                    {\r\n                                    warehousepusats.map((a, key) => {\r\n                                        return <option key={key} value={a.id}>{a.name}</option>\r\n                                    })\r\n                                    }\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                            >\r\n                                Provinsi\r\n                                <span className=\"text-danger\">*</span>\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    value={province}\r\n                                    onChange={(e) => {\r\n                                    setProvince(e.target.value);\r\n                                    getKota(e.target.value);\r\n                                    }}\r\n                                >\r\n                                    <option>Pilih Provinsi</option>\r\n                                    {\r\n                                    provinces.map((a, key) => {\r\n                                        return <option key={key} value={a.id}>{a.name}</option>\r\n                                    })\r\n                                    }\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                            >\r\n                                Kota\r\n                                <span className=\"text-danger\">*</span>\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                                <Input\r\n                                    name=\"function\"\r\n                                    type=\"select\"\r\n                                    value={city}\r\n                                    onChange={(e) => {\r\n                                    setCity(e.target.value);\r\n                                    }}\r\n                                >\r\n                                    <option>Pilih Kota</option>\r\n                                    {\r\n                                    citys.map((b, key) => {\r\n                                        return <option key={key} value={b.id}>{b.name}</option>\r\n                                    })\r\n                                    }\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Longitude\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Longitude\"\r\n                              placeholder=\"Masukan Longitude\"\r\n                              value={longitude}\r\n                              onChange={(e) => {\r\n                                setLongitude(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Latitude\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Latitude\"\r\n                              placeholder=\"Masukan Latitude\"\r\n                              value={latitude}\r\n                              onChange={(e) => {\r\n                                setLatitude(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"6\">\r\n                      <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Phone\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Phone\"\r\n                              placeholder=\"Masukan Phone\"\r\n                              value={phone}\r\n                              onChange={(e) => {\r\n                                setPhone(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Fax\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Fax\"\r\n                              placeholder=\"Masukan Fax\"\r\n                              value={fax}\r\n                              onChange={(e) => {\r\n                                setFax(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Npwp\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Npwp\"\r\n                              placeholder=\"Masukan Npwp\"\r\n                              value={npwp}\r\n                              onChange={(e) => {\r\n                                setNpwp(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                              >\r\n                                Tipe \r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                                <Col sm={7}>\r\n                                  <div style={{ display: \"flex\" }}>\r\n                                    <div className=\"custom-control custom-radio mb-3\">\r\n                                      <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"customRadio11\"\r\n                                        name=\"custom-radio-4\"\r\n                                        type=\"checkbox\"\r\n                                        value={1}\r\n                                        checked={indent === 1}\r\n                                        onChange={() => setIndent(1)}\r\n                                      />\r\n                                      <Label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"customRadio11\"\r\n                                      >\r\n                                        STOK GUDANG\r\n                                      </Label>\r\n                                    </div>\r\n                                    <div\r\n                                      className=\"custom-control custom-radio mb-3\"\r\n                                      style={{ marginLeft: \"20px\" }}\r\n                                    >\r\n                                      <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"customRadio12\"\r\n                                        name=\"custom-radio-4\"\r\n                                        type=\"radio\"\r\n                                        value={2}\r\n                                        checked={indent === 2}\r\n                                        onChange={() => setIndent(2)}\r\n                                      />\r\n                                      <Label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"customRadio12\"\r\n                                      >\r\n                                        STOK INDENT\r\n                                      </Label>\r\n                                    </div>\r\n                                  </div>\r\n                                </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                              >\r\n                                Status\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                                <Col sm={7}>\r\n                                  <div style={{ display: \"flex\" }}>\r\n                                    <div className=\"custom-control custom-radio mb-3\">\r\n                                      <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"customRadio13\"\r\n                                        name=\"custom-radio-5\"\r\n                                        type=\"checkbox\"\r\n                                        value={1}\r\n                                        checked={status === 1}\r\n                                        onChange={() => setStatus(1)}\r\n                                      />\r\n                                      <Label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"customRadio13\"\r\n                                      >\r\n                                        Aktif\r\n                                      </Label>\r\n                                    </div>\r\n                                    <div\r\n                                      className=\"custom-control custom-radio mb-3\"\r\n                                      style={{ marginLeft: \"20px\" }}\r\n                                    >\r\n                                      <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"customRadio14\"\r\n                                        name=\"custom-radio-5\"\r\n                                        type=\"radio\"\r\n                                        value={2}\r\n                                        checked={status === 2}\r\n                                        onChange={() => setStatus(2)}\r\n                                      />\r\n                                      <Label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"customRadio14\"\r\n                                      >\r\n                                        Tidak Aktif\r\n                                      </Label>\r\n                                    </div>\r\n                                  </div>\r\n                                </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                            >\r\n                                FOTO \r\n                                <span className=\"text-danger\">*</span>\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                                id=\"exampleFile\"\r\n                                name=\"file\"\r\n                                type=\"file\"\r\n                                onChange={(event) => {\r\n                                    setImage(event.target.files[0]);\r\n                                }}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                      </Col>\r\n                  </Row>\r\n                </CardBody>\r\n                <CardFooter>\r\n                    {!isLoading && (<Button color=\"primary\" type=\"submit\">\r\n                      Simpan\r\n                    </Button>)}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {\"\"}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/warehouse\">\r\n                      Kembali\r\n                    </Link>\r\n                </CardFooter>\r\n               </Form>      \r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n    \r\n  );\r\n};","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  CardBody,\r\n  Form,\r\n  CardFooter,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Container,\r\n} from \"reactstrap\";\r\n\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function EditWarehousePusat(props) {\r\n  const token = localStorage.token;\r\n  const history = useHistory();\r\n\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [city, setCity] = useState([]);\r\n  const [longitude, setLongitude] = useState([]);\r\n  const [latitude, setLatitude] = useState([]);\r\n  const [province, setProvince] = useState([]);\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [fax, setFax] = useState(\"\");\r\n  const [status,setStatus] = useState([]); \r\n  const [indent,setIndent]= useState([]);\r\n  const [npwp, setNpwp] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [citys, setCitys] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getById();\r\n  }, []);\r\n\r\n  const getById = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/warehouse/get/${props.match.params.id}`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        setName(data.data.response.warehouse_name);\r\n        setAddress(data.data.response.address);\r\n        getProvinsi(data.data.response.province_id);\r\n        getKota(data.data.response.city_id);\r\n        setLongitude(data.data.response.longitude);\r\n        setLatitude(data.data.response.latitude);\r\n        setPhone(data.data.response.warehouse_phone);\r\n        setFax(data.data.response.warehouse_fax);\r\n        setStatus(data.data.response.active_flag);\r\n        setIndent(data.data.response.type);\r\n        setNpwp(data.data.response.warehouse_npwp);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getProvinsi = (id) => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/province/list`, { headers\r\n    })\r\n    .then(data => {\r\n      setProvinces(data.data.response_data);\r\n      setProvince(id);\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const getKota = (id) => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/city/list`, { headers\r\n    })\r\n    .then(data => {\r\n      setCitys(data.data.response_data);\r\n      setCity(id);\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n  \r\n  function CreateData() {\r\n    setLoading(true);{\r\n        UpdateWarehouseToko();\r\n    }\r\n  }\r\n\r\n  const UpdateWarehouseToko = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    \r\n    const myjson = JSON.stringify ({\r\n        \r\n        name,\r\n        active_flag:1,\r\n        address,\r\n        level:2,\r\n        city : parseInt(city),\r\n        longitude,\r\n        latitude,\r\n        active_flag : parseInt(status),\r\n        type:parseInt(indent),\r\n        province:parseInt(province),\r\n        phone,\r\n        fax,\r\n        npwp\r\n\r\n    });     \r\n    let data = new FormData();\r\n    data.append(\"body\",myjson)\r\n    data.append(\"logo\",image)\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/warehouse/pusat/update/${props.match.params.id}`, data, { headers })\r\n      .then(function (response) {\r\n        history.push(\"/admin/warehouse\");\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    {\r\n      CreateData();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SimpleHeader name=\"Warehouse Pusat\" parentName=\"Master\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <Form onSubmit={handleSubmit}>\r\n                <CardBody>\r\n                  <Row md=\"12\">\r\n                      <Col md=\"6\">\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Nama\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Nama\"\r\n                              placeholder=\"Masukan Nama\"\r\n                              value={name}\r\n                              onChange={(e) => {\r\n                                setName(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Alamat\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Alamat\"\r\n                              placeholder=\"Masukan Alamat\"\r\n                              value={address}\r\n                              onChange={(e) => {\r\n                                setAddress(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                            >\r\n                                Provinsi\r\n                                <span className=\"text-danger\">*</span>\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    value={province}\r\n                                    onChange={(e) => {\r\n                                    setProvince(e.target.value);\r\n                                    getKota(e.target.value);\r\n                                    }}\r\n                                >\r\n                                    <option>Pilih Provinsi</option>\r\n                                    {\r\n                                    provinces.map((a, key) => {\r\n                                        return <option key={key} value={a.id}>{a.name}</option>\r\n                                    })\r\n                                    }\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                            >\r\n                                Kota\r\n                                <span className=\"text-danger\">*</span>\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                                <Input\r\n                                    name=\"function\"\r\n                                    type=\"select\"\r\n                                    value={city}\r\n                                    onChange={(e) => {\r\n                                    setCity(e.target.value);\r\n                                    }}\r\n                                >\r\n                                    <option>Pilih Kota</option>\r\n                                    {\r\n                                    citys.map((b, key) => {\r\n                                        return <option key={key} value={b.id}>{b.name}</option>\r\n                                    })\r\n                                    }\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Longitude\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Longitude\"\r\n                              placeholder=\"Masukan Longitude\"\r\n                              value={longitude}\r\n                              onChange={(e) => {\r\n                                setLongitude(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Latitude\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Latitude\"\r\n                              placeholder=\"Masukan Latitude\"\r\n                              value={latitude}\r\n                              onChange={(e) => {\r\n                                setLatitude(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"6\">\r\n                      <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Phone\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Phone\"\r\n                              placeholder=\"Masukan Phone\"\r\n                              value={phone}\r\n                              onChange={(e) => {\r\n                                setPhone(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Fax\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Fax\"\r\n                              placeholder=\"Masukan Fax\"\r\n                              value={fax}\r\n                              onChange={(e) => {\r\n                                setFax(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Label\r\n                            for=\"exampleEmail\"\r\n                            sm={4}\r\n                          >\r\n                            Npwp\r\n                            <span className=\"text-danger\">*</span>\r\n                          </Label>\r\n                          <Col sm={7}>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"Npwp\"\r\n                              placeholder=\"Masukan Npwp\"\r\n                              value={npwp}\r\n                              onChange={(e) => {\r\n                                setNpwp(e.target.value);\r\n                              }}\r\n                            />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                              >\r\n                                Tipe \r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                                <Col sm={7}>\r\n                                  <div style={{ display: \"flex\" }}>\r\n                                    <div className=\"custom-control custom-radio mb-3\">\r\n                                      <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"customRadio11\"\r\n                                        name=\"custom-radio-4\"\r\n                                        type=\"checkbox\"\r\n                                        value={1}\r\n                                        checked={indent === 1}\r\n                                        onChange={() => setIndent(1)}\r\n                                      />\r\n                                      <Label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"customRadio11\"\r\n                                      >\r\n                                        STOK GUDANG\r\n                                      </Label>\r\n                                    </div>\r\n                                    <div\r\n                                      className=\"custom-control custom-radio mb-3\"\r\n                                      style={{ marginLeft: \"20px\" }}\r\n                                    >\r\n                                      <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"customRadio12\"\r\n                                        name=\"custom-radio-4\"\r\n                                        type=\"radio\"\r\n                                        value={2}\r\n                                        checked={indent === 2}\r\n                                        onChange={() => setIndent(2)}\r\n                                      />\r\n                                      <Label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"customRadio12\"\r\n                                      >\r\n                                        STOK INDENT\r\n                                      </Label>\r\n                                    </div>\r\n                                  </div>\r\n                                </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                              <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                              >\r\n                                Status\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                                <Col sm={7}>\r\n                                  <div style={{ display: \"flex\" }}>\r\n                                    <div className=\"custom-control custom-radio mb-3\">\r\n                                      <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"customRadio13\"\r\n                                        name=\"custom-radio-5\"\r\n                                        type=\"checkbox\"\r\n                                        value={1}\r\n                                        checked={status === 1}\r\n                                        onChange={() => setStatus(1)}\r\n                                      />\r\n                                      <Label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"customRadio13\"\r\n                                      >\r\n                                        Aktif\r\n                                      </Label>\r\n                                    </div>\r\n                                    <div\r\n                                      className=\"custom-control custom-radio mb-3\"\r\n                                      style={{ marginLeft: \"20px\" }}\r\n                                    >\r\n                                      <Input\r\n                                        className=\"custom-control-input\"\r\n                                        id=\"customRadio14\"\r\n                                        name=\"custom-radio-5\"\r\n                                        type=\"radio\"\r\n                                        value={2}\r\n                                        checked={status === 2}\r\n                                        onChange={() => setStatus(2)}\r\n                                      />\r\n                                      <Label\r\n                                        className=\"custom-control-label\"\r\n                                        htmlFor=\"customRadio14\"\r\n                                      >\r\n                                        Tidak Aktif\r\n                                      </Label>\r\n                                    </div>\r\n                                  </div>\r\n                                </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label\r\n                                for=\"exampleEmail\"\r\n                                sm={4}\r\n                            >\r\n                                FOTO \r\n                                <span className=\"text-danger\">*</span>\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                                id=\"exampleFile\"\r\n                                name=\"file\"\r\n                                type=\"file\"\r\n                                onChange={(event) => {\r\n                                    setImage(event.target.files[0]);\r\n                                }}\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                      </Col>\r\n                  </Row>\r\n                </CardBody>\r\n                <CardFooter>\r\n                    {!isLoading && (<Button color=\"primary\" type=\"submit\">\r\n                      Simpan\r\n                    </Button>)}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {\"\"}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/warehouse\">\r\n                      Kembali\r\n                    </Link>\r\n                </CardFooter>\r\n               </Form>      \r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n    \r\n  );\r\n};","import React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  TabContent,\r\n  TabPane\r\n} from \"reactstrap\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport classnames from 'classnames';\r\n\r\nimport Pusat from \"views/pages/Warehouse/WarehousePusat/Index.js\";\r\nimport Toko from \"views/pages/Warehouse/WarehouseToko/Index.js\";\r\nimport Gudang from \"views/pages/Warehouse/WarehouseGudang/Index.js\";\r\n\r\nexport default function Warehouse() {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  }\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Warehouse\" parentName=\"Master\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Nav tabs>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '1' })}\r\n                      onClick={() => { toggle('1'); }}\r\n                    >\r\n                      PUSAT\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '2' })}\r\n                      onClick={() => { toggle('2'); }}\r\n                    >\r\n                      TOKO\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '3' })}\r\n                      onClick={() => { toggle('3'); }}\r\n                    >\r\n                      GUDANG\r\n                    </NavLink>\r\n                  </NavItem>\r\n                </Nav>\r\n                <TabContent activeTab={activeTab}>\r\n                  <TabPane tabId=\"1\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <Pusat />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                  <TabPane tabId=\"2\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <Toko />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                  <TabPane tabId=\"3\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <Gudang />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                </TabContent>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function CreateUser(props) {\r\n  const token = localStorage.token;\r\n  const warehouse = localStorage.warehouse;\r\n  const roleId = localStorage.authority;\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [usernameError, setUsernameError] = useState(null);\r\n  const [name, setName] = useState(\"\");\r\n  const [nameError, setNameError] = useState(null);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(null);\r\n  const [gender, setGender] = useState(1);\r\n  const [isKaryawan, setIsKaryawan] = useState(1);\r\n  const [roles, setRoles] = useState([]);\r\n  const [role, setRole] = useState(\"\");\r\n  const [roleError, setRoleError] = useState(null);\r\n  const [userImage, setUserImage] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [addressError, setAddressError] = useState(null);\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [phoneError, setPhoneError] = useState(null);\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [province, setProvince] = useState(\"\");\r\n  const [provinceError, setProvinceError] = useState(null);\r\n  const [cities, setCities] = useState([]);\r\n  const [city, setCity] = useState(\"\");\r\n  const [cityError, setCityError] = useState(null);\r\n  const [fax, setFax] = useState(\"\");\r\n  const [npwp, setNpwp] = useState(\"\");\r\n  const [addressId, setAddressId] = useState(\"\");\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (username === \"\") {\r\n      setUsernameError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (name === \"\") {\r\n      setNameError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (email === \"\") {\r\n      setEmailError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (role === \"\") {\r\n      setRoleError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (address === \"\") {\r\n      setAddressError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (phone === \"\") {\r\n      setPhoneError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (province === \"\") {\r\n      setProvinceError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (city === \"\") {\r\n      setCityError(\"invalid\");\r\n      error = true;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUserById();\r\n  }, []);\r\n\r\n  const getUserById = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/users/${props.match.params.id}`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        getAddressById(data.data.response.address_id);\r\n        getRole(data.data.response.roles[0].roleId);\r\n        setUsername(data.data.response.username);\r\n        setName(data.data.response.name);\r\n        setEmail(data.data.response.email);\r\n        setGender(data.data.response.gender);\r\n        setIsKaryawan(data.data.response.is_karyawan);\r\n        setAddressId(data.data.response.address_id);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getAddressById = (addressId) => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/address/${addressId}`, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        getProvince();\r\n        getCity(data.data.response.province, data.data.response.city);\r\n        setProvince(data.data.response.province);\r\n        setCity(data.data.response.city);\r\n        setAddress(data.data.response.address);\r\n        setPhone(data.data.response.phone);\r\n        setFax(data.data.response.fax);\r\n        setNpwp(data.data.response.npwp);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getRole = (id) => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/roles/list?role=${roleId}`, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setRoles(data.data.response);\r\n        setRole(id);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getProvince = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/province/list`, { headers })\r\n      .then((data) => {\r\n        setProvinces(data.data.response_data);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getCity = (provinceId) => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/city?province_id=${provinceId}`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        setCities(data.data.response_data);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  function EditUser() {\r\n    setLoading(true);\r\n    let data = {\r\n      username: username,\r\n      name: name,\r\n      email: email,\r\n      gender: parseInt(gender),\r\n      is_karyawan: roleId === \"ROLE_SUPERADMIN\" ? parseInt(isKaryawan) : 1,\r\n      role: [role],\r\n      address: address,\r\n      phone: phone,\r\n      province: parseInt(province),\r\n      city: parseInt(city),\r\n      fax: fax,\r\n      npwp: npwp,\r\n      address_id: parseInt(addressId),\r\n    };\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/users/update/${props.match.params.id}`,\r\n        data,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        history.push(\"/admin/user\");\r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      EditUser();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Edit User\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <CardHeader>\r\n                    <h3>Edit User</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Username\r\n                      </Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        placeholder=\"Masukan Username\"\r\n                        value={username}\r\n                        invalid={usernameError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setUsername(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setUsernameError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>Username tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nama\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nama\"\r\n                        placeholder=\"Masukan Nama\"\r\n                        value={name}\r\n                        invalid={nameError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setName(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setNameError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>Nama tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Email\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"email\"\r\n                        placeholder=\"Masukan Email\"\r\n                        value={email}\r\n                        invalid={emailError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setEmail(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setEmailError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>Email tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        Jenis Kelamin\r\n                      </Label>\r\n                      <Row>\r\n                        <Col>\r\n                          <div style={{ display: \"flex\" }}>\r\n                            <div className=\"custom-control custom-radio mb-3\">\r\n                              <Input\r\n                                className=\"custom-control-input\"\r\n                                id=\"customRadio3\"\r\n                                name=\"custom-radio-1\"\r\n                                type=\"radio\"\r\n                                value={1}\r\n                                checked={gender === 1}\r\n                                onClick={() => setGender(1)}\r\n                              />\r\n                              <Label\r\n                                className=\"custom-control-label\"\r\n                                htmlFor=\"customRadio3\"\r\n                              >\r\n                                Pria\r\n                              </Label>\r\n                            </div>\r\n                            <div\r\n                              className=\"custom-control custom-radio mb-3\"\r\n                              style={{ marginLeft: \"20px\" }}\r\n                            >\r\n                              <Input\r\n                                className=\"custom-control-input\"\r\n                                id=\"customRadio4\"\r\n                                name=\"custom-radio-1\"\r\n                                type=\"radio\"\r\n                                value={2}\r\n                                checked={gender === 2}\r\n                                onClick={() => setGender(2)}\r\n                              />\r\n                              <Label\r\n                                className=\"custom-control-label\"\r\n                                htmlFor=\"customRadio4\"\r\n                              >\r\n                                Wanita\r\n                              </Label>\r\n                            </div>\r\n                          </div>\r\n                        </Col>\r\n                      </Row>\r\n                    </FormGroup>\r\n                    {roleId === \"ROLE_SUPERADMIN\" ? (\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Is Karyawan\r\n                        </Label>\r\n                        <Row>\r\n                          <Col>\r\n                            <div style={{ display: \"flex\" }}>\r\n                              <div className=\"custom-control custom-radio mb-3\">\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio5\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={1}\r\n                                  checked={isKaryawan === 1}\r\n                                  onClick={() => setIsKaryawan(1)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio5\"\r\n                                >\r\n                                  Karyawan\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio6\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={2}\r\n                                  checked={isKaryawan === 2}\r\n                                  onClick={() => setIsKaryawan(2)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio6\"\r\n                                >\r\n                                  Bukan Karyawan\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </FormGroup>\r\n                    ) : (\r\n                      <div></div>\r\n                    )}\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        Role\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        disabled\r\n                        name=\"role\"\r\n                        type=\"select\"\r\n                        value={role}\r\n                        invalid={roleError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setRole(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setRoleError(\"\");\r\n                          }\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Pilih Role</option>\r\n                        {roles.map((role, key) => {\r\n                          return (\r\n                            <option key={key} value={role.roleId}>\r\n                              {role.name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </Input>\r\n                      <FormFeedback>Role tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        Province\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        name=\"Province\"\r\n                        type=\"select\"\r\n                        value={province}\r\n                        invalid={provinceError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setProvince(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setProvinceError(\"\");\r\n                          }\r\n                          getCity(e.target.value);\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Pilih Province</option>\r\n                        {provinces.map((prov, key) => {\r\n                          return (\r\n                            <option key={key} value={prov.id}>\r\n                              {prov.name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </Input>\r\n                      <FormFeedback>Province tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        Kota\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        name=\"Kota\"\r\n                        type=\"select\"\r\n                        value={city}\r\n                        invalid={cityError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setCity(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setCityError(\"\");\r\n                          }\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Pilih Kota</option>\r\n                        {cities.map((city, key) => {\r\n                          return (\r\n                            <option key={key} value={city.id}>\r\n                              {city.name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </Input>\r\n                      <FormFeedback>Kota tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Alamat\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"alamat\"\r\n                        placeholder=\"Masukan Alamat\"\r\n                        value={address}\r\n                        invalid={addressError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setAddress(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setAddressError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>Alamat tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nomor Telpon\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nomorTelpon\"\r\n                        placeholder=\"Masukan Nomor Telpon\"\r\n                        value={phone}\r\n                        invalid={phoneError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setPhone(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setPhoneError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Nomor Telpon tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Fax\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"fax\"\r\n                        placeholder=\"Masukan Fax\"\r\n                        value={fax}\r\n                        onChange={(e) => {\r\n                          setFax(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Npwp\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"npwp\"\r\n                        placeholder=\"Masukan Npwp\"\r\n                        value={npwp}\r\n                        onChange={(e) => {\r\n                          setNpwp(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        Simpan\r\n                      </Button>\r\n                    )}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {\"\"}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/user\">\r\n                      Kembali\r\n                    </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function CreateUser() {\r\n  const token = localStorage.token;\r\n  const warehouse = localStorage.warehouse;\r\n  const roleId = localStorage.authority;\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [usernameError, setUsernameError] = useState(null);\r\n  const [name, setName] = useState(\"\");\r\n  const [nameError, setNameError] = useState(null);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(null);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(null);\r\n  const [gender, setGender] = useState(1);\r\n  const [isKaryawan, setIsKaryawan] = useState(1);\r\n  const [roles, setRoles] = useState([]);\r\n  const [role, setRole] = useState(\"\");\r\n  const [roleError, setRoleError] = useState(null);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [userImage, setUserImage] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [addressError, setAddressError] = useState(null);\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [phoneError, setPhoneError] = useState(null);\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [province, setProvince] = useState(\"\");\r\n  const [provinceError, setProvinceError] = useState(null);\r\n  const [cities, setCities] = useState([]);\r\n  const [city, setCity] = useState(\"\");\r\n  const [cityError, setCityError] = useState(null);\r\n  const [fax, setFax] = useState(\"\");\r\n  const [npwp, setNpwp] = useState(\"\");\r\n  const [departments, setDepartments] = useState([]);\r\n  const [department, setDepartment] = useState(\"\");\r\n  const [departmentError, setDepartmentError] = useState(null);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (username === \"\") {\r\n      setUsernameError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (name === \"\") {\r\n      setNameError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (email === \"\") {\r\n      setEmailError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (password === \"\") {\r\n      setPasswordError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (role === \"\") {\r\n      setRoleError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (address === \"\") {\r\n      setAddressError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (phone === \"\") {\r\n      setPhoneError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (province === \"\") {\r\n      setProvinceError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (city === \"\") {\r\n      setCityError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (department === \"\") {\r\n      setDepartmentError(\"invalid\");\r\n      error = true;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getRole();\r\n    getProvince();\r\n    getDepartment();\r\n  }, []);\r\n\r\n  const getRole = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/roles/list?role=${roleId}`, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setRoles(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getProvince = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/province/list`, { headers })\r\n      .then((data) => {\r\n        setProvinces(data.data.response_data);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getCity = (provinceId) => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/city?province_id=${provinceId}`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        setCities(data.data.response_data);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getDepartment = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/department/list?warehouse_id=${warehouse}`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        setDepartments(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  function CreateData() {\r\n    setLoading(true);\r\n    let data = {\r\n      username: username,\r\n      name: name,\r\n      email: email,\r\n      password: password,\r\n      gender: parseInt(gender),\r\n      is_karyawan: roleId === \"ROLE_SUPERADMIN\" ? parseInt(isKaryawan) : 1,\r\n      role: [role],\r\n      description: description,\r\n      dept_id: parseInt(department),\r\n      address: address,\r\n      phone: phone,\r\n      province: parseInt(province),\r\n      city: parseInt(city),\r\n      fax: fax,\r\n      npwp: npwp,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/users/register`, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then(function (response) {\r\n        history.push(\"/admin/user\");\r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      CreateData();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Daftar User\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <CardHeader>\r\n                    <h3>Daftar User</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Username\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        placeholder=\"Masukan Username\"\r\n                        value={username}\r\n                        invalid={usernameError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setUsername(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setUsernameError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>Username tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nama\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nama\"\r\n                        placeholder=\"Masukan Nama\"\r\n                        value={name}\r\n                        invalid={nameError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setName(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setNameError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>Nama tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Email\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"email\"\r\n                        placeholder=\"Masukan Email\"\r\n                        value={email}\r\n                        invalid={emailError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setEmail(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setEmailError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>Email tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Password\r\n                      </Label>\r\n                      <Input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Masukan Password\"\r\n                        value={password}\r\n                        invalid={passwordError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setPassword(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setPasswordError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>Password tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        Jenis Kelamin\r\n                      </Label>\r\n                      <Row>\r\n                        <Col>\r\n                          <div style={{ display: \"flex\" }}>\r\n                            <div className=\"custom-control custom-radio mb-3\">\r\n                              <Input\r\n                                className=\"custom-control-input\"\r\n                                id=\"customRadio3\"\r\n                                name=\"custom-radio-1\"\r\n                                type=\"radio\"\r\n                                value={1}\r\n                                checked={gender === 1}\r\n                                onClick={() => setGender(1)}\r\n                              />\r\n                              <Label\r\n                                className=\"custom-control-label\"\r\n                                htmlFor=\"customRadio3\"\r\n                              >\r\n                                Pria\r\n                              </Label>\r\n                            </div>\r\n                            <div\r\n                              className=\"custom-control custom-radio mb-3\"\r\n                              style={{ marginLeft: \"20px\" }}\r\n                            >\r\n                              <Input\r\n                                className=\"custom-control-input\"\r\n                                id=\"customRadio4\"\r\n                                name=\"custom-radio-1\"\r\n                                type=\"radio\"\r\n                                value={2}\r\n                                checked={gender === 2}\r\n                                onClick={() => setGender(2)}\r\n                              />\r\n                              <Label\r\n                                className=\"custom-control-label\"\r\n                                htmlFor=\"customRadio4\"\r\n                              >\r\n                                Wanita\r\n                              </Label>\r\n                            </div>\r\n                          </div>\r\n                        </Col>\r\n                      </Row>\r\n                    </FormGroup>\r\n                    {roleId === \"ROLE_SUPERADMIN\" ? (\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Is Karyawan\r\n                        </Label>\r\n                        <Row>\r\n                          <Col>\r\n                            <div style={{ display: \"flex\" }}>\r\n                              <div className=\"custom-control custom-radio mb-3\">\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio5\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={1}\r\n                                  checked={isKaryawan === 1}\r\n                                  onClick={() => setIsKaryawan(1)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio5\"\r\n                                >\r\n                                  Karyawan\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio6\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={2}\r\n                                  checked={isKaryawan === 2}\r\n                                  onClick={() => setIsKaryawan(2)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio6\"\r\n                                >\r\n                                  Bukan Karyawan\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </FormGroup>\r\n                    ) : (\r\n                      <div></div>\r\n                    )}\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        Role\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        name=\"role\"\r\n                        type=\"select\"\r\n                        value={role}\r\n                        invalid={roleError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setRole(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setRoleError(\"\");\r\n                          }\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Pilih Role</option>\r\n                        {roles.map((role, key) => {\r\n                          return (\r\n                            <option key={key} value={role.roleId}>\r\n                              {role.name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </Input>\r\n                      <FormFeedback>Role tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        Departemen\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        name=\"department\"\r\n                        type=\"select\"\r\n                        value={department}\r\n                        invalid={departmentError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setDepartment(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setDepartmentError(\"\");\r\n                          }\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Pilih Department</option>\r\n                        {departments.map((dept, key) => {\r\n                          return (\r\n                            <option key={key} value={dept.id}>\r\n                              {dept.department_name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </Input>\r\n                      <FormFeedback>Departemen tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        Province\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        name=\"Province\"\r\n                        type=\"select\"\r\n                        value={province}\r\n                        invalid={provinceError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setProvince(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setProvinceError(\"\");\r\n                          }\r\n                          getCity(e.target.value);\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Pilih Province</option>\r\n                        {provinces.map((prov, key) => {\r\n                          return (\r\n                            <option key={key} value={prov.id}>\r\n                              {prov.name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </Input>\r\n                      <FormFeedback>Province tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        Kota\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        name=\"Kota\"\r\n                        type=\"select\"\r\n                        value={city}\r\n                        invalid={cityError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setCity(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setCityError(\"\");\r\n                          }\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Pilih Kota</option>\r\n                        {cities.map((city, key) => {\r\n                          return (\r\n                            <option key={key} value={city.id}>\r\n                              {city.name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </Input>\r\n                      <FormFeedback>Kota tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Alamat\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"alamat\"\r\n                        placeholder=\"Masukan Alamat\"\r\n                        value={address}\r\n                        invalid={addressError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setAddress(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setAddressError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>Alamat tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nomor Telpon\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nomorTelpon\"\r\n                        placeholder=\"Masukan Nomor Telpon\"\r\n                        value={phone}\r\n                        invalid={phoneError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setPhone(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setPhoneError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Nomor Telpon tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Fax\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"fax\"\r\n                        placeholder=\"Masukan Fax\"\r\n                        value={fax}\r\n                        onChange={(e) => {\r\n                          setFax(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Npwp\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"npwp\"\r\n                        placeholder=\"Masukan Npwp\"\r\n                        value={npwp}\r\n                        onChange={(e) => {\r\n                          setNpwp(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Deskripsi\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"deskripsi\"\r\n                        placeholder=\"Masukan Deskripsi\"\r\n                        value={description}\r\n                        onChange={(e) => {\r\n                          setDescription(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        Simpan\r\n                      </Button>\r\n                    )}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {\"\"}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/user\">\r\n                      Kembali\r\n                    </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form, FormFeedback\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function EditDepartmen(props) {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [nameDepartment, setNameDepartment] = useState(\"\");\r\n  const [nameDepartmentError, setNameDepartmentError] = useState(null);\r\n  const [codeDepartment, setCodeDepartment] = useState(\"\");\r\n  const [codeDepartmentError, setCodeDepartmentError] = useState(null);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (nameDepartment === \"\") {\r\n      setNameDepartmentError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (codeDepartment === \"\") {\r\n        setCodeDepartmentError(\"invalid\");\r\n        error = true;\r\n      }\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDepatmentById();\r\n  }, []);\r\n\r\n  const getDepatmentById = () => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/department/${props.match.params.id}`, { headers\r\n    })\r\n    .then(data => {\r\n        setNameDepartment(data.data.response.department_name);\r\n        setCodeDepartment(data.data.response.department_code);\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  function EditData() {\r\n    setLoading(true);\r\n    let data = {\r\n        department_name: nameDepartment,\r\n        department_code: codeDepartment,\r\n        id_warehouse : parseInt(warehouse)\r\n    }\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/department/update/${props.match.params.id}`, data, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        history.push(\"/admin/departemen\");\r\n      })\r\n      .then(json => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n        EditData();\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Edit Departemen\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit} >\r\n                  <CardHeader>\r\n                    <h3>Edit Departemen</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nama Departemen\r\n                        <span className=\"text-danger\">*</span>\r\n                                            </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nama\"\r\n                        placeholder=\"Masukan Nama Departemen\"\r\n                        value={nameDepartment}\r\n                        invalid={nameDepartmentError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setNameDepartment(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setNameDepartmentError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Nama Departemen tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Kode Departemen\r\n                        <span className=\"text-danger\">*</span>\r\n                                            </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"kode\"\r\n                        placeholder=\"Masukan Kode Departemen\"\r\n                        value={codeDepartment}\r\n                        invalid={codeDepartmentError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setCodeDepartment(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setCodeDepartmentError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Kode Departemen tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (<Button color=\"primary\" type=\"submit\">\r\n                      Simpan\r\n                    </Button>)}\r\n                    {isLoading && (<Button color=\"primary\" disabled>\r\n                      <i className=\"fas fa-spinner fa-spin\"></i>{\"\"}\r\n                      loading...\r\n                    </Button>)}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/departemen\">\r\n                      Kembali\r\n                                        </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form, FormFeedback\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function CreateDepartmen() {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [nameDepartment, setNameDepartment] = useState(\"\");\r\n  const [nameDepartmentError, setNameDepartmentError] = useState(null);\r\n  const [codeDepartment, setCodeDepartment] = useState(\"\");\r\n  const [codeDepartmentError, setCodeDepartmentError] = useState(null);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (nameDepartment === \"\") {\r\n      setNameDepartmentError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (codeDepartment === \"\") {\r\n        setCodeDepartmentError(\"invalid\");\r\n        error = true;\r\n      }\r\n    return error;\r\n  };\r\n\r\n  function CreateData() {\r\n    setLoading(true);\r\n    let data = {\r\n        department_name: nameDepartment,\r\n        department_code: codeDepartment,\r\n        id_warehouse: parseInt(warehouse)\r\n    }\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/department/save`, data, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        history.push(\"/admin/departemen\");\r\n      })\r\n      .then(json => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      CreateData();\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Daftar Departemen\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit} >\r\n                  <CardHeader>\r\n                    <h3>Daftar Departemen</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nama Departemen\r\n                        <span className=\"text-danger\">*</span>\r\n                                            </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nama\"\r\n                        placeholder=\"Masukan Nama Departemen\"\r\n                        value={nameDepartment}\r\n                        invalid={nameDepartmentError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setNameDepartment(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setNameDepartmentError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Nama Departemen tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Kode Departemen\r\n                        <span className=\"text-danger\">*</span>\r\n                                            </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"kode\"\r\n                        placeholder=\"Masukan Kode Departemen\"\r\n                        value={codeDepartment}\r\n                        invalid={codeDepartmentError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setCodeDepartment(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setCodeDepartmentError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Kode Departemen tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (<Button color=\"primary\" type=\"submit\">\r\n                      Simpan\r\n                    </Button>)}\r\n                    {isLoading && (<Button color=\"primary\" disabled>\r\n                      <i className=\"fas fa-spinner fa-spin\"></i>{\"\"}\r\n                      loading...\r\n                    </Button>)}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/departemen\">\r\n                      Kembali\r\n                                        </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function EditKaryawan(props) {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [nameError, setNameError] = useState(null);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [usernameError, setUsernameError] = useState(null);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [descriptionError, setDescriptionError] = useState(null);\r\n  const [allDepartment, setAllDepartment] = useState([]);\r\n  const [department, setDepartment] = useState(\"\");\r\n  const [departmentError, setDepartmentError] = useState(null);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (name === \"\") {\r\n      setNameError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (username === \"\") {\r\n      setUsernameError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (description === \"\") {\r\n      setDescriptionError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (department === \"\") {\r\n      setDepartmentError(\"invalid\");\r\n      error = true;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getKaryawan();\r\n  }, []);\r\n\r\n  const getKaryawan = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/karyawan/${props.match.params.id}`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        getDepartment(data.data.response.dept_id);\r\n        setName(data.data.response.name);\r\n        setUsername(data.data.response.username);\r\n        setDescription(data.data.response.description);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getDepartment = (id) => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/department/list?warehouse_id=${warehouse}`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        setAllDepartment(data.data.response);\r\n        setDepartment(id);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  function EditData() {\r\n    setLoading(true);\r\n    let data = {\r\n      username: username,\r\n      name: name,\r\n      description: description,\r\n      dept_id: parseInt(department),\r\n    };\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/karyawan/update/${props.match.params.id}`,\r\n        data,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        history.push(\"/admin/karyawan\");\r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      EditData();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Edit Departemen\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <CardHeader>\r\n                    <h3>Edit Departemen</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nama\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nama\"\r\n                        placeholder=\"Masukan Nama\"\r\n                        value={name}\r\n                        invalid={nameError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setName(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setNameError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>Nama tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Username\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        disabled\r\n                        name=\"username\"\r\n                        placeholder=\"Masukan Username\"\r\n                        value={username}\r\n                        invalid={usernameError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setUsername(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setUsernameError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>Username tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Keterangan\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"keterangan\"\r\n                        placeholder=\"Masukan Keterangan\"\r\n                        value={description}\r\n                        invalid={descriptionError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setDescription(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setDescriptionError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>Keterangan tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        Departemen\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        name=\"department\"\r\n                        type=\"select\"\r\n                        value={department}\r\n                        invalid={departmentError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setDepartment(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setDepartmentError(\"\");\r\n                          }\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Pilih Departemen</option>\r\n                        {allDepartment.map((dep, key) => {\r\n                          return (\r\n                            <option key={key} value={dep.id}>\r\n                              {dep.department_name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </Input>\r\n                      <FormFeedback>Departemen tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        Simpan\r\n                      </Button>\r\n                    )}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {\"\"}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/karyawan\">\r\n                      Kembali\r\n                    </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form, FormFeedback\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function EditKaryawan(props) {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [nameError, setNameError] = useState(null);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [usernameError, setUsernameError] = useState(null);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [descriptionError, setDescriptionError] = useState(null);\r\n  const [allDepartment, setAllDepartment] = useState([]);\r\n  const [department, setDepartment] = useState(\"\");\r\n  const [departmentError, setDepartmentError] = useState(null);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (name === \"\") {\r\n      setNameError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (username === \"\") {\r\n      setUsernameError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (description === \"\") {\r\n      setDescriptionError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (department === \"\") {\r\n      setDepartmentError(\"invalid\");\r\n      error = true;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDepartment();\r\n  }, []);\r\n\r\n  const getDepartment = () => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/department/list?warehouse_id=${warehouse}`, { headers\r\n    })\r\n    .then(data => {\r\n      setAllDepartment(data.data.response);\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  function CreateData() {\r\n    setLoading(true);\r\n    let data = {\r\n      username: username,\r\n      name: name,\r\n      description: description,\r\n      dept_id: parseInt(department),\r\n    }\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/karyawan/register`, data, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        history.push(\"/admin/karyawan\");\r\n      })\r\n      .then(json => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n        CreateData();\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Daftar Departemen\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit} >\r\n                  <CardHeader>\r\n                    <h3>Daftar Departemen</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nama\r\n                        <span className=\"text-danger\">*</span>\r\n                                            </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nama\"\r\n                        placeholder=\"Masukan Nama\"\r\n                        value={name}\r\n                        invalid={nameError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setName(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setNameError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Nama tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Username\r\n                        <span className=\"text-danger\">*</span>\r\n                                            </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        placeholder=\"Masukan Username\"\r\n                        value={username}\r\n                        invalid={usernameError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setUsername(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setUsernameError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Username tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Keterangan\r\n                        <span className=\"text-danger\">*</span>\r\n                                            </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"keterangan\"\r\n                        placeholder=\"Masukan Keterangan\"\r\n                        value={description}\r\n                        invalid={descriptionError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setDescription(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setDescriptionError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Keterangan tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        Departemen\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        name=\"department\"\r\n                        type=\"select\"\r\n                        value={department}\r\n                        invalid={departmentError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setDepartment(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setDepartmentError(\"\");\r\n                          }\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Pilih Departemen</option>\r\n                        {\r\n                          allDepartment.map((dep, key) => {\r\n                            return <option key={key} value={dep.id}>{dep.department_name}</option>\r\n                          })\r\n                        }\r\n                      </Input>\r\n                      <FormFeedback>Departemen tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (<Button color=\"primary\" type=\"submit\">\r\n                      Simpan\r\n                    </Button>)}\r\n                    {isLoading && (<Button color=\"primary\" disabled>\r\n                      <i className=\"fas fa-spinner fa-spin\"></i>{\"\"}\r\n                      loading...\r\n                    </Button>)}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/karyawan\">\r\n                      Kembali\r\n                    </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form, FormFeedback\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function EditAddress(props) {\r\n  const token = localStorage.token;\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [province, setProvince] = useState(\"\");\r\n  const [provinceError, setProvinceError] = useState(null);\r\n  const [cities, setCities] = useState([]);\r\n  const [city, setCity] = useState(\"\");\r\n  const [cityError, setCityError] = useState(null);\r\n  const [address, setAddress] = useState(\"\");\r\n  const [addressError, setAddressError] = useState(null);\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [phoneNumberError, setPhoneNumberError] = useState(null);\r\n  const [fax, setFax] = useState(\"\");\r\n  const [faxError, setFaxError] = useState(null);\r\n  const [npwp, setNpwp] = useState(\"\");\r\n  const [npwpError, setNpwpError] = useState(null);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (province === \"\") {\r\n      setProvinceError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (city === \"\") {\r\n      setCityError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (address === \"\") {\r\n      setAddressError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (phoneNumber === \"\") {\r\n      setPhoneNumberError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (fax === \"\") {\r\n      setFaxError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (npwp === \"\") {\r\n      setNpwpError(\"invalid\");\r\n      error = true;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAddressById();\r\n  }, []);\r\n\r\n  const getAddressById = () => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/address/${props.match.params.id}`, { headers\r\n    })\r\n    .then(data => {\r\n        setProvince(data.data.response.province);\r\n        setCity(data.data.response.city);\r\n        setAddress(data.data.response.address);\r\n        setPhoneNumber(data.data.response.phone);\r\n        setFax(data.data.response.fax);\r\n        setNpwp(data.data.response.npwp);\r\n        getCity(data.data.response.province, data.data.response.city);\r\n        getProvince();\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const getProvince = () => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/province/list`, { headers\r\n    })\r\n    .then(data => {\r\n        setProvinces(data.data.response_data)\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const getCity = (provinceId, cityId) => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/city?province_id=${provinceId}`, { headers\r\n    })\r\n    .then(data => {\r\n        setCities(data.data.response_data);\r\n        setCity(cityId);\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  function EditData() {\r\n    setLoading(true);\r\n    let data = {\r\n      active_flag: 1,\r\n      primary_ship_flag: 1,\r\n      province: province,\r\n      city: city,\r\n      address: address,\r\n      phone: phoneNumber,\r\n      fax: fax,\r\n      npwp: npwp\r\n    }\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/address/update/${props.match.params.id}`, data, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        history.push(\"/admin/alamat\");\r\n      })\r\n      .then(json => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n        EditData();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Edit Alamat\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit} >\r\n                  <CardHeader>\r\n                    <h3>Edit Alamat</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        Province\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        name=\"Province\"\r\n                        type=\"select\"\r\n                        value={province}\r\n                        invalid={provinceError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setProvince(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setProvinceError(\"\");\r\n                          }\r\n                          getCity(e.target.value);\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Pilih Province</option>\r\n                        {\r\n                          provinces.map((prov, key) => {\r\n                            return <option key={key} value={prov.id}>{prov.name}</option>\r\n                          })\r\n                        }\r\n                      </Input>\r\n                      <FormFeedback>Province tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        Kota\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        name=\"Kota\"\r\n                        type=\"select\"\r\n                        value={city}\r\n                        invalid={cityError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setCity(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setCityError(\"\");\r\n                          }\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Pilih Kota</option>\r\n                        {\r\n                          cities.map((city, key) => {\r\n                            return <option key={key} value={city.id}>{city.name}</option>\r\n                          })\r\n                        }\r\n                      </Input>\r\n                      <FormFeedback>Kota tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Alamat\r\n                        <span className=\"text-danger\">*</span>\r\n                                            </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"alamat\"\r\n                        placeholder=\"Masukan Alamat\"\r\n                        value={address}\r\n                        invalid={addressError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setAddress(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setAddressError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Alamat tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nomor Telpon\r\n                        <span className=\"text-danger\">*</span>\r\n                                            </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"phoneNumber\"\r\n                        placeholder=\"Masukan Nomor Telpon\"\r\n                        value={phoneNumber}\r\n                        invalid={phoneNumberError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setPhoneNumber(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setPhoneNumberError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Nomor Telpon tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        FAX\r\n                        <span className=\"text-danger\">*</span>\r\n                                            </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"fax\"\r\n                        placeholder=\"Masukan Fax\"\r\n                        value={fax}\r\n                        invalid={faxError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setFax(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setFaxError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Fax tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        NPWP\r\n                        <span className=\"text-danger\">*</span>\r\n                                            </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"npwp\"\r\n                        placeholder=\"Masukan Npwp\"\r\n                        value={npwp}\r\n                        invalid={npwpError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setNpwp(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setNpwpError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        NPWP tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (<Button color=\"primary\" type=\"submit\">\r\n                      Simpan\r\n                    </Button>)}\r\n                    {isLoading && (<Button color=\"primary\" disabled>\r\n                      <i className=\"fas fa-spinner fa-spin\"></i>{\"\"}\r\n                      loading...\r\n                    </Button>)}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/alamat\">\r\n                      Kembali\r\n                                        </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function CreateAddress() {\r\n  const token = localStorage.token;\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [province, setProvince] = useState(\"\");\r\n  const [provinceError, setProvinceError] = useState(null);\r\n  const [cities, setCities] = useState([]);\r\n  const [city, setCity] = useState(\"\");\r\n  const [cityError, setCityError] = useState(null);\r\n  const [address, setAddress] = useState(\"\");\r\n  const [addressError, setAddressError] = useState(null);\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [phoneNumberError, setPhoneNumberError] = useState(null);\r\n  const [fax, setFax] = useState(\"\");\r\n  const [faxError, setFaxError] = useState(null);\r\n  const [npwp, setNpwp] = useState(\"\");\r\n  const [npwpError, setNpwpError] = useState(null);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (province === \"\") {\r\n      setProvinceError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (city === \"\") {\r\n      setCityError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (address === \"\") {\r\n      setAddressError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (phoneNumber === \"\") {\r\n      setPhoneNumberError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (fax === \"\") {\r\n      setFaxError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (npwp === \"\") {\r\n      setNpwpError(\"invalid\");\r\n      error = true;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProvince();\r\n  }, []);\r\n\r\n  const getProvince = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/province/list`, { headers })\r\n      .then((data) => {\r\n        setProvinces(data.data.response_data);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getCity = (provinceId) => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/city?province_id=${provinceId}`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        setCities(data.data.response_data);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  function CreateData() {\r\n    setLoading(true);\r\n    let data = {\r\n      active_flag: 1,\r\n      province: province,\r\n      city: city,\r\n      address: address,\r\n      phone: phoneNumber,\r\n      fax: fax,\r\n      npwp: npwp,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/address/save`, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then(function (response) {\r\n        history.push(\"/admin/alamat\");\r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      CreateData();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Daftar Alamat\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <CardHeader>\r\n                    <h3>Daftar Alamat</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        Province\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        name=\"Province\"\r\n                        type=\"select\"\r\n                        value={province}\r\n                        invalid={provinceError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setProvince(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setProvinceError(\"\");\r\n                          }\r\n                          getCity(e.target.value);\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Pilih Province</option>\r\n                        {provinces.map((prov, key) => {\r\n                          return (\r\n                            <option key={key} value={prov.id}>\r\n                              {prov.name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </Input>\r\n                      <FormFeedback>Province tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        Kota\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        name=\"Kota\"\r\n                        type=\"select\"\r\n                        value={city}\r\n                        invalid={cityError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setCity(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setCityError(\"\");\r\n                          }\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Pilih Kota</option>\r\n                        {cities.map((city, key) => {\r\n                          return (\r\n                            <option key={key} value={city.id}>\r\n                              {city.name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </Input>\r\n                      <FormFeedback>Kota tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Alamat\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"alamat\"\r\n                        placeholder=\"Masukan Alamat\"\r\n                        value={address}\r\n                        invalid={addressError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setAddress(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setAddressError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>Alamat tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nomor Telpon\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"phoneNumber\"\r\n                        placeholder=\"Masukan Nomor Telpon\"\r\n                        value={phoneNumber}\r\n                        invalid={phoneNumberError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setPhoneNumber(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setPhoneNumberError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Nomor Telpon tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        FAX\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"fax\"\r\n                        placeholder=\"Masukan Fax\"\r\n                        value={fax}\r\n                        invalid={faxError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setFax(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setFaxError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>Fax tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        NPWP\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"npwp\"\r\n                        placeholder=\"Masukan Npwp\"\r\n                        value={npwp}\r\n                        invalid={npwpError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setNpwp(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setNpwpError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>NPWP tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        Simpan\r\n                      </Button>\r\n                    )}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {\"\"}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/alamat\">\r\n                      Kembali\r\n                    </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form, FormFeedback\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function EditAddress(props) {\r\n  const token = localStorage.token;\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [nameError, setNameError] = useState(null);\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [province, setProvince] = useState(\"\");\r\n  const [provinceError, setProvinceError] = useState(null);\r\n  const [cities, setCities] = useState([]);\r\n  const [city, setCity] = useState(\"\");\r\n  const [cityError, setCityError] = useState(null);\r\n  const [address, setAddress] = useState(\"\");\r\n  const [addressError, setAddressError] = useState(null);\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [phoneNumberError, setPhoneNumberError] = useState(null);\r\n  const [alamatId, setAlamatId] = useState(\"\");\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (province === \"\") {\r\n      setProvinceError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (city === \"\") {\r\n      setCityError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (address === \"\") {\r\n      setAddressError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (phoneNumber === \"\") {\r\n      setPhoneNumberError(\"invalid\");\r\n      error = true;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCustomerById();\r\n    getAddressById();\r\n  }, []);\r\n\r\n  const getCustomerById = () => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/customer/${props.match.params.id}`, { headers\r\n    })\r\n    .then(data => {\r\n      setName(data.data.response.name);\r\n      getAddressById(data.data.response.alamat_id);\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const getAddressById = (addressId) => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/address/${addressId}`, { headers\r\n    })\r\n    .then(data => {\r\n      getProvince();\r\n      getCity(data.data.response.province, data.data.response.city);\r\n      setProvince(data.data.response.province);\r\n      setCity(data.data.response.city);\r\n      setAddress(data.data.response.address);\r\n      setPhoneNumber(data.data.response.phone);\r\n      setFax(data.data.response.fax);\r\n      setNpwp(data.data.response.npwp);\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const getProvince = () => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/province/list`, { headers\r\n    })\r\n    .then(data => {\r\n        setProvinces(data.data.response_data)\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const getCity = (provinceId, cityId) => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/city?province_id=${provinceId}`, { headers\r\n    })\r\n    .then(data => {\r\n        setCities(data.data.response_data);\r\n        setCity(cityId);\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  function EditData() {\r\n    setLoading(true);\r\n    let data = {\r\n      name: name,\r\n      active_flag: 1,\r\n      province: province,\r\n      city: city,\r\n      address: address,\r\n      phone: phoneNumber,\r\n    }\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/customer/update/${props.match.params.id}`, data, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        history.push(\"/admin/customer\");\r\n      })\r\n      .then(json => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n        EditData();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Edit Customer\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit} >\r\n                  <CardHeader>\r\n                    <h3>Edit Customer</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                  <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nama\r\n                        <span className=\"text-danger\">*</span>\r\n                                            </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nama\"\r\n                        placeholder=\"Masukan Nama\"\r\n                        value={name}\r\n                        invalid={nameError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setName(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setNameError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Nama tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        Province\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        name=\"Province\"\r\n                        type=\"select\"\r\n                        value={province}\r\n                        invalid={provinceError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setProvince(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setProvinceError(\"\");\r\n                          }\r\n                          getCity(e.target.value);\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Pilih Province</option>\r\n                        {\r\n                          provinces.map((prov, key) => {\r\n                            return <option key={key} value={prov.id}>{prov.name}</option>\r\n                          })\r\n                        }\r\n                      </Input>\r\n                      <FormFeedback>Province tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        Kota\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        name=\"Kota\"\r\n                        type=\"select\"\r\n                        value={city}\r\n                        invalid={cityError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setCity(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setCityError(\"\");\r\n                          }\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Pilih Kota</option>\r\n                        {\r\n                          cities.map((city, key) => {\r\n                            return <option key={key} value={city.id}>{city.name}</option>\r\n                          })\r\n                        }\r\n                      </Input>\r\n                      <FormFeedback>Kota tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Alamat\r\n                        <span className=\"text-danger\">*</span>\r\n                                            </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"alamat\"\r\n                        placeholder=\"Masukan Alamat\"\r\n                        value={address}\r\n                        invalid={addressError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setAddress(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setAddressError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Alamat tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nomor Telpon\r\n                        <span className=\"text-danger\">*</span>\r\n                                            </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"phoneNumber\"\r\n                        placeholder=\"Masukan Nomor Telpon\"\r\n                        value={phoneNumber}\r\n                        invalid={phoneNumberError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setPhoneNumber(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setPhoneNumberError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Nomor Telpon tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (<Button color=\"primary\" type=\"submit\">\r\n                      Simpan\r\n                    </Button>)}\r\n                    {isLoading && (<Button color=\"primary\" disabled>\r\n                      <i className=\"fas fa-spinner fa-spin\"></i>{\"\"}\r\n                      loading...\r\n                    </Button>)}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/customer\">\r\n                      Kembali\r\n                                        </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form, FormFeedback\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function CreateCustomer() {\r\n  const token = localStorage.token;\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [nameError, setNameError] = useState(null);\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [province, setProvince] = useState(\"\");\r\n  const [provinceError, setProvinceError] = useState(null);\r\n  const [cities, setCities] = useState([]);\r\n  const [city, setCity] = useState(\"\");\r\n  const [cityError, setCityError] = useState(null);\r\n  const [address, setAddress] = useState(\"\");\r\n  const [addressError, setAddressError] = useState(null);\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [phoneNumberError, setPhoneNumberError] = useState(null);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (name === \"\") {\r\n      setNameError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (province === \"\") {\r\n      setProvinceError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (city === \"\") {\r\n      setCityError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (address === \"\") {\r\n      setAddressError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (phoneNumber === \"\") {\r\n      setPhoneNumberError(\"invalid\");\r\n      error = true;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProvince();\r\n  }, []);\r\n\r\n  const getProvince = () => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/province/list`, { headers\r\n    })\r\n    .then(data => {\r\n        setProvinces(data.data.response_data)\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const getCity = (provinceId) => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/city?province_id=${provinceId}`, { headers\r\n    })\r\n    .then(data => {\r\n        setCities(data.data.response_data)\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  function CreateData() {\r\n    setLoading(true);\r\n    let data = {\r\n      name: name,\r\n      active_flag: 1,\r\n      province: province,\r\n      city: city,\r\n      address: address,\r\n      phone: phoneNumber,\r\n    }\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/customer/save`, data, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        history.push(\"/admin/customer\");\r\n      })\r\n      .then(json => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      CreateData();\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Daftar Customer\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit} >\r\n                  <CardHeader>\r\n                    <h3>Daftar Customer</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                  <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nama\r\n                        <span className=\"text-danger\">*</span>\r\n                                            </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nama\"\r\n                        placeholder=\"Masukan Nama\"\r\n                        value={name}\r\n                        invalid={nameError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setName(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setNameError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Name tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        Province\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        name=\"Province\"\r\n                        type=\"select\"\r\n                        value={province}\r\n                        invalid={provinceError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setProvince(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setProvinceError(\"\");\r\n                          }\r\n                          getCity(e.target.value);\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Pilih Province</option>\r\n                        {\r\n                          provinces.map((prov, key) => {\r\n                            return <option key={key} value={prov.id}>{prov.name}</option>\r\n                          })\r\n                        }\r\n                      </Input>\r\n                      <FormFeedback>Province tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        Kota\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        name=\"Kota\"\r\n                        type=\"select\"\r\n                        value={city}\r\n                        invalid={cityError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setCity(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setCityError(\"\");\r\n                          }\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Pilih Kota</option>\r\n                        {\r\n                          cities.map((city, key) => {\r\n                            return <option key={key} value={city.id}>{city.name}</option>\r\n                          })\r\n                        }\r\n                      </Input>\r\n                      <FormFeedback>Kota tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Alamat\r\n                        <span className=\"text-danger\">*</span>\r\n                                            </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"alamat\"\r\n                        placeholder=\"Masukan Alamat\"\r\n                        value={address}\r\n                        invalid={addressError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setAddress(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setAddressError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Alamat tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nomor Telpon\r\n                        <span className=\"text-danger\">*</span>\r\n                                            </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"phoneNumber\"\r\n                        placeholder=\"Masukan Nomor Telpon\"\r\n                        value={phoneNumber}\r\n                        invalid={phoneNumberError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setPhoneNumber(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setPhoneNumberError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Nomor Telpon tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (<Button color=\"primary\" type=\"submit\">\r\n                      Simpan\r\n                    </Button>)}\r\n                    {isLoading && (<Button color=\"primary\" disabled>\r\n                      <i className=\"fas fa-spinner fa-spin\"></i>{\"\"}\r\n                      loading...\r\n                    </Button>)}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/customer\">\r\n                      Kembali\r\n                                        </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form, FormFeedback\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function EditSupplier(props) {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [namePerson, setNamePerson] = useState(\"\");\r\n  const [namePersonError, setNamePersonError] = useState(null);\r\n  const [codePerson, setCodePerson] = useState(\"\");\r\n  const [codePersonError, setCodePersonError] = useState(null);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [descriptionError, setDescriptionError] = useState(null);\r\n  const [limitPiutang, setLimitPiutang] = useState(\"\");\r\n  const [limitPiutangError, setLimitPiutangError] = useState(null);\r\n  const [limitHutang, setLimitHutang] = useState(\"\");\r\n  const [limitHutangError, setLimitHutangError] = useState(null);\r\n  const [allMataUang, setAllMataUang] = useState([]);\r\n  const [mataUang, setMataUang] = useState(\"\");\r\n  const [mataUangError, setMataUangError] = useState(null);\r\n  const [npwp, setNpwp] = useState(\"\");\r\n  const [npwpError, setNpwpError] = useState(null);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (namePerson === \"\") {\r\n      setNamePersonError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (codePerson === \"\") {\r\n      setCodePersonError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (description === \"\") {\r\n      setDescriptionError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (limitHutang === \"\") {\r\n      setLimitHutangError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (limitPiutang === \"\") {\r\n      setLimitPiutangError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (mataUang === \"\") {\r\n      setMataUangError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (npwp === \"\") {\r\n      setNpwpError(\"invalid\");\r\n      error = true;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getById();\r\n  }, []);\r\n\r\n  const getById = () => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/person/${props.match.params.id}`, { headers\r\n    })\r\n    .then(data => {\r\n        getMatauang(data.data.response.mata_uang_id);\r\n        setNamePerson(data.data.response.person_name);\r\n        setCodePerson(data.data.response.person_code);\r\n        setDescription(data.data.response.description);\r\n        setLimitHutang(data.data.response.limit_hutang);\r\n        setLimitPiutang(data.data.response.limit_piutang);\r\n        setNpwp(data.data.response.npwp_no);\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const getMatauang = (id) => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/mata-uang/list`, { headers\r\n    })\r\n    .then(data => {\r\n      setAllMataUang(data.data.response);\r\n      setMataUang(id);\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  function EditData() {\r\n    setLoading(true);\r\n    let data = {\r\n      person_name: namePerson,\r\n      person_code: codePerson,\r\n      description: description,\r\n      mata_uang_id: parseInt(mataUang),\r\n      coa_hut_id: 39,\r\n      coa_piut_id: 5,\r\n      tunai_flag: 2,\r\n      note: null,\r\n      limit_piutang: parseInt(limitPiutang),\r\n      limit_hutang: parseInt(limitHutang),\r\n      active_flag: 1,\r\n      npwp_no: npwp,\r\n      tipe_harga_jual: null,\r\n      tipe: \"\",\r\n      flag_supp: null,\r\n    }\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/person/update/${props.match.params.id}`, data, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        history.push(\"/admin/person\");\r\n      })\r\n      .then(json => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n        EditData();\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Edit Supplier\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit} >\r\n                  <CardHeader>\r\n                    <h3>Edit Supplier</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nama Supplier\r\n                        <span className=\"text-danger\">*</span>\r\n                                            </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nama\"\r\n                        placeholder=\"Masukan Nama Supplier\"\r\n                        value={namePerson}\r\n                        invalid={namePersonError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setNamePerson(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setNamePersonError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Nama Supplier tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Kode Supplier\r\n                        <span className=\"text-danger\">*</span>\r\n                                            </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"code\"\r\n                        placeholder=\"Masukan Kode Supplier\"\r\n                        value={codePerson}\r\n                        invalid={codePersonError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setCodePerson(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setCodePersonError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Kode Supplier tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Limit Hutang\r\n                        <span className=\"text-danger\">*</span>\r\n                                            </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"limitHutang\"\r\n                        placeholder=\"Masukan Limit Hutang\"\r\n                        value={limitHutang}\r\n                        invalid={limitHutangError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setLimitHutang(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setLimitHutangError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Limit Hutang tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Limit Piutang\r\n                        <span className=\"text-danger\">*</span>\r\n                                            </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"limitPiutang\"\r\n                        placeholder=\"Masukan Limit Piutang\"\r\n                        value={limitPiutang}\r\n                        invalid={limitPiutangError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setLimitPiutang(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setLimitPiutangError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Limit Piutang tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Keterangan\r\n                        <span className=\"text-danger\">*</span>\r\n                                            </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"keterangan\"\r\n                        placeholder=\"Masukan Keterangan\"\r\n                        value={description}\r\n                        invalid={descriptionError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setDescription(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setDescriptionError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Keterangan tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        NPWP\r\n                        <span className=\"text-danger\">*</span>\r\n                                            </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"npwp\"\r\n                        placeholder=\"Masukan NPWP\"\r\n                        value={npwp}\r\n                        invalid={npwpError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setNpwp(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setNpwpError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        NPWP tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        Mata Uang\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        name=\"mataUang\"\r\n                        type=\"select\"\r\n                        value={mataUang}\r\n                        invalid={mataUangError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setMataUang(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setMataUangError(\"\");\r\n                          }\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Pilih Mata Uang</option>\r\n                        {\r\n                          allMataUang.map((dep, key) => {\r\n                            return <option key={key} value={dep.id}>{dep.mata_uang_name}</option>\r\n                          })\r\n                        }\r\n                      </Input>\r\n                      <FormFeedback>Mata Uang tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (<Button color=\"primary\" type=\"submit\">\r\n                      Simpan\r\n                    </Button>)}\r\n                    {isLoading && (<Button color=\"primary\" disabled>\r\n                      <i className=\"fas fa-spinner fa-spin\"></i>{\"\"}\r\n                      loading...\r\n                    </Button>)}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/person\">\r\n                      Kembali\r\n                    </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form, FormFeedback\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function CreateSupplier(props) {\r\n  const token = localStorage.token;\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [namePerson, setNamePerson] = useState(\"\");\r\n  const [namePersonError, setNamePersonError] = useState(null);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [descriptionError, setDescriptionError] = useState(null);\r\n  const [limitPiutang, setLimitPiutang] = useState(\"\");\r\n  const [limitPiutangError, setLimitPiutangError] = useState(null);\r\n  const [limitHutang, setLimitHutang] = useState(\"\");\r\n  const [limitHutangError, setLimitHutangError] = useState(null);\r\n  const [allMataUang, setAllMataUang] = useState([]);\r\n  const [mataUang, setMataUang] = useState(\"\");\r\n  const [mataUangError, setMataUangError] = useState(null);\r\n  const [npwp, setNpwp] = useState(\"\");\r\n  const [npwpError, setNpwpError] = useState(null);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (namePerson === \"\") {\r\n      setNamePersonError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (description === \"\") {\r\n      setDescriptionError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (limitHutang === \"\") {\r\n      setLimitHutangError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (limitPiutang === \"\") {\r\n      setLimitPiutangError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (mataUang === \"\") {\r\n      setMataUangError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (npwp === \"\") {\r\n      setNpwpError(\"invalid\");\r\n      error = true;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMatauang();\r\n  }, []);\r\n\r\n  const getMatauang = () => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/mata-uang/list`, { headers\r\n    })\r\n    .then(data => {\r\n      setAllMataUang(data.data.response);\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  function CreateData() {\r\n    setLoading(true);\r\n    let data = {\r\n      person_name: namePerson,\r\n      description: description,\r\n      mata_uang_id: parseInt(mataUang),\r\n      coa_hut_id: 1,\r\n      coa_piut_id: 1,\r\n      tunai_flag: 1,\r\n      note: \"\",\r\n      limit_piutang: parseInt(limitPiutang),\r\n      limit_hutang: parseInt(limitHutang),\r\n      active_flag: 1,\r\n      npwp_no: npwp,\r\n      tipe_harga_jual: null,\r\n      tipe: \"\",\r\n      flag_supp: null,\r\n    }\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/person/save`, data, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        history.push(\"/admin/person\");\r\n      })\r\n      .then(json => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n        CreateData();\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Daftar Supplier\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit} >\r\n                  <CardHeader>\r\n                    <h3>Daftar Supplier</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nama Supplier\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nama\"\r\n                        placeholder=\"Masukan Nama Supplier\"\r\n                        value={namePerson}\r\n                        invalid={namePersonError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setNamePerson(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setNamePersonError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Nama Supplier tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Limit Hutang\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"limitHutang\"\r\n                        placeholder=\"Masukan Limit Hutang\"\r\n                        value={limitHutang}\r\n                        invalid={limitHutangError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setLimitHutang(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setLimitHutangError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Limit Hutang tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Limit Piutang\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"limitPiutang\"\r\n                        placeholder=\"Masukan Limit Piutang\"\r\n                        value={limitPiutang}\r\n                        invalid={limitPiutangError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setLimitPiutang(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setLimitPiutangError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Limit Piutang tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Keterangan\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"keterangan\"\r\n                        placeholder=\"Masukan Keterangan\"\r\n                        value={description}\r\n                        invalid={descriptionError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setDescription(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setDescriptionError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Keterangan tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        NPWP\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"npwp\"\r\n                        placeholder=\"Masukan NPWP\"\r\n                        value={npwp}\r\n                        invalid={npwpError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setNpwp(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setNpwpError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        NPWP tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        Mata Uang\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        name=\"mataUang\"\r\n                        type=\"select\"\r\n                        value={mataUang}\r\n                        invalid={mataUangError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setMataUang(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setMataUangError(\"\");\r\n                          }\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Pilih Mata Uang</option>\r\n                        {\r\n                          allMataUang.map((dep, key) => {\r\n                            return <option key={key} value={dep.id}>{dep.mata_uang_name}</option>\r\n                          })\r\n                        }\r\n                      </Input>\r\n                      <FormFeedback>Mata Uang tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (<Button color=\"primary\" type=\"submit\">\r\n                      Simpan\r\n                    </Button>)}\r\n                    {isLoading && (<Button color=\"primary\" disabled>\r\n                      <i className=\"fas fa-spinner fa-spin\"></i>{\"\"}\r\n                      loading...\r\n                    </Button>)}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/person\">\r\n                      Kembali\r\n                    </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form, FormFeedback\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function EditSatuan(props) {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [codeUom, setCodeUom] = useState(\"\");\r\n  const [codeUomError, setCodeUomError] = useState(null);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [descriptionError, setDescriptionError] = useState(null);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (codeUom === \"\") {\r\n      setCodeUomError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (description === \"\") {\r\n        setDescriptionError(\"invalid\");\r\n        error = true;\r\n      }\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSatuanById();\r\n  }, []);\r\n\r\n  const getSatuanById = () => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/uom/${props.match.params.id}`, { headers\r\n    })\r\n    .then(data => {\r\n        setCodeUom(data.data.response.uom_code);\r\n        setDescription(data.data.response.description);\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  function EditData() {\r\n    setLoading(true);\r\n    let data = {\r\n      id: parseInt(props.match.params.id),\r\n      uom_code: codeUom,\r\n      description: description,\r\n      base_uom_flag: 1,\r\n      active_flag: 1,\r\n      primary_flag: 1,\r\n    }\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/uom/update/${props.match.params.id}`, data, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        history.push(\"/admin/satuan\");\r\n      })\r\n      .then(json => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      EditData();\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Edit Satuan\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit} >\r\n                  <CardHeader>\r\n                    <h3>Edit Satuan</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Kode Satuan\r\n                        <span className=\"text-danger\">*</span>\r\n                                            </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"satuan\"\r\n                        placeholder=\"Masukan Kode Satuan\"\r\n                        value={codeUom}\r\n                        invalid={codeUomError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setCodeUom(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setCodeUomError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Kode Satuan tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Deskripsi\r\n                        <span className=\"text-danger\">*</span>\r\n                                            </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"deskripsi\"\r\n                        placeholder=\"Masukan Deskripsi\"\r\n                        value={description}\r\n                        invalid={descriptionError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setDescription(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setDescriptionError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Deskripsi tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (<Button color=\"primary\" type=\"submit\">\r\n                      Simpan\r\n                    </Button>)}\r\n                    {isLoading && (<Button color=\"primary\" disabled>\r\n                      <i className=\"fas fa-spinner fa-spin\"></i>{\"\"}\r\n                      loading...\r\n                    </Button>)}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/satuan\">\r\n                      Kembali\r\n                                        </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form, FormFeedback\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function CreateSatuan() {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [nameDepartment, setNameDepartment] = useState(\"\");\r\n  const [nameDepartmentError, setNameDepartmentError] = useState(null);\r\n  const [codeDepartment, setCodeDepartment] = useState(\"\");\r\n  const [codeDepartmentError, setCodeDepartmentError] = useState(null);\r\n\r\n  const [codeUom, setCodeUom] = useState(\"\");\r\n  const [codeUomError, setCodeUomError] = useState(null);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [descriptionError, setDescriptionError] = useState(null);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (codeUom === \"\") {\r\n      setCodeUomError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (description === \"\") {\r\n        setDescriptionError(\"invalid\");\r\n        error = true;\r\n      }\r\n    return error;\r\n  };\r\n\r\n  function CreateData() {\r\n    setLoading(true);\r\n    let data = {\r\n      uom_code: codeUom,\r\n      description: description,\r\n      base_uom_flag: 1,\r\n      active_flag: 1,\r\n      primary_flag: 1,\r\n    }\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/uom/save`, data, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        history.push(\"/admin/satuan\");\r\n      })\r\n      .then(json => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      CreateData();\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Daftar Satuan\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit} >\r\n                  <CardHeader>\r\n                    <h3>Daftar Satuan</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Kode Satuan\r\n                        <span className=\"text-danger\">*</span>\r\n                                            </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"satuan\"\r\n                        placeholder=\"Masukan Kode Satuan\"\r\n                        value={codeUom}\r\n                        invalid={codeUomError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setCodeUom(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setCodeUomError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Kode Satuan tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Deskripsi\r\n                        <span className=\"text-danger\">*</span>\r\n                                            </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"deskripsi\"\r\n                        placeholder=\"Masukan Deskripsi\"\r\n                        value={description}\r\n                        invalid={descriptionError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setDescription(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setDescriptionError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Deskripsi tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (<Button color=\"primary\" type=\"submit\">\r\n                      Simpan\r\n                    </Button>)}\r\n                    {isLoading && (<Button color=\"primary\" disabled>\r\n                      <i className=\"fas fa-spinner fa-spin\"></i>{\"\"}\r\n                      loading...\r\n                    </Button>)}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/satuan\">\r\n                      Kembali\r\n                                        </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form, FormFeedback\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function CreateItemGrade() {\r\n  const token = localStorage.token;\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [nilai, setNilai] = useState(\"\");\r\n  const [nilaiError, setNilaiError] = useState(null);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [descriptionError, setDescriptionError] = useState(null);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (nilai === \"\") {\r\n      setNilaiError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (description === \"\") {\r\n      setDescriptionError(\"invalid\");\r\n      error = true;\r\n    }\r\n    return error;\r\n  };\r\n\r\n\r\n  function CreateData() {\r\n    setLoading(true);\r\n    let data = {\r\n      nilai: nilai,\r\n      keterangan: description,\r\n      active_flag: 1,\r\n      is_default: 1,\r\n    }\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/item-grade/save`, data, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        history.push(\"/admin/item\");\r\n      })\r\n      .then(json => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      CreateData();\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Daftar Item Grade\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit} >\r\n                  <CardHeader>\r\n                    <h3>Daftar Item Grade</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nilai\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nilai\"\r\n                        placeholder=\"Masukan Nilai\"\r\n                        value={nilai}\r\n                        invalid={nilaiError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setNilai(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setNilaiError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>Nilai tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Keterangan\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"desc\"\r\n                        placeholder=\"Masukan Keterangan\"\r\n                        value={description}\r\n                        invalid={descriptionError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setDescription(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setDescriptionError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>Keterangan tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (<Button color=\"primary\" type=\"submit\">\r\n                      Simpan\r\n                    </Button>)}\r\n                    {isLoading && (<Button color=\"primary\" disabled>\r\n                      <i className=\"fas fa-spinner fa-spin\"></i>{\"\"}\r\n                      loading...\r\n                    </Button>)}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/item\">\r\n                      Kembali\r\n                    </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form, FormFeedback\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function CreateItemSubMerek() {\r\n  const token = localStorage.token;\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [nameError, setNameError] = useState(null);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (name === \"\") {\r\n      setNameError(\"invalid\");\r\n      error = true;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  function CreateData() {\r\n    setLoading(true);\r\n    let data = {\r\n      name: name,\r\n    }\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/sub-merek/save`, data, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        history.push(\"/admin/item\");\r\n      })\r\n      .then(json => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      CreateData();\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Daftar Item Sub Merek\" parentName=\"Master\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit} >\r\n                  <CardHeader>\r\n                    <h3>Daftar Item Sub Merek</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nama Sub Merek\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nameSubMerek\"\r\n                        placeholder=\"Masukan Nama Sub Merek\"\r\n                        value={name}\r\n                        invalid={nameError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setName(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setNameError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>Nama Sub Merek tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (<Button color=\"primary\" type=\"submit\">\r\n                      Simpan\r\n                    </Button>)}\r\n                    {isLoading && (<Button color=\"primary\" disabled>\r\n                      <i className=\"fas fa-spinner fa-spin\"></i>{\"\"}\r\n                      loading...\r\n                    </Button>)}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/item\">\r\n                      Kembali\r\n                    </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form, FormFeedback\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function CreateItemMerek() {\r\n  const token = localStorage.token;\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [nameError, setNameError] = useState(null);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (name === \"\") {\r\n      setNameError(\"invalid\");\r\n      error = true;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  function CreateData() {\r\n    setLoading(true);\r\n    let data = {\r\n      name: name,\r\n    }\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/merek/save`, data, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        history.push(\"/admin/item\");\r\n      })\r\n      .then(json => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      CreateData();\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Daftar Item Merek\" parentName=\"Master\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit} >\r\n                  <CardHeader>\r\n                    <h3>Daftar Item Merek</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nama Merek\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nameMerek\"\r\n                        placeholder=\"Masukan Nama Merek\"\r\n                        value={name}\r\n                        invalid={nameError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setName(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setNameError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>Nama Merek tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (<Button color=\"primary\" type=\"submit\">\r\n                      Simpan\r\n                    </Button>)}\r\n                    {isLoading && (<Button color=\"primary\" disabled>\r\n                      <i className=\"fas fa-spinner fa-spin\"></i>{\"\"}\r\n                      loading...\r\n                    </Button>)}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/item\">\r\n                      Kembali\r\n                    </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form, FormFeedback\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function CreateItemSubFunction() {\r\n  const token = localStorage.token;\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [nameError, setNameError] = useState(null);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (name === \"\") {\r\n      setNameError(\"invalid\");\r\n      error = true;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  function CreateData() {\r\n    setLoading(true);\r\n    let data = {\r\n      name: name,\r\n    }\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/sub-function/save`, data, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        history.push(\"/admin/item\");\r\n      })\r\n      .then(json => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      CreateData();\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Daftar Item Sub Function\" parentName=\"Master\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit} >\r\n                  <CardHeader>\r\n                    <h3>Daftar Item Sub Function</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nama Sub Function\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nameFunction\"\r\n                        placeholder=\"Masukan Nama Sub Function\"\r\n                        value={name}\r\n                        invalid={nameError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setName(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setNameError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>Nama Function tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (<Button color=\"primary\" type=\"submit\">\r\n                      Simpan\r\n                    </Button>)}\r\n                    {isLoading && (<Button color=\"primary\" disabled>\r\n                      <i className=\"fas fa-spinner fa-spin\"></i>{\"\"}\r\n                      loading...\r\n                    </Button>)}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/item\">\r\n                      Kembali\r\n                    </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form, FormFeedback\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function CreateItemFunction() {\r\n  const token = localStorage.token;\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [nameError, setNameError] = useState(null);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (name === \"\") {\r\n      setNameError(\"invalid\");\r\n      error = true;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  function CreateData() {\r\n    setLoading(true);\r\n    let data = {\r\n      name: name,\r\n    }\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/item-function/save`, data, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        history.push(\"/admin/item\");\r\n      })\r\n      .then(json => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      CreateData();\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Daftar Item Function\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit} >\r\n                  <CardHeader>\r\n                    <h3>Daftar Item Function</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nama Function\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nameFunction\"\r\n                        placeholder=\"Masukan Nama Function\"\r\n                        value={name}\r\n                        invalid={nameError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setName(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setNameError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>Nama Function tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (<Button color=\"primary\" type=\"submit\">\r\n                      Simpan\r\n                    </Button>)}\r\n                    {isLoading && (<Button color=\"primary\" disabled>\r\n                      <i className=\"fas fa-spinner fa-spin\"></i>{\"\"}\r\n                      loading...\r\n                    </Button>)}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/item\">\r\n                      Kembali\r\n                    </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form, \r\n  FormFeedback\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function CreateItemSubCategory() {\r\n  const token = localStorage.token;\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [nameSubCategory, setNameSubCategory] = useState(\"\");\r\n  const [nameSubCategoryError, setNameSubCategoryError] = useState(null);\r\n  const [category, setCategory] = useState(\"\")\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (nameSubCategory === \"\") {\r\n      setNameSubCategoryError(\"invalid\");\r\n      error = true;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  function CreateData() {\r\n    setLoading(true);\r\n    let data = {\r\n      name: nameSubCategory,\r\n      kategori_id: parseInt(category),\r\n    }\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/sub-kategori/save`, data, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        history.push(\"/admin/item\");\r\n      })\r\n      .then(json => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      CreateData();\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Daftar Sub Kategori\" parentName=\"Master\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit} >\r\n                  <CardHeader>\r\n                    <h3>Daftar Sub Kategori</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nama Sub Kategori\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"NamaCoa\"\r\n                        placeholder=\"Masukan Nama Coa\"\r\n                        value={nameSubCategory}\r\n                        invalid={nameSubCategoryError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setNameSubCategory(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setNameSubCategoryError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>Nama Sub Kategori tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (<Button color=\"primary\" type=\"submit\">\r\n                      Simpan\r\n                    </Button>)}\r\n                    {isLoading && (<Button color=\"primary\" disabled>\r\n                      <i className=\"fas fa-spinner fa-spin\"></i>{\"\"}\r\n                      loading...\r\n                    </Button>)}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/item\">\r\n                      Kembali\r\n                    </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form, FormFeedback\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function EditItemCategory(props) {\r\n  const token = localStorage.token;\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [nameError, setNameError] = useState(null);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (name === \"\") {\r\n      setNameError(\"invalid\");\r\n      error = true;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getById();\r\n  }, []);\r\n\r\n  const getById = () => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/item-kategori/${props.match.params.id}`, { headers\r\n    })\r\n    .then(data => {\r\n      setName(data.data.response.name);\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  function EditData() {\r\n    setLoading(true);\r\n    let data = {\r\n      name: name,\r\n    }\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/item-kategori/update/${props.match.params.id}`, data, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        history.push(\"/admin/item\");\r\n      })\r\n      .then(json => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      EditData();\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Daftar Item Kategori\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit} >\r\n                  <CardHeader>\r\n                    <h3>Daftar Item Kategori</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nama\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nama\"\r\n                        placeholder=\"Masukan Nama\"\r\n                        value={name}\r\n                        invalid={nameError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setName(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setNameError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>Nama tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (<Button color=\"primary\" type=\"submit\">\r\n                      Simpan\r\n                    </Button>)}\r\n                    {isLoading && (<Button color=\"primary\" disabled>\r\n                      <i className=\"fas fa-spinner fa-spin\"></i>{\"\"}\r\n                      loading...\r\n                    </Button>)}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/item\">\r\n                      Kembali\r\n                    </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form, FormFeedback\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function CreateCoa() {\r\n  const token = localStorage.token;\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [nameError, setNameError] = useState(null);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (name === \"\") {\r\n      setNameError(\"invalid\");\r\n      error = true;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  function CreateData() {\r\n    setLoading(true);\r\n    let data = {\r\n      name: name,\r\n    }\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/item-kategori/save`, data, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        history.push(\"/admin/item\");\r\n      })\r\n      .then(json => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      CreateData();\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Daftar Item Kategori\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit} >\r\n                  <CardHeader>\r\n                    <h3>Daftar Item Kategori</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nama\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nama\"\r\n                        placeholder=\"Masukan Nama\"\r\n                        value={name}\r\n                        invalid={nameError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setName(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setNameError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>Nama tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (<Button color=\"primary\" type=\"submit\">\r\n                      Simpan\r\n                    </Button>)}\r\n                    {isLoading && (<Button color=\"primary\" disabled>\r\n                      <i className=\"fas fa-spinner fa-spin\"></i>{\"\"}\r\n                      loading...\r\n                    </Button>)}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/item\">\r\n                      Kembali\r\n                    </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  CardHeader,\r\n  CardFooter,\r\n  Col,\r\n  Button,\r\n  Table,\r\n  Container,\r\n  Form,\r\n} from \"reactstrap\";\r\nimport { Link , useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function EditItem(props) {\r\n  const token = localStorage.token;\r\n  const warehouseId = localStorage.warehouse;\r\n  const username = localStorage.username;\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [itemCode,setItemCode] = useState(\"\")\r\n  const [nameItem, setNameItem] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [numberPart, setNumberPart] = useState(\"\");\r\n  const [allSatuan, setAllSatuan] = useState([]);\r\n  const [satuan, setSatuan] = useState(\"\");\r\n  const [allGrade, setAllGrade] = useState([]);\r\n  const [grade, setGrade] = useState([]);\r\n  const [allAccount, setAllAccount] = useState([]);\r\n  const [account, setAccount] = useState([]);\r\n  const [category, setCategory] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [subCategory, setSubCategory] = useState([]);\r\n  const [subCategories, setSubCategories] = useState([]);\r\n  const [nameFunction, setNameFunction] = useState([]);\r\n  const [nameFunctions, setNameFunctions] = useState([]);\r\n  const [nameSubFunction, setNameSubFunction] = useState([]);\r\n  const [nameSubFunctions, setNameSubFunctions] = useState([]);\r\n  const [allMerek, setAllMerek] = useState([]);\r\n  const [merek, setMerek] = useState([]);\r\n  const [submerek,setSubMerek] = useState([]);\r\n  const [panjang, setPanjang] = useState(\"\");\r\n  const [allSubMerek,setAllSubMerek] = useState([]);\r\n  const [lebar, setLebar] = useState(\"\");\r\n  const [tinggi, setTinggi] = useState(\"\");\r\n  const [stock, setStock] = useState(\"\");\r\n  const [nameType, setNameType] = useState(1);\r\n  const [hargaBeli, setHargaBeli] = useState([]);\r\n  const [pajakBeli, setPajakBeli] = useState([]);\r\n  const [pajakjuals, setPajakJual] = useState([]);\r\n  const [diskonsuplierpersen, setDiskonSuplierPersen] = useState([]);\r\n  const [diskonnominal, setDiskonNominal] = useState([]);\r\n  const [barcode, setBarcode] = useState([]);\r\n  const [diskonpersen, setDiskonPersen] = useState([]);\r\n  const [diskonsupliernominal, setDiskonSuplierNominal] = useState([]);\r\n  const [status,setStatus] = useState([]);\r\n  const [hargajualminimal, setHargaJualMinimal] = useState([]);\r\n  const [minimumstock, setMinimumStock] = useState([]);\r\n  const [hargabelitotal,setHargaBeliTotal] = useState([]);\r\n  const [allpajakbeli,setAllPajakBeli] = useState([]);\r\n  const [allpajakJual,setAllPajakJual] = useState([]);\r\n  const [level1,setLevel1] = useState([]);\r\n  const [level2,setLevel2] = useState([]);\r\n  const [level3,setLevel3] = useState([]);\r\n  const [level4,setLevel4] = useState([]);\r\n  const [level5,setLevel5] = useState([]);\r\n  const [level6,setLevel6] = useState([]);\r\n  const [margin1,setMargin1] = useState([]);\r\n  const [margin2,setMargin2] = useState([]);\r\n  const [margin3,setMargin3] = useState([]);\r\n  const [margin4,setMargin4] = useState([]);\r\n  const [margin5,setMargin5] = useState([]);\r\n  const [margin6,setMargin6] = useState([]);\r\n  const [persentase1,setPersentase1] = useState([]);\r\n  const [persentase2,setPersentase2] = useState([]);\r\n  const [persentase3,setPersentase3] = useState([]);\r\n  const [persentase4,setPersentase4] = useState([]);\r\n  const [persentase5,setPersentase5] = useState([]);\r\n  const [persentase6,setPersentase6] = useState([]);\r\n  const [qty1,setQty1] = useState([]);\r\n  const [qty2,setQty2] = useState([]);\r\n  const [qty3,setQty3] = useState([]);\r\n  const [qty4,setQty4] = useState([]);\r\n  const [qty5,setQty5] = useState([]);\r\n  const [qty6,setQty6] = useState([]);\r\n  const [price1,setPrice1] = useState([]);\r\n  const [price2,setPrice2] = useState([]);\r\n  const [price3,setPrice3] = useState([]);\r\n  const [price4,setPrice4] = useState([]); \r\n  const [price5,setPrice5] = useState([]);\r\n  const [price6,setPrice6] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getById();\r\n  }, []);\r\n\r\n  const getById = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/items/${props.match.params.id}`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        getSatuan(data.data.response.items.uom_id);\r\n        getGrade(data.data.response.items.grade_id);\r\n        getPajakBeli(data.data.response.items.pajak_beli);\r\n        getPajakJual(data.data.response.items.pajak_jual);\r\n        getAccount(data.data.response.items.account_id);\r\n        getCategory(data.data.response.items.kategori_id);\r\n        getSubCategory(data.data.response.items.subkategori_id);\r\n        getFunction( data.data.response.items.function_id);\r\n        getSubFunction(data.data.response.items.subfunction_id);\r\n        getMerek(data.data.response.items.merek_id);\r\n        getSubMerek(data.data.response.items.submerek_id);\r\n        setStatus(data.data.response.items.active_flag);\r\n        setSatuan(data.data.response.items.uom_code);\r\n        setMerek(data.data.response.items.merek_name);\r\n        setNameItem(data.data.response.items.item_name);\r\n        setDescription(data.data.response.items.item_description);\r\n        setNumberPart(data.data.response.items.part_number);\r\n        setPanjang(data.data.response.items.panjang);\r\n        setLebar(data.data.response.items.lebar);\r\n        setTinggi(data.data.response.items.tinggi);\r\n        setStock(data.data.response.items.stock);\r\n        setMinimumStock(data.data.response.items.minimum_stok);\r\n        setItemCode(data.data.response.items.item_code);\r\n        setHargaBeli(data.data.response.items.harga_beli);\r\n        setHargaBeliTotal(data.data.response.items.harga_beli_total);\r\n        setHargaJualMinimal(data.data.response.items.harga_jual_minimal);\r\n        setDiskonNominal(data.data.response.items.diskon_nominal);\r\n        setDiskonPersen(data.data.response.items.diskon_persen);\r\n        setDiskonSuplierNominal(data.data.response.items.diskon_nominal_suplier);\r\n        setDiskonSuplierPersen(data.data.response.items.diskon_persen_suplier);\r\n        setLevel1(data.data.response.items.Level_1);\r\n        setLevel2(data.data.response.items.Level_2);\r\n        setLevel3(data.data.response.items.Level_3);\r\n        setLevel4(data.data.response.items.Level_4);\r\n        setLevel5(data.data.response.items.Level_5);\r\n        setLevel6(data.data.response.items.Level_6);\r\n        setPersentase1(data.data.response.items.persentase_1);\r\n        setPersentase2(data.data.response.items.persentase_2);\r\n        setPersentase3(data.data.response.items.persentase_3);\r\n        setPersentase4(data.data.response.items.persentase_4);\r\n        setPersentase5(data.data.response.items.persentase_5);\r\n        setPersentase6(data.data.response.items.persentase_6);\r\n        setMargin1(data.data.response.items.nominal_1);\r\n        setMargin2(data.data.response.items.nominal_2);\r\n        setMargin3(data.data.response.items.nominal_3);\r\n        setMargin4(data.data.response.items.nominal_4);\r\n        setMargin5(data.data.response.items.nominal_5);\r\n        setMargin6(data.data.response.items.nominal_6);\r\n        setQty1(data.data.response.items.min_qty_1);\r\n        setQty2(data.data.response.items.min_qty_2);\r\n        setQty3(data.data.response.items.min_qty_3);\r\n        setQty4(data.data.response.items.min_qty_4);\r\n        setQty5(data.data.response.items.min_qty_5);\r\n        setPrice1(data.data.response.items.price_1);\r\n        setPrice2(data.data.response.items.price_2);\r\n        setPrice3(data.data.response.items.price_3);\r\n        setPrice4(data.data.response.items.price_4);\r\n        setPrice5(data.data.response.items.price_5);\r\n        setPrice6(data.data.response.items.price_6);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getPajakJual =(id) =>{\r\n    const headers = {\r\n      \"Content-Type\" : \"application/json\",\r\n      Authorization: `bearer ${token}`,\r\n    }\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/pajak/list`, {headers})\r\n      .then((data)=>{\r\n        setAllPajakJual(data.data.response);\r\n        setPajakJual(id);\r\n      })\r\n      .catch(function(error){\r\n        console.log(error);\r\n      })\r\n  };\r\n  const getPajakBeli =(id) =>{\r\n    const headers = {\r\n      \"Content-Type\" : \"application/json\",\r\n      Authorization: `bearer ${token}`,\r\n    }\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/pajak/list`, {headers})\r\n      .then((data)=>{\r\n        setAllPajakBeli(data.data.response);\r\n        setPajakBeli(id);\r\n      })\r\n      .catch(function(error){\r\n        console.log(error);\r\n      })\r\n  };\r\n\r\n  const getAccount = (id) => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/account/list`, { headers })\r\n      .then((data) => {\r\n        setAllAccount(data.data.response);\r\n        setAccount(id);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getGrade = (id) => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/item-grade/list`, { headers })\r\n      .then((data) => {\r\n        setAllGrade(data.data.response);\r\n        setGrade(id);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getSatuan = (id) => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/uom/list`, { headers })\r\n      .then((data) => {\r\n        setAllSatuan(data.data.response);\r\n        setSatuan(id);\r\n      })  \r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getCategory = (id) => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/item-kategori/list`, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setCategories(data.data.response);\r\n        setCategory(id);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getSubCategory = (id) => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/sub-kategori/list`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        setSubCategories(data.data.response);\r\n        setSubCategory(id);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getFunction = (id) => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/item-function/list`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        setNameFunctions(data.data.response);\r\n        setNameFunction(id);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getSubFunction = (id) => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/sub-function/list`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        setNameSubFunctions(data.data.response);\r\n        setNameSubFunction(id);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getMerek = (id) => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/merek/list`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        setAllMerek(data.data.response);\r\n        setMerek(id);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getSubMerek = (id) => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/sub-merek/list`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        setAllSubMerek(data.data.response);\r\n        setSubMerek(id);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n  \r\n  function EditData() {\r\n    setLoading(true);\r\n    let data = {\r\n      warehouse_id: parseInt(warehouseId),\r\n      username: username,\r\n      item_code: itemCode,\r\n      item_name: nameItem,\r\n      part_number: numberPart,\r\n      uom_id: parseInt(satuan),\r\n      panjang: parseFloat(panjang),\r\n      lebar: parseFloat(lebar),\r\n      tinggi: parseFloat(tinggi),\r\n      stock: parseInt(stock),\r\n      minimum_stok: parseInt(minimumstock),\r\n      active_flag: parseInt(status),\r\n      type: nameType,\r\n      kategori_id: parseInt(category),\r\n      subkategori_id: parseInt(subCategory),\r\n      function_id: parseInt(nameFunction),\r\n      subfunction_id: parseInt(nameSubFunction),\r\n      merek_id: parseInt(merek),\r\n      submerek_id: parseInt(submerek),\r\n      grade_id: parseInt(grade),\r\n      account_id: parseInt(account),\r\n      item_description: description,\r\n    };\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/items/update/${props.match.params.id}`,\r\n        data,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        history.push(\"/admin/item\");\r\n        \r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  function EditPrice () {\r\n    setLoading(true);\r\n    let data = {\r\n        username: username,\r\n        uom_id: parseInt(satuan),\r\n        harga_beli: parseInt(hargaBeli),\r\n        diskon_persen_suplier: parseFloat(diskonsuplierpersen),\r\n        diskon_nominal_suplier: parseFloat(diskonsupliernominal),\r\n        pajak_beli: parseFloat(pajakBeli),\r\n        pajak_jual: parseFloat(pajakjuals),\r\n        diskon_persen:  parseFloat(diskonpersen),\r\n        diskon_nominal:  parseFloat(diskonnominal),\r\n        nominal_1: parseFloat(margin1),\r\n        persentase_1: parseFloat(persentase1),\r\n        min_qty_1: parseFloat(qty1),\r\n        nominal_2: parseFloat(margin2),\r\n        persentase_2: parseFloat(persentase2),\r\n        min_qty_2: parseFloat(qty2),\r\n        nominal_3: parseFloat(margin3),\r\n        persentase_3: parseFloat(persentase3),\r\n        min_qty_3: parseFloat(qty3),\r\n        nominal_4: parseFloat(margin4),\r\n        persentase_4: parseFloat(persentase4),\r\n        min_qty_4: parseFloat(qty4),\r\n        nominal_5: parseFloat(margin5),\r\n        persentase_5: parseFloat(persentase5),\r\n        min_qty_5: parseFloat(qty5),\r\n        nominal_6: parseFloat(margin6),\r\n        persentase_6: parseFloat(persentase6),\r\n        active_flag: 1\r\n    }\r\n    axios\r\n      .post(\r\n      `${process.env.REACT_APP_API_BASE_URL}/price-detail/update/${props.match.params.id}`, \r\n      data, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,      \r\n        },\r\n      })\r\n      .then(function (response) {\r\n        history.push(\"/admin/item\");\r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    {\r\n      \r\n    EditPrice();\r\n    EditData();\r\n\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n      <SimpleHeader name=\"Edit Item\" parentName=\"Master\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <Form onSubmit={handleSubmit}>\r\n                <CardBody>\r\n                    <Row md=\"12\">\r\n                        <Col md=\"6\">\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Kode Item\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                                disabled\r\n                                type=\"text\"\r\n                                name=\"itemCode\"\r\n                                placeholder=\"Masukan Kode Item\"\r\n                                value={itemCode}\r\n                                onChange={(e) => {\r\n                                  setItemCode(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Barcode\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                                disabled\r\n                                type=\"text\"\r\n                                name=\"barcode\"\r\n                                placeholder=\"Masukan Barcode\"\r\n                                value={barcode}\r\n                                onChange={(e) => {\r\n                                  setBarcode(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Nama Item\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"nameItem\"\r\n                                placeholder=\"Masukan Nama Item\"\r\n                                value={nameItem}\r\n                                onChange={(e) => {\r\n                                  setNameItem(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Nomor Part\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"nomorPart\"\r\n                                placeholder=\"Masukan Nomor Part\"\r\n                                value={numberPart}\r\n                                onChange={(e) => {\r\n                                  setNumberPart(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Satuan\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                            name=\"satuan\"\r\n                            type=\"select\"\r\n                            value={satuan}\r\n                            onChange={(e) => {\r\n                              setSatuan(e.target.value);\r\n                            }}\r\n                          >\r\n                            {allSatuan.map((satuan, key) => {\r\n                              return (\r\n                                <option key={key} value={satuan.id}>\r\n                                  {satuan.description}\r\n                                </option>\r\n                              );\r\n                            })}\r\n                          </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Dimensi\r\n                            </Label>\r\n                            <Col sm={2}>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"panjang\"\r\n                                placeholder=\"Panjang\"\r\n                                value={panjang}\r\n                                onChange={(e) => {\r\n                                  setPanjang(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                            <Col sm={3}>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"lebar\"\r\n                                placeholder=\"Lebar\"\r\n                                value={lebar}\r\n                                onChange={(e) => {\r\n                                  setLebar(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                            <Col sm={2}>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"tinggi\"\r\n                                placeholder=\"Tinggi\"\r\n                                value={tinggi}\r\n                                onChange={(e) => {\r\n                                  setTinggi(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Stock\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                                disabled\r\n                                type=\"number\"\r\n                                name=\"stock\"\r\n                                placeholder=\"Masukan Stock\"\r\n                                value={stock}\r\n                                onChange={(e) => {\r\n                                  setStock(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Minimum Stock\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                              type=\"number\"\r\n                              name=\"stock\"\r\n                              placeholder=\"Masukan Stock\"\r\n                              value={minimumstock}\r\n                              onChange={(e) => {\r\n                                setMinimumStock(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                                <Label\r\n                                  for=\"exampleEmail\"\r\n                                  sm={4}\r\n                                >\r\n                                  Status\r\n                                </Label>\r\n                                  <Col sm={7}>\r\n                                    <div style={{ display: \"flex\" }}>\r\n                                      <div className=\"custom-control custom-radio mb-3\">\r\n                                        <Input\r\n                                          className=\"custom-control-input\"\r\n                                          id=\"customRadio11\"\r\n                                          name=\"custom-radio-4\"\r\n                                          type=\"checkbox\"\r\n                                          value={1}\r\n                                          checked={status === 1}\r\n                                          onChange={() => setStatus(1)}\r\n                                        />\r\n                                        <Label\r\n                                          className=\"custom-control-label\"\r\n                                          htmlFor=\"customRadio11\"\r\n                                        >\r\n                                          Aktif\r\n                                        </Label>\r\n                                      </div>\r\n                                      <div\r\n                                        className=\"custom-control custom-radio mb-3\"\r\n                                        style={{ marginLeft: \"20px\" }}\r\n                                      >\r\n                                        <Input\r\n                                          className=\"custom-control-input\"\r\n                                          id=\"customRadio12\"\r\n                                          name=\"custom-radio-4\"\r\n                                          type=\"radio\"\r\n                                          value={2}\r\n                                          checked={status === 2}\r\n                                          onChange={() => setStatus(2)}\r\n                                        />\r\n                                        <Label\r\n                                          className=\"custom-control-label\"\r\n                                          htmlFor=\"customRadio12\"\r\n                                        >\r\n                                          Tidak Aktif\r\n                                        </Label>\r\n                                      </div>\r\n                                    </div>\r\n                                  </Col>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={3}\r\n                            >\r\n                              Tipe Item\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                                disabled\r\n                                type=\"select\"\r\n                                name=\"nameItem\"\r\n                                placeholder=\"Masukan Tipe Item\"\r\n                                value={nameType}\r\n                                onChange={(e) => {\r\n                                  setNameType(e.target.value);\r\n                                }}\r\n                              >\r\n                                <option value={1}>Material</option>\r\n                                <option value={2}>Rakitan</option>\r\n                              </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={3}\r\n                            >\r\n                              Kategori\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                                name=\"kategory\"\r\n                                type=\"select\"\r\n                                value={category}\r\n                                onChange={(e) => {\r\n                                  setCategory(e.target.value);\r\n                                }}\r\n                              >\r\n                                {categories.map((category, key) => {\r\n                                  return (\r\n                                    <option key={key} value={category.id}>\r\n                                      {category.name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                                </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={3}\r\n                            >\r\n                              Sub Kategori\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                                    name=\"subKategory\"\r\n                                    type=\"select\"\r\n                                    value={subCategory}\r\n                                    onChange={(e) => {\r\n                                      setSubCategory(e.target.value);\r\n                                    }}\r\n                                  >\r\n                                    {subCategories.map((category, key) => {\r\n                                      return (\r\n                                        <option key={key} value={category.id}>\r\n                                          {category.name}\r\n                                        </option>\r\n                                      );\r\n                                    })}\r\n                              </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={3}\r\n                            >\r\n                              Function\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                                name=\"function\"\r\n                                type=\"select\"\r\n                                value={nameFunction}\r\n                                onChange={(e) => {\r\n                                  setNameFunction(e.target.value);\r\n                                }}\r\n                              >\r\n                                {nameFunctions.map((nameFunction, key) => {\r\n                                  return (\r\n                                    <option key={key} value={nameFunction.id}>\r\n                                      {nameFunction.name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={3}\r\n                            >\r\n                              Sub Function\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                                name=\"subFunction\"\r\n                                type=\"select\"\r\n                                value={nameSubFunction}\r\n                                onChange={(e) => {\r\n                                  setNameSubFunction(e.target.value);\r\n                                }}\r\n                              >\r\n                                {nameSubFunctions.map((nameFunction, key) => {\r\n                                  return (\r\n                                    <option key={key} value={nameFunction.id}>\r\n                                      {nameFunction.name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={3}\r\n                            >\r\n                              Merek\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                                name=\"merek\"\r\n                                type=\"select\"\r\n                                value={merek}\r\n                                onChange={(e) => {\r\n                                  setMerek(e.target.value);\r\n                                }}\r\n                              >\r\n                                {allMerek.map((m, key) => {\r\n                                  return (\r\n                                    <option key={key} value={m.id}>\r\n                                      {m.name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={3}\r\n                            >\r\n                              Sub Merk\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                                name=\"merek\"\r\n                                type=\"select\"\r\n                                value={submerek}\r\n                                onChange={(e) => {\r\n                                  setSubMerek(e.target.value);\r\n                                }}\r\n                              >\r\n                                {allSubMerek.map((submerek, key) => {\r\n                                  return (\r\n                                    <option key={key} value={submerek.id}>\r\n                                      {submerek.name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={3}\r\n                            >\r\n                              Grade\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            name=\"grade\"\r\n                            type=\"select\"\r\n                            value={grade}\r\n                            onChange={(e) => {\r\n                              setGrade(e.target.value);\r\n                              }}\r\n                          >\r\n                            {allGrade.map((a, key) => {\r\n                              return (\r\n                                <option key={key} value={a.id}>\r\n                                  {a.nilai}\r\n                                </option>\r\n                              );\r\n                            })}\r\n                          </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={3}\r\n                            >\r\n                              Account\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                                name=\"account\"\r\n                                type=\"select\"\r\n                                value={account}\r\n                                onChange={(e) => {\r\n                                  setAccount(e.target.value);\r\n                                  }}\r\n                              >\r\n                                {allAccount.map((a, key) => {\r\n                                  return (\r\n                                    <option key={key} value={a.id}>\r\n                                      {a.account_name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                                </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <CardHeader></CardHeader>\r\n                      <CardBody>\r\n                        <Row md=\"12\">\r\n                            <Col md=\"12\">\r\n                            <FormGroup row>\r\n                                <Label\r\n                                  for=\"exampleEmail\"\r\n                                  sm={2}\r\n                                >\r\n                                  Deskripsi Item\r\n                                </Label>\r\n                                <Col sm={9}>\r\n                                  <Input\r\n                                    type=\"textarea\"\r\n                                    name=\"deskripsi Item\"\r\n                                    placeholder=\"Masukan Kode Item\"\r\n                                    value={description}\r\n                                    onChange={(e) => {\r\n                                      setDescription(e.target.value);\r\n                                    }}\r\n                                  />\r\n                                </Col>\r\n                              </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                      </CardBody> \r\n                    <CardHeader></CardHeader>\r\n                    <h3 >PRICE</h3>\r\n                    <CardFooter></CardFooter>\r\n                    <Row md=\"12\">\r\n                        <Col md=\"6\">\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={5}\r\n                            >\r\n                              Pajak Beli\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                            name=\"satuan\"\r\n                            type=\"select\"\r\n                            value={pajakBeli}\r\n                            onChange={(e) => {\r\n                              setPajakBeli(e.target.value);\r\n                            }}\r\n                          >\r\n                            <option>Pilih Pajak Beli</option>\r\n                            {allpajakbeli.map((pb, key) => {\r\n                              return (\r\n                                <option key={key} value={pb.id}>\r\n                                  {pb.keterangan} : {pb.persentase}%\r\n                                </option>\r\n                              );\r\n                            })}\r\n                          </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={5}\r\n                            >\r\n                              Harga Beli\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"hargabeli\"\r\n                                placeholder=\"Harga Beli\"\r\n                                value={hargaBeli}\r\n                                onChange={(e) => {\r\n                                  setHargaBeli(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={5}\r\n                            >\r\n                              Diskon Suplier (Nominal)\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"diskonsupliernominal\"\r\n                                placeholder=\"Diskon Suplier Nominal\"\r\n                                value={diskonsupliernominal}\r\n                                onChange={(e) => {\r\n                                  setDiskonSuplierNominal(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={5}\r\n                            >\r\n                              Diskon Suplier (Persen)\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"diskonsuplierpersen\"\r\n                                placeholder=\"Diskon Suplier Persen\"\r\n                                value={diskonsuplierpersen}\r\n                                onChange={(e) => {\r\n                                  setDiskonSuplierPersen(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={5}\r\n                            >\r\n                              Harga Beli Total\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"harggabelitotal\"\r\n                                placeholder=\"Harga Beli Total\"\r\n                                value={hargabelitotal}\r\n                                onChange={(e) => {\r\n                                  setHargaBeliTotal(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Pajak Jual\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                            name=\"satuan\"\r\n                            type=\"select\"\r\n                            value={pajakjuals}\r\n                            onChange={(e) => {\r\n                              setPajakJual(e.target.value);\r\n                            }}\r\n                          >\r\n                            <option>Pilih Pajak Jual</option>\r\n                            {allpajakJual.map((pb, key) => {\r\n                              return (\r\n                                <option key={key} value={pb.id}>\r\n                                  {pb.keterangan} : {pb.persentase}%\r\n                                </option>\r\n                              );\r\n                            })}\r\n                          </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Harga Jual Minimal\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"hargajualminimal\"\r\n                                placeholder=\"Harga Jual Minimal\"\r\n                                value={hargajualminimal}\r\n                                onChange={(e) => {\r\n                                  setHargaJualMinimal(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Diskon Nominal\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"diskonnominal\"\r\n                                placeholder=\"Diskon Nominal\"\r\n                                value={diskonnominal}\r\n                                onChange={(e) => {\r\n                                  setDiskonNominal;(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Diskon Persen\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"diskonpersen\"\r\n                                placeholder=\"Diskon Persen\"\r\n                                value={diskonpersen}\r\n                                onChange={(e) => {\r\n                                  setDiskonPersen(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <Table>\r\n                        <tbody>\r\n                          <tr>\r\n                            <td>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"Level1\"\r\n                                placeholder=\"Level 1\"\r\n                                value={level1}\r\n                                onChange={(e) => {\r\n                                  setLevel1(e.target.value);\r\n                                }}\r\n                                />\r\n                            </td>\r\n                            <td>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"Level2\"\r\n                                placeholder=\"Level 2\"\r\n                                value={level2}\r\n                                onChange={(e) => {\r\n                                  setLevel2(e.target.value);\r\n                                }}\r\n                                />\r\n                            </td>\r\n                            <td>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"Level3\"\r\n                                placeholder=\"Level 3\"\r\n                                value={level3}\r\n                                onChange={(e) => {\r\n                                  setLevel3(e.target.value);\r\n                                }}\r\n                                />\r\n                            </td>\r\n                            <td>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"Level4\"\r\n                                placeholder=\"Level 4\"\r\n                                value={level4}\r\n                                onChange={(e) => {\r\n                                  setLevel4(e.target.value);\r\n                                }}\r\n                                />\r\n                            </td>\r\n                            <td>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"Level5\"\r\n                                placeholder=\"Level 5\"\r\n                                value={level5}\r\n                                onChange={(e) => {\r\n                                  setLevel5(e.target.value);\r\n                                }}\r\n                                />\r\n                            </td>\r\n                            <td>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"Level5\"\r\n                                placeholder=\"Level 6\"\r\n                                value={level6}\r\n                                onChange={(e) => {\r\n                                  setLevel6(e.target.value);\r\n                                }}\r\n                                />\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"qty1\"\r\n                              placeholder=\"Qty 1\"\r\n                              value={qty1}\r\n                              onChange={(e) => {\r\n                                setQty1(e.target.value);\r\n                              }}\r\n                              />\r\n                            </td>\r\n                            <td>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"qty2\"\r\n                              placeholder=\"Qty 2\"\r\n                              value={qty2}\r\n                              onChange={(e) => {\r\n                                setQty2(e.target.value);\r\n                              }}\r\n                              />\r\n                            </td>\r\n                            <td>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"qty3\"\r\n                              placeholder=\"Qty 3\"\r\n                              value={qty3}\r\n                              onChange={(e) => {\r\n                                setQty3(e.target.value);\r\n                              }}\r\n                              />\r\n                            </td>\r\n                            <td>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"qty4\"\r\n                              placeholder=\"Qty 4\"\r\n                              value={qty4}\r\n                              onChange={(e) => {\r\n                                setQty4(e.target.value);\r\n                              }}\r\n                              />\r\n                            </td>\r\n                            <td>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"qty5\"\r\n                              placeholder=\"Qty 5\"\r\n                              value={qty5}\r\n                              onChange={(e) => {\r\n                                setQty5(e.target.value);\r\n                              }}\r\n                              />\r\n                            </td>\r\n                            <td>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"qty5\"\r\n                              placeholder=\"Qty 6\"\r\n                              value={qty6}\r\n                              onChange={(e) => {\r\n                                setQty6(e.target.value);\r\n                              }}\r\n                              />\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                            <Input\r\n                              disabled\r\n                              type=\"text\"\r\n                              name=\"price1\"\r\n                              placeholder=\"Price 1\"\r\n                              value={price1}\r\n                              onChange={(e) => {\r\n                                setPrice1(e.target.value);\r\n                              }}\r\n                              />\r\n                            </td>\r\n                            <td>\r\n                            <Input\r\n                              disabled\r\n                              type=\"text\"\r\n                              name=\"price2\"\r\n                              placeholder=\"Price 2\"\r\n                              value={price2}\r\n                              onChange={(e) => {\r\n                                setPrice2(e.target.value);\r\n                              }}\r\n                              />\r\n                            </td>\r\n                            <td>\r\n                            <Input\r\n                            disabled\r\n                              type=\"text\"\r\n                              name=\"price3\"\r\n                              placeholder=\"Price 3\"\r\n                              value={price3}\r\n                              onChange={(e) => {\r\n                                setPrice3(e.target.value);\r\n                              }}\r\n                              />\r\n                            </td>\r\n                            <td>\r\n                            <Input\r\n                            disabled\r\n                              type=\"text\"\r\n                              name=\"price4\"\r\n                              placeholder=\"Price 4\"\r\n                              value={price4}\r\n                              onChange={(e) => {\r\n                                setPrice4(e.target.value);\r\n                              }}\r\n                              />\r\n                            </td>\r\n                            <td>\r\n                            <Input\r\n                            disabled\r\n                              type=\"text\"\r\n                              name=\"price5\"\r\n                              placeholder=\"Price 5\"\r\n                              value={price5}\r\n                              onChange={(e) => {\r\n                                setPrice5(e.target.value);\r\n                              }}\r\n                              />\r\n                            </td>\r\n                            <td>\r\n                            <Input\r\n                            disabled\r\n                              type=\"text\"\r\n                              name=\"price5\"\r\n                              placeholder=\"Price 6\"\r\n                              value={price6}\r\n                              onChange={(e) => {\r\n                                setPrice6(e.target.value);\r\n                              }}\r\n                              />\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"margin1\"\r\n                                placeholder=\"Margin 1\"\r\n                                value={margin1}\r\n                                onChange={(e) => {\r\n                                  setMargin1(e.target.value);\r\n                                }}\r\n                                />\r\n                            </td>\r\n                            <td>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"margin2\"\r\n                                placeholder=\"Margin 2\"\r\n                                value={margin2}\r\n                                onChange={(e) => {\r\n                                  setMargin2(e.target.value);\r\n                                }}\r\n                                />\r\n                            </td>\r\n                            <td>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"margin3\"\r\n                                placeholder=\"Margin 3\"\r\n                                value={margin3}\r\n                                onChange={(e) => {\r\n                                  setMargin3(e.target.value);\r\n                                }}\r\n                                />\r\n                            </td>\r\n                            <td>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"margin4\"\r\n                                placeholder=\"Margin 4\"\r\n                                value={margin4}\r\n                                onChange={(e) => {\r\n                                  setMargin4(e.target.value);\r\n                                }}\r\n                                />\r\n                            </td>\r\n                            <td>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"margin5\"\r\n                                placeholder=\"Margin 5\"\r\n                                value={margin5}\r\n                                onChange={(e) => {\r\n                                  setMargin5(e.target.value);\r\n                                }}\r\n                                />\r\n                            </td>\r\n                            <td>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"margin5\"\r\n                                placeholder=\"Margin 6\"\r\n                                value={margin6}\r\n                                onChange={(e) => {\r\n                                  setMargin6(e.target.value);\r\n                                }}\r\n                              />\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"Persentase1\"\r\n                                placeholder=\"Persentase 1\"\r\n                                value={persentase1}\r\n                                onChange={(e) => {\r\n                                  setPersentase1(e.target.value);\r\n                                }}\r\n                                />\r\n                            </td>\r\n                            <td>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"persentase2\"\r\n                                placeholder=\"Persentase 2\"\r\n                                value={persentase2}\r\n                                onChange={(e) => {\r\n                                  setPersentase2(e.target.value);\r\n                                }}\r\n                                />\r\n                            </td>\r\n                            <td>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"Persentase3\"\r\n                                placeholder=\"Persentase 3\"\r\n                                value={persentase3}\r\n                                onChange={(e) => {\r\n                                  setPersentase3(e.target.value);\r\n                                }}\r\n                                />\r\n                            </td>\r\n                            <td>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"Persentase4\"\r\n                                placeholder=\"Persentase 4\"\r\n                                value={persentase4}\r\n                                onChange={(e) => {\r\n                                  setPersentase4(e.target.value);\r\n                                }}\r\n                                />\r\n                            </td>\r\n                            <td>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"Persentase5\"\r\n                                placeholder=\"Persentase 5\"\r\n                                value={persentase5}\r\n                                onChange={(e) => {\r\n                                  setPersentase5(e.target.value);\r\n                                }}\r\n                                />\r\n                            </td>\r\n                            <td>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"Persentase5\"\r\n                                placeholder=\"Persentase 6\"\r\n                                value={persentase6}\r\n                                onChange={(e) => {\r\n                                  setPersentase6(e.target.value);\r\n                                }}\r\n                                />\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                </CardBody>\r\n                <CardFooter>\r\n                      {!isLoading && (\r\n                        <Button color=\"primary\" type=\"submit\">\r\n                          Simpan\r\n                        </Button>\r\n                      )}\r\n                      {isLoading && (\r\n                        <Button color=\"primary\" disabled>\r\n                          <i className=\"fas fa-spinner fa-spin\"></i>\r\n                          {\"\"}\r\n                          loading...\r\n                        </Button>\r\n                      )}\r\n                      <Link className=\"btn btn-info\" to=\"/admin/item\">\r\n                        Kembali\r\n                      </Link>\r\n                </CardFooter>\r\n              </Form>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n    </>\r\n  );\r\n}","import React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  TabContent,\r\n  TabPane\r\n} from \"reactstrap\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport classnames from 'classnames';\r\n\r\nimport ItemCategory from \"views/pages/item/itemCategory/Index.js\";\r\nimport ItemSubCategory from \"views/pages/item/itemSubCategory/Index.js\";\r\nimport ItemFunction from \"views/pages/item/itemFunction/Index.js\";\r\nimport ItemSubFunction from \"views/pages/item/itemSubFunction/Index.js\";\r\nimport ItemMerek from \"views/pages/item/itemMerek/Index.js\";\r\nimport ItemSubMerek from \"views/pages/item/itemSubMerek/Index.js\";\r\nimport ItemGrade from \"views/pages/item/itemGrade/Index.js\";\r\nimport ItemMain from \"views/pages/item/itemMain/Index.js\";\r\n\r\nexport default function Item() {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  }\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Item\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Nav tabs>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '1' })}\r\n                      onClick={() => { toggle('1'); }}\r\n                    >\r\n                      Item\r\n                  </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '2' })}\r\n                      onClick={() => { toggle('2'); }}\r\n                    >\r\n                      Item Kategori\r\n                  </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '3' })}\r\n                      onClick={() => { toggle('3'); }}\r\n                    >\r\n                      Item Sub Kategori\r\n                  </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '4' })}\r\n                      onClick={() => { toggle('4'); }}\r\n                    >\r\n                      Item Function\r\n                  </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '5' })}\r\n                      onClick={() => { toggle('5'); }}\r\n                    >\r\n                      Item Sub Function\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '6' })}\r\n                      onClick={() => { toggle('6'); }}\r\n                    >\r\n                      Item Merek\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '7' })}\r\n                      onClick={() => { toggle('7'); }}\r\n                    >\r\n                      Item Sub Merek\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '8' })}\r\n                      onClick={() => { toggle('8'); }}\r\n                    >\r\n                      Item Grade\r\n                    </NavLink>\r\n                  </NavItem>\r\n                </Nav>\r\n                <TabContent activeTab={activeTab}>\r\n                  <TabPane tabId=\"1\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <ItemMain />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                  <TabPane tabId=\"2\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <ItemCategory />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                  <TabPane tabId=\"3\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <ItemSubCategory />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                  <TabPane tabId=\"4\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <ItemFunction />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                  <TabPane tabId=\"5\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <ItemSubFunction />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                  <TabPane tabId=\"6\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <ItemMerek />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                  <TabPane tabId=\"7\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <ItemSubMerek />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                  <TabPane tabId=\"8\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <ItemGrade />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                </TabContent>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function EditPrice(props) {\r\n  const token = localStorage.token;\r\n  const username = localStorage.username;\r\n  const warehouse = localStorage.warehouse;\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [allItem, setAllItem] = useState([]);\r\n  const [item, setItem] = useState(\"\");\r\n  const [allUom, setAllUom] = useState([]);\r\n  const [uom, setUom] = useState(\"\");\r\n  const [diskonSuplier, setDiskonSuplier] = useState(\"\");\r\n  const [hargaBeli, setHargaBeli] = useState(\"\");\r\n  const [allPajak, setAllPajak] = useState([]);\r\n  const [pajak, setPajak] = useState(\"\");\r\n  const [hargaJual, setHargaJual] = useState(\"\");\r\n  const [diskonJual, setDiskonJual] = useState(\"\");\r\n  const [nominal1, setNominal1] = useState(\"\");\r\n  const [nominal2, setNominal2] = useState(\"\");\r\n  const [nominal3, setNominal3] = useState(\"\");\r\n  const [nominal4, setNominal4] = useState(\"\");\r\n  const [nominal5, setNominal5] = useState(\"\");\r\n  const [persentase1, setPerentase1] = useState(\"\");\r\n  const [persentase2, setPerentase2] = useState(\"\");\r\n  const [persentase3, setPerentase3] = useState(\"\");\r\n  const [persentase4, setPerentase4] = useState(\"\");\r\n  const [persentase5, setPerentase5] = useState(\"\");\r\n  const [minQuantity1, setMinQuantity1] = useState(\"\");\r\n  const [minQuantity2, setMinQuantity2] = useState(\"\");\r\n  const [minQuantity3, setMinQuantity3] = useState(\"\");\r\n  const [minQuantity4, setMinQuantity4] = useState(\"\");\r\n  const [minQuantity5, setMinQuantity5] = useState(\"\");\r\n  const [price1, setPrice1] = useState(\"\");\r\n  const [price2, setPrice2] = useState(\"\");\r\n  const [price3, setPrice3] = useState(\"\");\r\n  const [price4, setPrice4] = useState(\"\");\r\n  const [price5, setPrice5] = useState(\"\");\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    // if (province === \"\") {\r\n    //   setProvinceError(\"invalid\");\r\n    //   error = true;\r\n    // }\r\n    // if (city === \"\") {\r\n    //   setCityError(\"invalid\");\r\n    //   error = true;\r\n    // }\r\n    // if (address === \"\") {\r\n    //   setAddressError(\"invalid\");\r\n    //   error = true;\r\n    // }\r\n    // if (phoneNumber === \"\") {\r\n    //   setPhoneNumberError(\"invalid\");\r\n    //   error = true;\r\n    // }\r\n    // if (fax === \"\") {\r\n    //   setFaxError(\"invalid\");\r\n    //   error = true;\r\n    // }\r\n    // if (npwp === \"\") {\r\n    //   setNpwpError(\"invalid\");\r\n    //   error = true;\r\n    // }\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getById();\r\n  }, []);\r\n\r\n  const getById = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/price-detail/${props.match.params.id}`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        getItem(data.data.response_data.item_id);\r\n        getSatuan(data.data.response_data.uom_id);\r\n        getPajak(data.data.response_data.pajak_id);\r\n        setDiskonSuplier(data.data.response_data.diskon_suplier);\r\n        setHargaBeli(data.data.response_data.harga_beli);\r\n        setHargaJual(data.data.response_data.harga_jual);\r\n        setDiskonJual(data.data.response_data.diskon_jual);\r\n        setNominal1(data.data.response_data.nominal_1);\r\n        setNominal2(data.data.response_data.nominal_2);\r\n        setNominal3(data.data.response_data.nominal_3);\r\n        setNominal4(data.data.response_data.nominal_4);\r\n        setNominal5(data.data.response_data.nominal_5);\r\n        setPerentase1(data.data.response_data.persentase_1);\r\n        setPerentase2(data.data.response_data.persentase_2);\r\n        setPerentase3(data.data.response_data.persentase_3);\r\n        setPerentase4(data.data.response_data.persentase_4);\r\n        setPerentase5(data.data.response_data.persentase_5);\r\n        setMinQuantity1(data.data.response_data.min_qty_1);\r\n        setMinQuantity2(data.data.response_data.min_qty_2);\r\n        setMinQuantity3(data.data.response_data.min_qty_3);\r\n        setMinQuantity4(data.data.response_data.min_qty_4);\r\n        setMinQuantity5(data.data.response_data.min_qty_5);\r\n        setPrice1(data.data.response_data.price_1);\r\n        setPrice2(data.data.response_data.price_2);\r\n        setPrice3(data.data.response_data.price_3);\r\n        setPrice4(data.data.response_data.price_4);\r\n        setPrice5(data.data.response_data.price_5);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getItem = (id) => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/items/list?warehouse_id=${warehouse}`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        setAllItem(data.data.response);\r\n        setItem(id);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getPajak = (id) => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/pajak/list`, { headers })\r\n      .then((data) => {\r\n        setAllPajak(data.data.response);\r\n        setPajak(id);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getSatuan = (id) => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/uom/list`, { headers })\r\n      .then((data) => {\r\n        setAllUom(data.data.response);\r\n        setUom(id);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  function EditData() {\r\n    setLoading(true);\r\n    let data = {\r\n      id: parseInt(props.match.params.id),\r\n      username: username,\r\n      item_id: parseInt(item),\r\n      uom_id: parseInt(uom),\r\n      diskon_suplier: parseInt(diskonSuplier),\r\n      harga_beli: parseInt(hargaBeli),\r\n      pajak_id: parseInt(pajak),\r\n      harga_jual: parseInt(hargaJual),\r\n      diskon_jual: parseInt(diskonJual),\r\n      nominal_1: parseInt(nominal1),\r\n      persentase_1: parseInt(persentase1),\r\n      min_qty_1: parseInt(minQuantity1),\r\n      price_1: parseInt(price1),\r\n      nominal_2: parseInt(nominal2),\r\n      persentase_2: parseInt(persentase2),\r\n      min_qty_2: parseInt(minQuantity2),\r\n      price_2: parseInt(price2),\r\n      nominal_3: parseInt(nominal3),\r\n      persentase_3: parseInt(persentase3),\r\n      min_qty_3: parseInt(minQuantity3),\r\n      price_3: parseInt(price3),\r\n      nominal_4: parseInt(nominal4),\r\n      persentase_4: parseInt(persentase4),\r\n      min_qty_4: parseInt(minQuantity4),\r\n      price_4: parseInt(price4),\r\n      nominal_5: parseInt(nominal5),\r\n      persentase_5: parseInt(persentase5),\r\n      min_qty_5: parseInt(minQuantity5),\r\n      price_5: parseInt(price5),\r\n      active_flag: 1,\r\n    };\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/price-detail/update/${props.match.params.id}`,\r\n        data,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        history.push(\"/admin/price\");\r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      EditData();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Edit Price\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <CardHeader>\r\n                    <h3>Edit Price</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        Item\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        disabled\r\n                        name=\"item\"\r\n                        type=\"select\"\r\n                        value={item}\r\n                        onChange={(e) => {\r\n                          setItem(e.target.value);\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Pilih Item</option>\r\n                        {allItem.map((item, key) => {\r\n                          return (\r\n                            <option key={key} value={item.id}>\r\n                              {item.item_name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </Input>\r\n                      <FormFeedback>Item tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        Satuan\r\n                      </Label>\r\n                      <Input\r\n                        disabled\r\n                        name=\"satuan\"\r\n                        type=\"select\"\r\n                        value={uom}\r\n                        onChange={(e) => {\r\n                          setUom(e.target.value);\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Pilih Satuan</option>\r\n                        {allUom.map((satuan, key) => {\r\n                          return (\r\n                            <option key={key} value={satuan.id}>\r\n                              {satuan.uom_code}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Diskon Suplier\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"po\"\r\n                        placeholder=\"Masukan Diskon Suplier\"\r\n                        value={diskonSuplier}\r\n                        onChange={(e) => {\r\n                          setDiskonSuplier(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Harga Beli\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"descPo\"\r\n                        placeholder=\"Masukan Harga Beli\"\r\n                        value={hargaBeli}\r\n                        onChange={(e) => {\r\n                          setHargaBeli(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        Pajak\r\n                      </Label>\r\n                      <Input\r\n                        disabled\r\n                        name=\"pajak\"\r\n                        type=\"select\"\r\n                        value={pajak}\r\n                        onChange={(e) => {\r\n                          setPajak(e.target.value);\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Pilih Pajak</option>\r\n                        {allPajak.map((pajak, key) => {\r\n                          return (\r\n                            <option key={key} value={pajak.id}>\r\n                              {pajak.persentase}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Harga Jual\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"purchasing\"\r\n                        placeholder=\"Masukan Harga Jual\"\r\n                        value={hargaJual}\r\n                        onChange={(e) => {\r\n                          setHargaJual(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Diskon Jual\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"diskonJual\"\r\n                        placeholder=\"Masukan Diskon Jual\"\r\n                        value={diskonJual}\r\n                        onChange={(e) => {\r\n                          setDiskonJual(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nominal 1\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nominal\"\r\n                        placeholder=\"Masukan Nominal 1\"\r\n                        value={nominal1}\r\n                        onChange={(e) => {\r\n                          setNominal1(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Persentase 1\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"persentase\"\r\n                        placeholder=\"Masukan Persentase 1\"\r\n                        value={persentase1}\r\n                        onChange={(e) => {\r\n                          setPerentase1(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Min Quantitas 1\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"quantitas\"\r\n                        placeholder=\"Masukan Min Quantitas 1\"\r\n                        value={minQuantity1}\r\n                        onChange={(e) => {\r\n                          setMinQuantity1(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Price 1\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"price\"\r\n                        placeholder=\"Masukan Price 1\"\r\n                        value={price1}\r\n                        onChange={(e) => {\r\n                          setPrice1(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nominal 2\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nominal\"\r\n                        placeholder=\"Masukan Nominal 2\"\r\n                        value={nominal2}\r\n                        onChange={(e) => {\r\n                          setNominal2(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Persentase 2\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"persentase\"\r\n                        placeholder=\"Masukan Persentase 2\"\r\n                        value={persentase2}\r\n                        onChange={(e) => {\r\n                          setPerentase2(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Min Quantitas 2\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"quantitas\"\r\n                        placeholder=\"Masukan Min Quantitas 2\"\r\n                        value={minQuantity2}\r\n                        onChange={(e) => {\r\n                          setMinQuantity2(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Price 2\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"price\"\r\n                        placeholder=\"Masukan Price 2\"\r\n                        value={price2}\r\n                        onChange={(e) => {\r\n                          setPrice2(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nominal 3\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nominal\"\r\n                        placeholder=\"Masukan Nominal 3\"\r\n                        value={nominal3}\r\n                        onChange={(e) => {\r\n                          setNominal3(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Persentase 3\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"persentase\"\r\n                        placeholder=\"Masukan Persentase 3\"\r\n                        value={persentase3}\r\n                        onChange={(e) => {\r\n                          setPerentase3(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Min Quantitas 3\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"quantitas\"\r\n                        placeholder=\"Masukan Min Quantitas 3\"\r\n                        value={minQuantity3}\r\n                        onChange={(e) => {\r\n                          setMinQuantity3(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Price 3\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"price\"\r\n                        placeholder=\"Masukan Price 3\"\r\n                        value={price3}\r\n                        onChange={(e) => {\r\n                          setPrice3(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nominal 4\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nominal\"\r\n                        placeholder=\"Masukan Nominal 4\"\r\n                        value={nominal4}\r\n                        onChange={(e) => {\r\n                          setNominal4(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Persentase 4\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"persentase\"\r\n                        placeholder=\"Masukan Persentase 4\"\r\n                        value={persentase4}\r\n                        onChange={(e) => {\r\n                          setPerentase4(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Min Quantitas 4\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"quantitas\"\r\n                        placeholder=\"Masukan Min Quantitas 4\"\r\n                        value={minQuantity4}\r\n                        onChange={(e) => {\r\n                          setMinQuantity4(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Price 4\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"price\"\r\n                        placeholder=\"Masukan Price 4\"\r\n                        value={price4}\r\n                        onChange={(e) => {\r\n                          setPrice4(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nominal 5\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nominal\"\r\n                        placeholder=\"Masukan Nominal 5\"\r\n                        value={nominal5}\r\n                        onChange={(e) => {\r\n                          setNominal5(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Persentase 5\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"persentase\"\r\n                        placeholder=\"Masukan Persentase 5\"\r\n                        value={persentase5}\r\n                        onChange={(e) => {\r\n                          setPerentase5(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Min Quantitas 5\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"quantitas\"\r\n                        placeholder=\"Masukan Min Quantitas 5\"\r\n                        value={minQuantity5}\r\n                        onChange={(e) => {\r\n                          setMinQuantity5(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Price 5\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"price\"\r\n                        placeholder=\"Masukan Price 5\"\r\n                        value={price5}\r\n                        onChange={(e) => {\r\n                          setPrice5(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        Simpan\r\n                      </Button>\r\n                    )}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {\"\"}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/price\">\r\n                      Kembali\r\n                    </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function CreatePajak(props) {\r\n  const token = localStorage.token;\r\n  const warehouse = localStorage.warehouse;\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [persentase, setPersentase] = useState(\"\");\r\n  const [persentaseError, setPersentaseError] = useState(null);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [descriptionError, setDescriptionError] = useState(null);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (persentase === \"\") {\r\n      setPersentaseError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (description === \"\") {\r\n      setDescriptionError(\"invalid\");\r\n      error = true;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getById();\r\n  }, []);\r\n\r\n  const getById = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/pajak/${props.match.params.id}`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        setDescription(data.data.response.keterangan);\r\n        setPersentase(data.data.response.persentase);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  function EditData() {\r\n    setLoading(true);\r\n    let data = {\r\n      active_flag: 1,\r\n      warehouse_id: parseInt(warehouse),\r\n      keterangan: description,\r\n      persentase: parseFloat(persentase),\r\n    };\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/pajak/update/${props.match.params.id}`,\r\n        data,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        history.push(\"/admin/pajak\");\r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      EditData();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Daftar Pajak\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <CardHeader>\r\n                    <h3>Daftar Pajak</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Persentase\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"persentase\"\r\n                        placeholder=\"Masukan Persentase\"\r\n                        value={persentase}\r\n                        invalid={persentaseError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setPersentase(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setPersentaseError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>Persentase tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Keterangan\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"keterangan\"\r\n                        placeholder=\"Masukan Keterangan\"\r\n                        value={description}\r\n                        invalid={descriptionError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setDescription(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setDescriptionError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>Keterangan tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        Simpan\r\n                      </Button>\r\n                    )}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {\"\"}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/pajak\">\r\n                      Kembali\r\n                    </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function CreatePajak() {\r\n  const token = localStorage.token;\r\n  const warehouse = localStorage.warehouse;\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [persentase, setPersentase] = useState(\"\");\r\n  const [persentaseError, setPersentaseError] = useState(null);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [descriptionError, setDescriptionError] = useState(null);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (persentase === \"\") {\r\n      setPersentaseError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (description === \"\") {\r\n      setDescriptionError(\"invalid\");\r\n      error = true;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  function CreateData() {\r\n    setLoading(true);\r\n    let data = {\r\n      active_flag: 1,\r\n      warehouse_id: parseInt(warehouse),\r\n      keterangan: description,\r\n      persentase: parseFloat(persentase),\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/pajak/save`, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then(function (response) {\r\n        history.push(\"/admin/pajak\");\r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      CreateData();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Daftar Pajak\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <CardHeader>\r\n                    <h3>Daftar Pajak</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Persentase\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"persentase\"\r\n                        placeholder=\"Masukan Persentase\"\r\n                        value={persentase}\r\n                        invalid={persentaseError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setPersentase(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setPersentaseError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>Persentase tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Keterangan\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"keterangan\"\r\n                        placeholder=\"Masukan Keterangan\"\r\n                        value={description}\r\n                        invalid={descriptionError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setDescription(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setDescriptionError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>Keterangan tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        Simpan\r\n                      </Button>\r\n                    )}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {\"\"}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/pajak\">\r\n                      Kembali\r\n                    </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function EditPromo(props) {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [codePromo, setCodePromo] = useState(\"\");\r\n  const [namePromo, setNamePromo] = useState(\"\");\r\n  const [nominalPromo, setNominalPromo] = useState(\"\");\r\n  const [durationPromo, setDurationPromo] = useState(\"\");\r\n  const [persentasePromo, setPersentasePromo] = useState(\"\");\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    // if (nameDepartment === \"\") {\r\n    //   setNameDepartmentError(\"invalid\");\r\n    //   error = true;\r\n    // }\r\n    // if (codeDepartment === \"\") {\r\n    //   setCodeDepartmentError(\"invalid\");\r\n    //   error = true;\r\n    // }\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getById();\r\n  }, []);\r\n\r\n  const getById = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/promo/${props.match.params.id}`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        setCodePromo(data.data.response.kode_promo);\r\n        setNamePromo(data.data.response.nama_promo);\r\n        setPersentasePromo(data.data.response.persentase_promo);\r\n        setNominalPromo(data.data.response.nominal_promo);\r\n        setDurationPromo(data.data.response.durasi_promo);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  function EditData() {\r\n    setLoading(true);\r\n    let data = {\r\n      warehouse_id: warehouse,\r\n      kode_Promo: codePromo,\r\n      nama_promo: namePromo,\r\n      persentase_promo: parseFloat(persentasePromo),\r\n      nominal_promo: parseFloat(nominalPromo),\r\n      durasi_promo: durationPromo,\r\n      active_flag: 1,\r\n    };\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/promo/update/${props.match.params.id}`,\r\n        data,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        history.push(\"/admin/promo\");\r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      EditData();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Edit Promo\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <CardHeader>\r\n                    <h3>Edit Promo</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Kode Promo\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nama\"\r\n                        placeholder=\"Masukan Kode Promo\"\r\n                        value={codePromo}\r\n                        onChange={(e) => {\r\n                          setCodePromo(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nama Promo\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"kode\"\r\n                        placeholder=\"Masukan Nama Promo\"\r\n                        value={namePromo}\r\n                        onChange={(e) => {\r\n                          setNamePromo(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Persentase Promo\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"persentase\"\r\n                        placeholder=\"Masukan Persentase Promo\"\r\n                        value={persentasePromo}\r\n                        onChange={(e) => {\r\n                          setPersentasePromo(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nominal Promo\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nominal\"\r\n                        placeholder=\"Masukan Nominal Promo\"\r\n                        value={nominalPromo}\r\n                        onChange={(e) => {\r\n                          setNominalPromo(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Durasi Promo\r\n                      </Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"durasi\"\r\n                        placeholder=\"Masukan Durasi Promo\"\r\n                        value={durationPromo}\r\n                        onChange={(e) => {\r\n                          setDurationPromo(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        Simpan\r\n                      </Button>\r\n                    )}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {\"\"}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/promo\">\r\n                      Kembali\r\n                    </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function CreatePromo() {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [codePromo, setCodePromo] = useState(\"\");\r\n  const [namePromo, setNamePromo] = useState(\"\");\r\n  const [nominalPromo, setNominalPromo] = useState(\"\");\r\n  const [durationPromo, setDurationPromo] = useState(\"\");\r\n  const [persentasePromo, setPersentasePromo] = useState(\"\");\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    // if (nameDepartment === \"\") {\r\n    //   setNameDepartmentError(\"invalid\");\r\n    //   error = true;\r\n    // }\r\n    // if (codeDepartment === \"\") {\r\n    //   setCodeDepartmentError(\"invalid\");\r\n    //   error = true;\r\n    // }\r\n    return error;\r\n  };\r\n\r\n  function CreateData() {\r\n    setLoading(true);\r\n    let data = {\r\n      warehouse_id: warehouse,\r\n      kode_Promo: codePromo,\r\n      nama_promo: namePromo,\r\n      persentase_promo: parseFloat(persentasePromo),\r\n      nominal_promo: parseFloat(nominalPromo),\r\n      durasi_promo: durationPromo,\r\n      active_flag: 1,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/promo/save`, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then(function (response) {\r\n        history.push(\"/admin/promo\");\r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      CreateData();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Daftar Promo\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <CardHeader>\r\n                    <h3>Daftar Promo</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Kode Promo\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nama\"\r\n                        placeholder=\"Masukan Kode Promo\"\r\n                        value={codePromo}\r\n                        onChange={(e) => {\r\n                          setCodePromo(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nama Promo\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"kode\"\r\n                        placeholder=\"Masukan Nama Promo\"\r\n                        value={namePromo}\r\n                        onChange={(e) => {\r\n                          setNamePromo(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Persentase Promo\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"persentase\"\r\n                        placeholder=\"Masukan Persentase Promo\"\r\n                        value={persentasePromo}\r\n                        onChange={(e) => {\r\n                          setPersentasePromo(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nominal Promo\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nominal\"\r\n                        placeholder=\"Masukan Nominal Promo\"\r\n                        value={nominalPromo}\r\n                        onChange={(e) => {\r\n                          setNominalPromo(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Durasi Promo\r\n                      </Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"durasi\"\r\n                        placeholder=\"Masukan Durasi Promo\"\r\n                        value={durationPromo}\r\n                        onChange={(e) => {\r\n                          setDurationPromo(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        Simpan\r\n                      </Button>\r\n                    )}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {\"\"}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/promo\">\r\n                      Kembali\r\n                    </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form, FormFeedback\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function EditTypeAsset(props) {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [nameError, setNameError] = useState(null);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (name === \"\") {\r\n      setNameError(\"invalid\");\r\n      error = true;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAssetById();\r\n  }, []);\r\n\r\n  const getAssetById = () => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/asset-type/${props.match.params.id}`, { headers\r\n    })\r\n    .then(data => {\r\n        setName(data.data.response.name);\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  function EditData() {\r\n    setLoading(true);\r\n    let data = {\r\n      name: name,\r\n    }\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/asset-type/update/${props.match.params.id}`, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        }\r\n      })\r\n      .then(function (response) {\r\n        history.push(\"/admin/type-asset\");\r\n      })\r\n      .then(json => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n        EditData();\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Edit Type Asset\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit} >\r\n                  <CardHeader>\r\n                    <h3>Edit Type Asset</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nama\r\n                        <span className=\"text-danger\">*</span>\r\n                                            </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nama\"\r\n                        placeholder=\"Masukan Nama Asset\"\r\n                        value={name}\r\n                        invalid={nameError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setName(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setNameError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Nama tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (<Button color=\"primary\" type=\"submit\">\r\n                      Simpan\r\n                    </Button>)}\r\n                    {isLoading && (<Button color=\"primary\" disabled>\r\n                      <i className=\"fas fa-spinner fa-spin\"></i>{\"\"}\r\n                      loading...\r\n                    </Button>)}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/type-asset\">\r\n                      Kembali\r\n                                        </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form, FormFeedback\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function CreateTypeAsset() {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [nameError, setNameError] = useState(null);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (name === \"\") {\r\n      setNameError(\"invalid\");\r\n      error = true;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  function CreateData() {\r\n    setLoading(true);\r\n    let data = {\r\n      name: name,\r\n    }\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/asset-type/save`, data, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        history.push(\"/admin/type-asset\");\r\n      })\r\n      .then(json => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      CreateData();\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Daftar Type Asset\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit} >\r\n                  <CardHeader>\r\n                    <h3>Daftar Type Asset</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nama\r\n                        <span className=\"text-danger\">*</span>\r\n                                            </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nama\"\r\n                        placeholder=\"Masukan Nama Asset\"\r\n                        value={name}\r\n                        invalid={nameError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setName(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setNameError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Nama tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (<Button color=\"primary\" type=\"submit\">\r\n                      Simpan\r\n                    </Button>)}\r\n                    {isLoading && (<Button color=\"primary\" disabled>\r\n                      <i className=\"fas fa-spinner fa-spin\"></i>{\"\"}\r\n                      loading...\r\n                    </Button>)}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/type-asset\">\r\n                      Kembali\r\n                                        </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form, FormFeedback\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport moment from \"moment\";\r\n\r\nexport default function EditAsset(props) {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [codeAsset, setCodeAsset] = useState(\"\");\r\n  const [nameAsset, setNameAsset] = useState(\"\");\r\n  const [nameAssetError, setNameAssetError] = useState(null);\r\n  const [typeAsset, setTypeAsset] = useState(\"\");\r\n  const [typeAssetError, setTypeAssetError] = useState(null);\r\n  const [total, setTotal] = useState(\"\");\r\n  const [note, setNote] = useState(\"\");\r\n  const [valueAsset, setValueAsset] = useState(\"\");\r\n  const [buyingDate, setBuyingDate] = useState(\"\");\r\n  const [types, setTypes] = useState([]);\r\n  const [coa, setCoa] = useState(\"\");\r\n  const [allCoa, setAllCoa] = useState([]);\r\n\r\n\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (nameAsset === \"\") {\r\n      setNameAssetError(\"invalid\");\r\n      error = true;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAssetById();\r\n  }, []);\r\n\r\n  const getAssetById = () => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/asset/${props.match.params.id}`, { headers\r\n    })\r\n    .then(data => {\r\n        setNameAsset(data.data.response.asset_name);\r\n        setCodeAsset(data.data.response.asset_code);\r\n        setTypeAsset(data.data.response.asset_type_id);\r\n        setTotal(data.data.response.entered_qty);\r\n        setValueAsset(data.data.response.nilai_asset);\r\n        setNote(data.data.response.note);\r\n        setCoa(data.data.response.coa_id);\r\n        setBuyingDate(moment(data.data.response.buying_date, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\"));\r\n        getCoa();\r\n        getType();\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n  \r\n\r\n  const getType = () => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/asset-type/list`, { headers\r\n    })\r\n    .then(data => {\r\n        setTypes(data.data.response)\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const getCoa = () => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/coa/list`, { headers\r\n    })\r\n    .then(data => {\r\n        setAllCoa(data.data.response)\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  function EditData() {\r\n    setLoading(true);\r\n    let data = {\r\n      asset_code: codeAsset,\r\n      asset_name: nameAsset,\r\n      entered_qty: parseInt(total),\r\n      asset_type_id: parseInt(typeAsset),\r\n      nilai_asset: parseInt(valueAsset),\r\n      buying_date: moment(buyingDate).format(\"DD-MM-YYYY\"),\r\n      warehouse_id: parseInt(warehouse),\r\n      coa_id: parseInt(coa),\r\n      active_flag: 1,\r\n      note: note\r\n    }\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/asset/update/${props.match.params.id}`, data, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        history.push(\"/admin/asset\");\r\n      })\r\n      .then(json => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n        EditData();\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Edit Asset\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit} >\r\n                  <CardHeader>\r\n                    <h3>Edit Asset</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nama Asset\r\n                        <span className=\"text-danger\">*</span>\r\n                                            </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nama\"\r\n                        placeholder=\"Masukan Nama Asset\"\r\n                        value={nameAsset}\r\n                        invalid={nameAssetError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setNameAsset(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setNameAssetError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Nama Asset tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Kode Asset\r\n                        </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nama\"\r\n                        placeholder=\"Masukan Kode Asset\"\r\n                        value={codeAsset}\r\n                        onChange={(e) => {\r\n                          setCodeAsset(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        Type Asset\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        name=\"type\"\r\n                        type=\"select\"\r\n                        value={typeAsset}\r\n                        invalid={typeAssetError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setTypeAsset(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setTypeAssetError(\"\");\r\n                          }\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Pilih Type Asset</option>\r\n                        {\r\n                          types.map((type, key) => {\r\n                            return <option key={key} value={type.id}>{type.name}</option>\r\n                          })\r\n                        }\r\n                      </Input>\r\n                      <FormFeedback>Type Asset tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nilai Asset\r\n                                            </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nilaiAsset\"\r\n                        placeholder=\"Masukan Nilai Asset\"\r\n                        value={valueAsset}\r\n                        onChange={(e) => {\r\n                          setValueAsset(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Jumlah\r\n                                            </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"total\"\r\n                        placeholder=\"Masukan Jumlah\"\r\n                        value={total}\r\n                        onChange={(e) => {\r\n                          setTotal(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        COA\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        name=\"coa\"\r\n                        type=\"select\"\r\n                        value={coa}\r\n                        onChange={(e) => {\r\n                          setCoa(e.target.value);\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Pilih COA</option>\r\n                        {\r\n                          allCoa.map((coa, key) => {\r\n                            return <option key={key} value={coa.id}>{coa.coa_name}</option>\r\n                          })\r\n                        }\r\n                      </Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"exampleFormControlSelect3\">Buying Date</Label>\r\n                        <Input\r\n                        id=\"example-date-input\"\r\n                        type=\"date\"\r\n                        value={buyingDate}\r\n                        onChange={(e) => {\r\n                            setBuyingDate(e.target.value);\r\n                        }}\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Note\r\n                        </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"note\"\r\n                        placeholder=\"Masukan Note\"\r\n                        value={note}\r\n                        onChange={(e) => {\r\n                          setNote(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (<Button color=\"primary\" type=\"submit\">\r\n                      Simpan\r\n                    </Button>)}\r\n                    {isLoading && (<Button color=\"primary\" disabled>\r\n                      <i className=\"fas fa-spinner fa-spin\"></i>{\"\"}\r\n                      loading...\r\n                    </Button>)}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/asset\">\r\n                      Kembali\r\n                                        </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport moment from \"moment\";\r\n\r\nexport default function CreateAsset() {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [codeAsset, setCodeAsset] = useState(\"\");\r\n  const [nameAsset, setNameAsset] = useState(\"\");\r\n  const [nameAssetError, setNameAssetError] = useState(null);\r\n  const [typeAsset, setTypeAsset] = useState(\"\");\r\n  const [typeAssetError, setTypeAssetError] = useState(null);\r\n  const [total, setTotal] = useState(\"\");\r\n  const [note, setNote] = useState(\"\");\r\n  const [valueAsset, setValueAsset] = useState(\"\");\r\n  const [buyingDate, setBuyingDate] = useState(\"\");\r\n  const [types, setTypes] = useState([]);\r\n  const [coa, setCoa] = useState(\"\");\r\n  const [allCoa, setAllCoa] = useState([]);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (nameAsset === \"\") {\r\n      setNameAssetError(\"invalid\");\r\n      error = true;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getType();\r\n    getCoa();\r\n  }, []);\r\n\r\n  const getType = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/asset-type/list`, { headers })\r\n      .then((data) => {\r\n        setTypes(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getCoa = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/coa/list`, { headers })\r\n      .then((data) => {\r\n        setAllCoa(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  function CreateData() {\r\n    setLoading(true);\r\n    let data = {\r\n      asset_code: codeAsset,\r\n      asset_name: nameAsset,\r\n      entered_qty: parseInt(total),\r\n      asset_type_id: typeAsset,\r\n      nilai_asset: parseInt(valueAsset),\r\n      buying_date: moment(buyingDate).format(\"DD-MM-YYYY\"),\r\n      warehouse_id: parseInt(warehouse),\r\n      coa_id: parseInt(coa),\r\n      active_flag: 1,\r\n      note: note,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/asset/save`, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then(function (response) {\r\n        history.push(\"/admin/asset\");\r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      CreateData();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Daftar Asset\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <CardHeader>\r\n                    <h3>Daftar Asset</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nama Asset\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nama\"\r\n                        placeholder=\"Masukan Nama Asset\"\r\n                        value={nameAsset}\r\n                        invalid={nameAssetError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setNameAsset(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setNameAssetError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>Nama Asset tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Kode Asset\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nama\"\r\n                        placeholder=\"Masukan Kode Asset\"\r\n                        value={codeAsset}\r\n                        onChange={(e) => {\r\n                          setCodeAsset(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        Type Asset\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        name=\"type\"\r\n                        type=\"select\"\r\n                        value={typeAsset}\r\n                        invalid={typeAssetError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setTypeAsset(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setTypeAssetError(\"\");\r\n                          }\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Pilih Type Asset</option>\r\n                        {types.map((type, key) => {\r\n                          return (\r\n                            <option key={key} value={type.id}>\r\n                              {type.name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </Input>\r\n                      <FormFeedback>Type Asset tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nilai Asset\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nilaiAsset\"\r\n                        placeholder=\"Masukan Nilai Asset\"\r\n                        value={valueAsset}\r\n                        onChange={(e) => {\r\n                          setValueAsset(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Jumlah\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"total\"\r\n                        placeholder=\"Masukan Jumlah\"\r\n                        value={total}\r\n                        onChange={(e) => {\r\n                          setTotal(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        COA\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        name=\"coa\"\r\n                        type=\"select\"\r\n                        value={coa}\r\n                        onChange={(e) => {\r\n                          setCoa(e.target.value);\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Pilih COA</option>\r\n                        {allCoa.map((coa, key) => {\r\n                          return (\r\n                            <option key={key} value={coa.id}>\r\n                              {coa.coa_name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"exampleFormControlSelect3\">\r\n                        Buying Date\r\n                      </Label>\r\n                      <Input\r\n                        id=\"example-date-input\"\r\n                        type=\"date\"\r\n                        value={buyingDate}\r\n                        onChange={(e) => {\r\n                          setBuyingDate(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Note\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"note\"\r\n                        placeholder=\"Masukan Note\"\r\n                        value={note}\r\n                        onChange={(e) => {\r\n                          setNote(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        Simpan\r\n                      </Button>\r\n                    )}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {\"\"}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/asset\">\r\n                      Kembali\r\n                    </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form, FormFeedback\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function EditAccount(props) {\r\n  const token = localStorage.token;\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [nameAccount1, setNameAccount1] = useState(\"\");\r\n  const [nameAccount1Error, setNameAccount1Error] = useState(null);\r\n  const [nameAccount2, setNameAccount2] = useState(\"\");\r\n  const [nameAccount2Error, setNameAccount2Error] = useState(null);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (nameAccount1 === \"\") {\r\n      setNameAccount1Error(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (nameAccount2 === \"\") {\r\n      setNameAccount2Error(\"invalid\");\r\n      error = true;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAccountById();\r\n  }, []);\r\n\r\n  const getAccountById = () => {\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.get(`${process.env.REACT_APP_API_BASE_URL}/account/${props.match.params.id}`, { headers\r\n    })\r\n    .then(data => {\r\n        setNameAccount1(data.data.response.account_name);\r\n        setNameAccount2(data.data.response.account_name2);\r\n    })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  function EditData() {\r\n    setLoading(true);\r\n    let data = {\r\n      account_name: nameAccount1,\r\n      account_name2: nameAccount2,\r\n      parent_flag: null,\r\n      parent_id: null,\r\n      active_flag: 1,\r\n      neraca_flag: 1,\r\n      status_flag: 1,\r\n      primary_flag: 1,\r\n      account_type_id: 0,\r\n    }\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/account/update/${props.match.params.id}`, data, { headers\r\n    })\r\n      .then(function (response) {\r\n        history.push(\"/admin/account\");\r\n      })\r\n      .then(json => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n        EditData();\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Edit Account\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit} >\r\n                  <CardHeader>\r\n                    <h3>Edit Account</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nama Account 1\r\n                        <span className=\"text-danger\">*</span>\r\n                                            </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"alamat\"\r\n                        placeholder=\"Masukan Alamat\"\r\n                        value={nameAccount1}\r\n                        invalid={nameAccount1Error === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setNameAccount1(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setNameAccount1Error(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Nama Account 1 tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nama Account 2\r\n                        <span className=\"text-danger\">*</span>\r\n                                            </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"phoneNumber\"\r\n                        placeholder=\"Masukan Nomor Telpon\"\r\n                        value={nameAccount2}\r\n                        invalid={nameAccount2Error === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setNameAccount2(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setNameAccount2Error(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Nama Account 2 tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (<Button color=\"primary\" type=\"submit\">\r\n                      Simpan\r\n                    </Button>)}\r\n                    {isLoading && (<Button color=\"primary\" disabled>\r\n                      <i className=\"fas fa-spinner fa-spin\"></i>{\"\"}\r\n                      loading...\r\n                    </Button>)}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/account\">\r\n                      Kembali\r\n                                        </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form, FormFeedback\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function CreateAccount() {\r\n  const token = localStorage.token;\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [nameAccount1, setNameAccount1] = useState(\"\");\r\n  const [nameAccount1Error, setNameAccount1Error] = useState(null);\r\n  const [nameAccount2, setNameAccount2] = useState(\"\");\r\n  const [nameAccount2Error, setNameAccount2Error] = useState(null);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (nameAccount1 === \"\") {\r\n      setNameAccount1Error(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (nameAccount2 === \"\") {\r\n      setNameAccount2Error(\"invalid\");\r\n      error = true;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  function CreateData() {\r\n    setLoading(true);\r\n    let data = {\r\n      // account_name: nameAccount1,\r\n      // account_name2: nameAccount2,\r\n      // parent_flag: null,\r\n      // parent_id: null,\r\n      // active_flag: 1,\r\n      // neraca_flag: 1,\r\n      // status_flag: 1,\r\n      // primary_flag: 1,\r\n      // account_type_id: 0,\r\n      // account_code: \"\"\r\n      account_code:\"\",\r\n      parent_flag:0,\r\n      parent_id:0,\r\n      account_name:nameAccount1,\r\n      active_flag:1,\r\n      neraca_flag:1,\r\n      status_flag:1,\r\n      account_type_id:0,\r\n      primary_flag:1,\r\n      account_name2:nameAccount2\r\n    }\r\n    axios.post(`${process.env.REACT_APP_API_BASE_URL}/account/save`, data, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        history.push(\"/admin/account\");\r\n      })\r\n      .then(json => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      CreateData();\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Daftar Account\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit} >\r\n                  <CardHeader>\r\n                    <h3>Daftar Account</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nama Account 1\r\n                        <span className=\"text-danger\">*</span>\r\n                                            </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"alamat\"\r\n                        placeholder=\"Masukan Alamat\"\r\n                        value={nameAccount1}\r\n                        invalid={nameAccount1Error === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setNameAccount1(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setNameAccount1Error(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Nama Account 1 tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nama Account 2\r\n                        <span className=\"text-danger\">*</span>\r\n                                            </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"phoneNumber\"\r\n                        placeholder=\"Masukan Nomor Telpon\"\r\n                        value={nameAccount2}\r\n                        invalid={nameAccount2Error === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setNameAccount2(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setNameAccount2Error(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Nama Account 2 tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (<Button color=\"primary\" type=\"submit\">\r\n                      Simpan\r\n                    </Button>)}\r\n                    {isLoading && (<Button color=\"primary\" disabled>\r\n                      <i className=\"fas fa-spinner fa-spin\"></i>{\"\"}\r\n                      loading...\r\n                    </Button>)}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/account\">\r\n                      Kembali\r\n                                        </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function EditCoa(props) {\r\n  const token = localStorage.token;\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [codeCoa, setCodeCoa] = useState(\"\");\r\n  const [nameCoa, setNameCoa] = useState(\"\");\r\n  const [nameCoaError, setNameCoaError] = useState(null);\r\n  const [account, setAccount] = useState(\"\");\r\n  const [accountError, setAccountError] = useState(null);\r\n  const [allAccount, setAllAccount] = useState([]);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (nameCoa === \"\") {\r\n      setNameCoaError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (account === \"\") {\r\n      setAccountError(\"invalid\");\r\n      error = true;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCoaById();\r\n  }, []);\r\n\r\n  const getCoaById = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/coa/${props.match.params.id}`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        getAccount(data.data.response.account_id);\r\n        setCodeCoa(data.data.response.coa_code);\r\n        setNameCoa(data.data.response.coa_name);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getAccount = (accoutnId) => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/account/list`, { headers })\r\n      .then((data) => {\r\n        setAllAccount(data.data.response);\r\n        setAccount(accoutnId);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  function EditData() {\r\n    setLoading(true);\r\n    let data = {\r\n      coa_code: codeCoa,\r\n      coa_name: nameCoa,\r\n      account_id: parseInt(account),\r\n      cc_id: 0,\r\n      active_flag: 1,\r\n    };\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/coa/update/${props.match.params.id}`,\r\n        data,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        history.push(\"/admin/coa\");\r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      EditData();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Edit Coa\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <CardHeader>\r\n                    <h3>Edit COA</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Kode Coa\r\n                      </Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        name=\"kodeCoa\"\r\n                        placeholder=\"Masukan Kode Coa\"\r\n                        value={codeCoa}\r\n                        onChange={(e) => {\r\n                          setCodeCoa(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nama Coa\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"NamaCoa\"\r\n                        placeholder=\"Masukan Nama Coa\"\r\n                        value={nameCoa}\r\n                        invalid={nameCoaError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setNameCoa(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setNameCoaError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>Nama Coa tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        Account\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        name=\"Account\"\r\n                        type=\"select\"\r\n                        value={account}\r\n                        invalid={accountError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setAccount(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setAccountError(\"\");\r\n                          }\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Pilih Account</option>\r\n                        {allAccount.map((account, key) => {\r\n                          return (\r\n                            <option key={key} value={account.id}>\r\n                              {account.account_name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </Input>\r\n                      <FormFeedback>Account tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        Simpan\r\n                      </Button>\r\n                    )}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {\"\"}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/coa\">\r\n                      Kembali\r\n                    </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function CreateCoa() {\r\n  const token = localStorage.token;\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [codeCoa, setCodeCoa] = useState(\"\");\r\n  const [nameCoa, setNameCoa] = useState(\"\");\r\n  const [nameCoaError, setNameCoaError] = useState(null);\r\n  const [account, setAccount] = useState(\"\");\r\n  const [accountError, setAccountError] = useState(null);\r\n  const [allAccount, setAllAccount] = useState([]);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (nameCoa === \"\") {\r\n      setNameCoaError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (account === \"\") {\r\n      setAccountError(\"invalid\");\r\n      error = true;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAccount();\r\n  }, []);\r\n\r\n  const getAccount = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/account/list`, { headers })\r\n      .then((data) => {\r\n        setAllAccount(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  function CreateData() {\r\n    setLoading(true);\r\n    let data = {\r\n      coa_code: codeCoa,\r\n      coa_name: nameCoa,\r\n      account_id: parseInt(account),\r\n      cc_id: 0,\r\n      active_flag: 1,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/coa/save`, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then(function (response) {\r\n        history.push(\"/admin/coa\");\r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      CreateData();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Daftar Coa\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <CardHeader>\r\n                    <h3>Daftar COA</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Kode Coa\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"kodeCoa\"\r\n                        placeholder=\"Masukan Kode Coa\"\r\n                        value={codeCoa}\r\n                        onChange={(e) => {\r\n                          setCodeCoa(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nama Coa\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"NamaCoa\"\r\n                        placeholder=\"Masukan Nama Coa\"\r\n                        value={nameCoa}\r\n                        invalid={nameCoaError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setNameCoa(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setNameCoaError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>Nama Coa tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        Account\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        name=\"Account\"\r\n                        type=\"select\"\r\n                        value={account}\r\n                        invalid={accountError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setAccount(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setAccountError(\"\");\r\n                          }\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Pilih Account</option>\r\n                        {allAccount.map((account, key) => {\r\n                          return (\r\n                            <option key={key} value={account.id}>\r\n                              {account.account_name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </Input>\r\n                      <FormFeedback>Account tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        Simpan\r\n                      </Button>\r\n                    )}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {\"\"}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/coa\">\r\n                      Kembali\r\n                    </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function CreateStockOpname() {\r\n  const token = localStorage.token;\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [itemCode, setItemCode] = useState(\"\");\r\n  const [itemCodeError, setItemCodeError] = useState(null);\r\n  const [stockFisik, setStockFisik] = useState(\"\");\r\n  const [stockFisikError, setStockFisikError] = useState(null);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (itemCode === \"\") {\r\n      setItemCodeError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (stockFisik === \"\") {\r\n      setStockFisikError(\"invalid\");\r\n      error = true;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  function CreateData() {\r\n    setLoading(true);\r\n    let data = {\r\n      item_code: itemCode,\r\n      stok_fisik: parseInt(stockFisik),\r\n      active_flag: 1,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/opname/save`, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then(function (response) {\r\n        history.push(\"/admin/stock-opname\");\r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      CreateData();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Daftar Stock Opname\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <CardHeader>\r\n                    <h3>Daftar Stock Opname</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Kode Item\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"kodeIten\"\r\n                        placeholder=\"Masukan Kode Item\"\r\n                        value={itemCode}\r\n                        invalid={itemCodeError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setItemCode(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setItemCodeError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>Kode Item tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Stock Fisik\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"stockFisik\"\r\n                        placeholder=\"Masukan Stock Fisik\"\r\n                        value={stockFisik}\r\n                        invalid={stockFisikError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setStockFisik(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setStockFisikError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Stock Fisik tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        Simpan\r\n                      </Button>\r\n                    )}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {\"\"}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/stock-opname\">\r\n                      Kembali\r\n                    </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  TabContent,\r\n  TabPane\r\n} from \"reactstrap\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport classnames from 'classnames';\r\n\r\nimport StockSemua from \"views/pages/itemStock/StockSemua/Index.js\";\r\nimport StockPribadi from \"views/pages/itemStock/StockPribadi/Index.js\";\r\nimport StockLow from \"views/pages/itemStock/StockLow/Index.js\";\r\nimport StockRak from \"views/pages/itemStock/StockRak/Index.js\";\r\n\r\nexport default function ItemStock() {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  }\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Item Stock\" parentName=\"Inventori\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Nav tabs>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '1' })}\r\n                      onClick={() => { toggle('1'); }}\r\n                    >\r\n                      All Stock Items\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '2' })}\r\n                      onClick={() => { toggle('2'); }}\r\n                    >\r\n                      Own Stock Items\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '3' })}\r\n                      onClick={() => { toggle('3'); }}\r\n                    >\r\n                      Low Stock Items\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '4' })}\r\n                      onClick={() => { toggle('4'); }}\r\n                    >\r\n                      Rak Stock Items\r\n                    </NavLink>\r\n                  </NavItem>\r\n                </Nav>\r\n                <TabContent activeTab={activeTab}>\r\n                  <TabPane tabId=\"1\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <StockSemua />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                  <TabPane tabId=\"2\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <StockPribadi />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                  <TabPane tabId=\"3\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <StockLow />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                  <TabPane tabId=\"4\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <StockRak />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                </TabContent>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function EditStockOpname(props) {\r\n  console.log(props);\r\n  const token = localStorage.token;\r\n  const itemCodeId = props.location.state.itemCode;\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [itemCode, setItemCode] = useState(\"\");\r\n  const [itemCodeError, setItemCodeError] = useState(null);\r\n  const [stockFisik, setStockFisik] = useState(\"\");\r\n  const [stockFisikError, setStockFisikError] = useState(null);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (itemCode === \"\") {\r\n      setItemCodeError(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (stockFisik === \"\") {\r\n      setStockFisikError(\"invalid\");\r\n      error = true;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getById();\r\n  }, []);\r\n\r\n  const getById = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const data = {\r\n      item_code: itemCodeId,\r\n    };\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/opname/adjust/${props.match.params.id}`,\r\n        data,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        setItemCode(data.data.response.item_opname.item_code);\r\n        setStockFisik(data.data.response.item_opname.stok_fisik);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  function EditData() {\r\n    setLoading(true);\r\n    let data = {\r\n      item_code: itemCode,\r\n      stok_fisik: parseInt(stockFisik),\r\n      active_flag: 1,\r\n    };\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/opname/update/${props.match.params.id}`,\r\n        data,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        history.push(\"/admin/stock-opname\");\r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      EditData();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Edit Stock Opname\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <CardHeader>\r\n                    <h3>Edit Stock Opname</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Kode Item\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"kodeIten\"\r\n                        placeholder=\"Masukan Kode Item\"\r\n                        value={itemCode}\r\n                        invalid={itemCodeError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setItemCode(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setItemCodeError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>Kode Item tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Stock Fisik\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"stockFisik\"\r\n                        placeholder=\"Masukan Stock Fisik\"\r\n                        value={stockFisik}\r\n                        invalid={stockFisikError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setStockFisik(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setStockFisikError(\"\");\r\n                          }\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Stock Fisik tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        Simpan\r\n                      </Button>\r\n                    )}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {\"\"}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/stock-opname\">\r\n                      Kembali\r\n                    </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function AdjustStockOpname() {\r\n  const token = localStorage.token;\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [inputList, setInputList] = useState([\r\n    {\r\n      code: \"\",\r\n    },\r\n  ]);\r\n\r\n  // handle input change\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...inputList];\r\n    list[index][name] = value;\r\n    setInputList(list);\r\n  };\r\n\r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...inputList];\r\n    list.splice(index, 1);\r\n    setInputList(list);\r\n  };\r\n\r\n  // handle click event of the Add button\r\n  const handleAddClick = () => {\r\n    setInputList([\r\n      ...inputList,\r\n      {\r\n        code: \"\",\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    // if (itemCode === \"\") {\r\n    //   setItemCodeError(\"invalid\");\r\n    //   error = true;\r\n    // }\r\n    return error;\r\n  };\r\n\r\n  function CreateData() {\r\n    setLoading(true);\r\n    let data = {\r\n      listOpname: inputList,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/opname/adjust/all`, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then(function (response) {\r\n        history.push(\"/admin/stock-opname\");\r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      CreateData();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Adjust Stock Opname\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <CardHeader>\r\n                    <h3>Adjust Stock Opname</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    {inputList.map((x, i) => {\r\n                      return (\r\n                        <div className=\"box\">\r\n                          <FormGroup>\r\n                            <Label\r\n                              className=\"form-control-label\"\r\n                              htmlFor=\"exampleFormControlInput1\"\r\n                            >\r\n                              Code Item\r\n                            </Label>\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"code\"\r\n                              placeholder=\"Masukan Code Item\"\r\n                              value={x.code}\r\n                              onChange={(e) => handleInputChange(e, i)}\r\n                            />\r\n                          </FormGroup>\r\n                          <div className=\"btn-box\">\r\n                            {inputList.length !== 1 && (\r\n                              <Button\r\n                                color=\"default\"\r\n                                onClick={() => handleRemoveClick(i)}\r\n                              >\r\n                                Remove\r\n                              </Button>\r\n                            )}\r\n                            {inputList.length - 1 === i && (\r\n                              <Button color=\"default\" onClick={handleAddClick}>\r\n                                Add\r\n                              </Button>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        Simpan\r\n                      </Button>\r\n                    )}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {\"\"}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/stock-opname\">\r\n                      Kembali\r\n                    </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Col,\r\n  CardHeader,\r\n  CardFooter,\r\n  Container,\r\n  Button,\r\n  Form,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\n\r\n\r\nexport default function Edit(props) {\r\n  const username = localStorage.username;\r\n  const token = localStorage.token;\r\n  const warehouse = localStorage.warehouse;\r\n  const sub = localStorage.sub;\r\n  \r\n  let history = useHistory();\r\n  const [usernameso, setUsernameSo] = useState(\"\");\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [customer, setCustomer] = useState(\"\");\r\n  const [customers, setCustomers] = useState([]);\r\n  const [ordercode,setOrderCode]= useState(\"\");\r\n  const [jangkawaktu,setJangkaWaktu] = useState([]);\r\n  const [keteranganpayment,setKeteranganPayment] = useState(\"\");\r\n  const [paymentmethod,setPaymentMethod] = useState(\"\");\r\n  const [keteranganso,setKeteranganSo] = useState(\"\");\r\n  const [termin,setTermin] = useState([]);\r\n  const [soType, setSoType] = useState(\"\");\r\n  const [approve, setApprove] = useState([]);\r\n  const [adminapprove,setAdminApprove] = useState([]);\r\n  const [clear,setValidatorSo] = useState([]);\r\n  const [usernameadmin,setUsernameAdmin] = useState(\"\");\r\n  const [durasitempo,setDurasiTempo] = useState(\"\");\r\n  const [statusSo,setStatusSo] = useState([]);\r\n  const [status_barang,setStatusBarang] = useState([]);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getById();\r\n      }, []);\r\n\r\n  const getById = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/sales-order/get/${props.match.params.id}`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        getSo(data.data.response_data.id);\r\n        setOrderCode(data.data.response_data.order_code);\r\n        setUsernameSo(data.data.response_data.username_so);\r\n        setPaymentMethod(data.data.response_data.payment_method);\r\n        setKeteranganSo(data.data.response_data.keterangan_so);\r\n        setJangkaWaktu(data.data.response_data.jangka_waktu);\r\n        setKeteranganPayment(data.data.response_data.keterangan_payment );\r\n        setTermin(data.data.response_data.is_cicil);\r\n        setDurasiTempo(data.data.response_data.durasitempo);\r\n        setCustomer(data.data.response_data.customer);\r\n        setSoType(data.data.response_data.so_type);\r\n        setApprove(data.data.response_data.approve);\r\n        setAdminApprove(data.data.response_data.admin_approval);\r\n        setUsernameAdmin(data.data.response_data.username_admin);\r\n        setStatusSo(data.data.response_data.so_status);\r\n        setValidatorSo(data.data.response_data.clear);\r\n        setStatusBarang(data.data.response_data.status_barang);\r\n\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getSo = (soId) => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const data = {\r\n      so_id: parseInt(soId),\r\n    };\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/sales-order/so-items`,\r\n        data,\r\n        {\r\n          headers,\r\n        }\r\n      )\r\n      .then((data) => {\r\n        getCustomer();\r\n\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getCustomer = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/customer/list`, { headers })\r\n      .then((data) => {\r\n        setCustomers(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, uomCode, description);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort,  uomCode, description)\r\n    }\r\n  }\r\n\r\n\r\n  function EditData() {\r\n    setLoading(true);\r\n    let data = {\r\n\r\n        warehouse_id : parseInt(warehouse),\r\n        username_so : usernameso,\r\n        payment_method : paymentmethod,\r\n        jangka_waktu : jangkawaktu,\r\n        keterangan_payment : keteranganpayment,\r\n        is_cicil: parseInt(termin),\r\n        approve: parseInt(approve),\r\n        keterangan_so: keteranganso,\r\n        username_admin: username,\r\n        admin_approval: parseInt(adminapprove),\r\n        keterangan_admin: \"\",\r\n        durasitempo : durasitempo,\r\n        username_validator : \"\",\r\n        clear : parseInt(clear),\r\n        keterangan_validator : \"\",\r\n        username_gudang : sub,\r\n        status_barang : parseInt(status_barang),\r\n        keterangan_gudang : \"\",\r\n        username_kurir : \"\",\r\n        member : 1,\r\n        customer : customer,\r\n        address_id:1,\r\n        active_flag : 1,\r\n        so_type: soType,\r\n        so_status : 1,\r\n        promo_id: 0,\r\n        items : [\r\n        ]\r\n    };\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/sales-order/update/${props.match.params.id}`,\r\n        data,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        history.push(\"/admin/receiving-so\");\r\n        console.log(data);  \r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    {\r\n      EditData();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div> \r\n      <SimpleHeader name=\"Validasi Admin Gudang\" parentName=\"Inventori\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Card>\r\n                <Form onSubmit={handleSubmit}> \r\n                  <CardBody>\r\n                    <Row md=\"12\">\r\n                    <Col md=\"6\">\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Kode SO\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                              disabled\r\n                                type=\"text\"\r\n                                name=\"desc\"\r\n                                placeholder=\"Masukan Keterangan PO\"\r\n                                value={ordercode}\r\n                                onChange={(e) => {\r\n                                 \r\n                                }}\r\n                              />\r\n                              \r\n                            </Col>\r\n                          </FormGroup>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                                type=\"hidden\"\r\n                                name=\"desc\"\r\n                                placeholder=\"Masukan Username So\"\r\n                                value={usernameso}\r\n                                onChange={(e) => {\r\n                                  setUsernameSo(e.target.value);\r\n                                 \r\n                                }}\r\n                              />\r\n                              \r\n                            </Col>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                                type=\"hidden\"\r\n                                name=\"desc\"\r\n                                placeholder=\"Masukan Username So\"\r\n                                value={usernameadmin}\r\n                                onChange={(e) => {\r\n                                    setUsernameAdmin(e.target.value);\r\n                                 \r\n                                }}\r\n                              />\r\n                              \r\n                            </Col>\r\n                          \r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                                Customer\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                                name=\"kategory\"\r\n                                type=\"select\"\r\n                                value={customer}\r\n                                onChange={(e) => {\r\n                                  setCustomer(e.target.value);\r\n                                }}\r\n                              >\r\n                                {customers.map((customer, key) => {\r\n                                    return (\r\n                                      <option key={key} value={customer.id}>\r\n                                        {customer.name}\r\n                                      </option>\r\n                                    );\r\n                                  })}\r\n                              </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              keterangan SO\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                              disabled\r\n                                type=\"text\"\r\n                                name=\"desc\"\r\n                                placeholder=\"Masukan Keterangan SO\"\r\n                                value={keteranganso}\r\n                                onChange={(e) => {\r\n                                  setKeteranganSo(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Status SO\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                                name=\"paymentMethod\"\r\n                                type=\"select\"\r\n                                value={statusSo}\r\n                                onChange={(e) => {\r\n                                  setSoType(e.target.value);\r\n                                }}\r\n                              >\r\n                               \r\n                                <option value={1}>Kasir</option>\r\n                                <option value={2}>Sales</option>\r\n                                <option value={3}>Canvasing</option>\r\n                              </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Tipe SO\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                                name=\"paymentMethod\"\r\n                                type=\"select\"\r\n                                value={soType}\r\n                                onChange={(e) => {\r\n                                  setSoType(e.target.value);\r\n                                }}\r\n                              >\r\n                                <option value=\"\">Pilih Payment Method</option>\r\n                                <option value={1}>Ready</option>\r\n                                <option value={2}>Indent</option>\r\n                              </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                        <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Durasi Tempo\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                                type=\"text\"\r\n                                name=\"durasi tempo\"\r\n                                placeholder=\"Masukan Durasi Tempo\"\r\n                                value={durasitempo}\r\n                                onChange={(e) => {\r\n                                  setDurasiTempo(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Jangka Waktu\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                                type=\"number\"\r\n                                name=\"jangkawaktu\"\r\n                                placeholder=\"Masukan Jangka Waktu\"\r\n                                value={jangkawaktu}\r\n                                onChange={(e) => {\r\n                                  setJangkaWaktu(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Termin\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                            name=\"satuan\"\r\n                            type=\"select\"\r\n                            value={termin}\r\n                            onChange={(e) => {\r\n                              setTermin(e.target.value);\r\n                            }}\r\n                          >\r\n                            \r\n                            <option value={1}>Lunas</option>\r\n                            <option value={2}>Belum Lunas</option>\r\n                            \r\n                              </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Metode Pembayaran\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                          disabled\r\n                          name=\"paymentMethod\"\r\n                          type=\"select\"\r\n                          value={paymentmethod}\r\n                          onChange={(e) => {\r\n                            setPaymentMethod(e.target.value);\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Pilih Payment Method</option>\r\n                          <option value={1}>Tunai</option>\r\n                          <option value={2}>Tempo/Termin/Utang</option>\r\n                        </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                              <Col sm={6}>\r\n                                <div style={{ display: \"none\" }}>\r\n                                  <div className=\"custom-control custom-radio mb-3\">\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio8\"\r\n                                      name=\"custom-radio-3\"\r\n                                      type=\"radio\"\r\n                                      value={1}\r\n                                      checked={approve === 1}\r\n                                      onChange={() => setApprove(1)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio8\"\r\n                                    >\r\n                                      Disetujui\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"custom-control custom-radio mb-3\"\r\n                                    style={{ marginLeft: \"20px\" }}\r\n                                  >\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio9\"\r\n                                      name=\"custom-radio-3\"\r\n                                      type=\"radio\"\r\n                                      value={2}\r\n                                      checked={approve === 2}\r\n                                      onChange={() => setApprove(2)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio9\"\r\n                                    >\r\n                                      Ditolak\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"custom-control custom-radio mb-3\"\r\n                                    style={{ marginLeft: \"20px\" }}\r\n                                  >\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio10\"\r\n                                      name=\"custom-radio-3\"\r\n                                      type=\"radio\"\r\n                                      value={3}\r\n                                      checked={approve === 3}\r\n                                      onChange={() => setApprove(3)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio10\"\r\n                                    >\r\n                                      Dibatalkan\r\n                                    </Label>\r\n                                  </div>\r\n                                </div>\r\n                              </Col>\r\n                              <Col sm={6}>\r\n                                <div style={{ display: \"none\" }}>\r\n                                  <div className=\"custom-control custom-radio mb-3\">\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio11\"\r\n                                      name=\"custom-radio-4\"\r\n                                      type=\"radio\"\r\n                                      value={1}\r\n                                      checked={adminapprove === 1}\r\n                                      onChange={() => setAdminApprove(1)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio11\"\r\n                                    >\r\n                                      Disetujui\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"custom-control custom-radio mb-3\"\r\n                                    style={{ marginLeft: \"20px\" }}\r\n                                  >\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio12\"\r\n                                      name=\"custom-radio-4\"\r\n                                      type=\"radio\"\r\n                                      value={2}\r\n                                      checked={adminapprove === 2}\r\n                                      onChange={() => setAdminApprove(2)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio12\"\r\n                                    >\r\n                                      Ditolak\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"custom-control custom-radio mb-3\"\r\n                                    style={{ marginLeft: \"20px\" }}\r\n                                  >\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio13\"\r\n                                      name=\"custom-radio-4\"\r\n                                      type=\"radio\"\r\n                                      value={3}\r\n                                      checked={adminapprove === 3}\r\n                                      onChange={() => setAdminApprove(3)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio13\"\r\n                                    >\r\n                                      Dibatalkan\r\n                                    </Label>\r\n                                  </div>\r\n                                </div>\r\n                              </Col>\r\n                              <Col sm={6}>\r\n                                <div style={{ display: \"none\" }}>\r\n                                  <div className=\"custom-control custom-radio mb-3\">\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio14\"\r\n                                      name=\"custom-radio-5\"\r\n                                      type=\"radio\"\r\n                                      value={1}\r\n                                      checked={clear === 1}\r\n                                      onChange={() => setValidatorSo(1)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio14\"\r\n                                    >\r\n                                      Disetujui\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"custom-control custom-radio mb-3\"\r\n                                    style={{ marginLeft: \"20px\" }}\r\n                                  >\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio15\"\r\n                                      name=\"custom-radio-5\"\r\n                                      type=\"radio\"\r\n                                      value={2}\r\n                                      checked={clear === 2}\r\n                                      onChange={() => setValidatorSo(2)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio15\"\r\n                                    >\r\n                                      Ditolak\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"custom-control custom-radio mb-3\"\r\n                                    style={{ marginLeft: \"20px\" }}\r\n                                  >\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio16\"\r\n                                      name=\"custom-radio-5\"\r\n                                      type=\"radio\"\r\n                                      value={3}\r\n                                      checked={clear === 3}\r\n                                      onChange={() => setValidatorSo(3)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio16\"\r\n                                    >\r\n                                      Dibatalkan\r\n                                    </Label>\r\n                                  </div>\r\n                                </div>\r\n                              </Col>\r\n                          \r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Status Barang\r\n                            </Label>\r\n                              <Col sm={6}>\r\n                                <div style={{ display: \"flex\" }}>\r\n                                  <div className=\"custom-control custom-radio mb-3\">\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio17\"\r\n                                      name=\"custom-radio-6\"\r\n                                      type=\"radio\"\r\n                                      value={1}\r\n                                      checked={status_barang === 1}\r\n                                      onChange={() => setStatusBarang(1)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio17\"\r\n                                    >\r\n                                      Lengkap\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"custom-control custom-radio mb-3\"\r\n                                    style={{ marginLeft: \"20px\" }}\r\n                                  >\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio18\"\r\n                                      name=\"custom-radio-6\"\r\n                                      type=\"radio\"\r\n                                      value={2}\r\n                                      checked={status_barang === 2}\r\n                                      onChange={() => setStatusBarang(2)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio18\"\r\n                                    >\r\n                                      Tidak Lengkap\r\n                                    </Label>\r\n                                  </div>\r\n                                  \r\n                                </div>\r\n                              </Col>\r\n                          </FormGroup>\r\n                          \r\n                        </Col>\r\n                    </Row>\r\n                    <ToolkitProvider\r\n                            rowNumber={rowIndex}\r\n                            data={\"\"}\r\n                            keyField=\"id\"\r\n                            columns={[\r\n                                {\r\n                                  dataField: \"no\",\r\n                                  text: \"No\",\r\n                                  sort: true,\r\n                                  page: 1,\r\n                                  formatter: (cell, row, index) => {\r\n                                    let currentRow = ++index;\r\n                                    return currentRow + rowIndex;\r\n                                  }\r\n                                },\r\n                                {\r\n                                  dataField: \"Item_name\",\r\n                                  text: \"Nama Item\",\r\n                                  sort: true,\r\n                                },\r\n                                {\r\n                                  dataField: \"Qty\",\r\n                                  text: \"Qty \",\r\n                                  sort: true,\r\n                                },\r\n                                {\r\n                                  dataField: \"satuan\",\r\n                                  text: \"Satuan \",\r\n                                  sort: true,\r\n                                },\r\n                                {\r\n                                  dataField: \"Harga\",\r\n                                  text: \"Harga \",\r\n                                  sort: true,\r\n                                },\r\n                              ]}\r\n                          >\r\n                            {(props) => (\r\n                              <div className=\"py-4 table-responsive\">\r\n                                <BootstrapTable\r\n                                  remote\r\n                                  {...props.baseProps}\r\n                                  bootstrap4={true}\r\n                                  bordered={false}\r\n                                  hover={true}\r\n                                  pagination={paginationFactory({ ...paginationOption })}\r\n                                  onTableChange={handleTableChange}\r\n                                />\r\n                              </div>\r\n                            )}\r\n                    </ToolkitProvider>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                  <Row md=\"12\">\r\n                    <Col md=\"9\">\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                    {!isLoading && (\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        Simpan\r\n                      </Button>\r\n                    )}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {\"\"}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/so\">\r\n                      Kembali\r\n                    </Link>\r\n                    </Col>\r\n                  </Row>\r\n                  </CardFooter>\r\n                  </Form>\r\n                  </Card>\r\n              </CardBody>\r\n              </Card>\r\n          </div>\r\n        </Row>\r\n        </Container>\r\n    </div>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function EditTransferStock(props) {\r\n  const token = localStorage.token;\r\n  const username = localStorage.username;\r\n  const warehouse = localStorage.warehouse;\r\n  const role = localStorage.authority;\r\n  const namaDepartment = localStorage.department;\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [usernameTs, setUsernameTs] = useState(username);\r\n  const [usernameKurir, setUsernameKurir] = useState(username);\r\n  const [usernammeGudang, setUsernameGudang] = useState(username);\r\n  const [usernameValidator, setUsernameValidator] = useState(username);\r\n  const [descriptionValidator, setDescriptionValidator] = useState(\"\");\r\n  const [descriptionTs, setDescriptionTs] = useState(\"\");\r\n  const [descriptionGudang, setDescriptionGudang] = useState(\"\");\r\n  const [statusBarang, setStatusBarang] = useState(0);\r\n  const [clear, setClear] = useState(0);\r\n  const [tsType, setTsType] = useState(\"\");\r\n  const [typeItemId, setTypeItemId] = useState(1);\r\n  const [code, setCode] = useState(\"\");\r\n\r\n  const [items, setItems] = useState([]);\r\n\r\n  const [inputList, setInputList] = useState([\r\n    {\r\n      item_id: \"\",\r\n      qty: \"\",\r\n      qty_fisik: \"\",\r\n      keterangan_fisik: \"\",\r\n    },\r\n  ]);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    // if (paymentMethod === \"\") {\r\n    //   setPaymentMethodError(\"invalid\");\r\n    //   error = true;\r\n    // }\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getById();\r\n  }, []);\r\n\r\n  const getById = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/transfer-stok/get/${props.match.params.id}`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        getTs(data.data.response_data.id);\r\n        setUsernameTs(data.data.response_data.username_ts);\r\n        setUsernameGudang(data.data.response_data.username_gudang);\r\n        setUsernameKurir(data.data.response_data.username_kurir);\r\n        setUsernameValidator(data.data.response_data.username_validator);\r\n        setDescriptionGudang(data.data.response_data.keterangan_gudang);\r\n        setDescriptionTs(data.data.response_data.keterangan_ts);\r\n        setDescriptionValidator(data.data.response_data.keterangan_validator);\r\n        setTsType(data.data.response_data.ts_type);\r\n        setClear(data.data.response_data.clear);\r\n        setStatusBarang(data.data.response_data.status_barang);\r\n        setCode(data.data.response_data.transfer_code);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getTs = (id) => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const data = {\r\n      ts_id: parseInt(id),\r\n    };\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/transfer-stok/ts-items`,\r\n        data,\r\n        {\r\n          headers,\r\n        }\r\n      )\r\n      .then((data) => {\r\n        getItem();\r\n        let item = [];\r\n        let qty = [];\r\n        let qty_fisik = [];\r\n        let keterangan_fisik = [];\r\n        data.data.response_data.map((x, i) => {\r\n          item.push(x.item_id);\r\n          qty.push(x.qty);\r\n          qty_fisik.push(x.qty_fisik);\r\n          keterangan_fisik.push(x.keterangan_fisik);\r\n          setInputList([\r\n            {\r\n              item_id: x.item_id,\r\n              qty: x.qty,\r\n              qty_fisik: x.qty_fisik,\r\n              keterangan_fisik: x.keterangan_fisik,\r\n            },\r\n          ]);\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getItem();\r\n  }, [typeItemId, setTypeItemId]);\r\n\r\n  const getItem = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/items/type`,\r\n        { params: { warehouse_id: warehouse, type: typeItemId } },\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        setItems(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  // handle input change\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...inputList];\r\n    list[index][name] = name === \"keterangan_fisik\" ? value : parseInt(value);\r\n    setInputList(list);\r\n  };\r\n\r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...inputList];\r\n    list.splice(index, 1);\r\n    setInputList(list);\r\n  };\r\n\r\n  // handle click event of the Add button\r\n  const handleAddClick = () => {\r\n    setInputList([\r\n      ...inputList,\r\n      {\r\n        item_id: \"\",\r\n        qty: \"\",\r\n        qty_fisik: \"\",\r\n        keterangan_fisik: \"\",\r\n      },\r\n    ]);\r\n  };\r\n\r\n  function EditData() {\r\n    setLoading(true);\r\n    let data = {\r\n      warehouse_id: parseInt(warehouse),\r\n      username_ts: usernameTs,\r\n      username_gudang: usernammeGudang,\r\n      status_barang: parseInt(statusBarang),\r\n      keterangan_gudang: descriptionGudang,\r\n      username_kurir: usernameKurir,\r\n      username_validator: usernameValidator,\r\n      clear: parseInt(clear),\r\n      keterangan_validator: descriptionValidator,\r\n      active_flag: 1,\r\n      ts_type: tsType,\r\n      keterangan_ts: descriptionTs,\r\n      items: inputList,\r\n    };\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/transfer-stok/update/${props.match.params.id}`,\r\n        data,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        history.push(\"/admin/transfer-stock\");\r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      EditData();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Edit Transfer Stock\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            {role === \"ROLE_ADMIN\" &&\r\n            namaDepartment === \"Front Office Manager\" ? (\r\n              <Card>\r\n                <CardBody>\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <CardHeader>\r\n                      <h3>Edit Sales Order</h3>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Order Code\r\n                        </Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"text\"\r\n                          name=\"po\"\r\n                          placeholder=\"Masukan Kode\"\r\n                          value={code}\r\n                          onChange={(e) => {\r\n                            setCode(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan TS\r\n                        </Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"text\"\r\n                          name=\"descSo\"\r\n                          placeholder=\"Masukan Keterangan TS\"\r\n                          value={descriptionTs}\r\n                          onChange={(e) => {\r\n                            setDescriptionTs(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan Validator\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descValidator\"\r\n                          placeholder=\"Masukan Keterangan Validator\"\r\n                          value={descriptionValidator}\r\n                          onChange={(e) => {\r\n                            setDescriptionValidator(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Clear\r\n                        </Label>\r\n                        <Row>\r\n                          <Col>\r\n                            <div style={{ display: \"flex\" }}>\r\n                              <div className=\"custom-control custom-radio mb-3\">\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio5\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={1}\r\n                                  checked={clear === 1}\r\n                                  onChange={() => setClear(1)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio5\"\r\n                                >\r\n                                  Disetujui\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio6\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={2}\r\n                                  checked={clear === 2}\r\n                                  onChange={() => setClear(2)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio6\"\r\n                                >\r\n                                  Ditolak\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio7\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={3}\r\n                                  checked={clear === 3}\r\n                                  onChange={() => setClear(3)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio7\"\r\n                                >\r\n                                  Dibatalkan\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </FormGroup>\r\n                      {inputList.map((x, i) => {\r\n                        return (\r\n                          <div className=\"box\">\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Item\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                name=\"item_id\"\r\n                                type=\"select\"\r\n                                value={parseInt(x.item_id)}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Item</option>\r\n                                {items.map((item, key) => {\r\n                                  return (\r\n                                    <option key={key} value={item.id}>\r\n                                      {item.item_name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                              <FormFeedback>\r\n                                Item tidak boleh kosong\r\n                              </FormFeedback>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Quality\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                type=\"text\"\r\n                                name=\"qty\"\r\n                                placeholder=\"Masukan Quality\"\r\n                                value={x.qty}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Satuan\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                name=\"satuan\"\r\n                                type=\"select\"\r\n                                value={x.satuan}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Satuan</option>\r\n                                {allSatuan.map((satuan, key) => {\r\n                                  return (\r\n                                    <option key={key} value={satuan.id}>\r\n                                      {satuan.uom_code}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Person\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                name=\"person\"\r\n                                type=\"select\"\r\n                                value={x.person}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Person</option>\r\n                                {persons.map((person, key) => {\r\n                                  return (\r\n                                    <option key={key} value={person.id}>\r\n                                      {person.person_name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Harga\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                type=\"text\"\r\n                                name=\"harga\"\r\n                                placeholder=\"Masukan Harga\"\r\n                                value={x.harga}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Quality Fisik\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                type=\"text\"\r\n                                name=\"qty_fisik\"\r\n                                placeholder=\"Masukan Quality Fidik\"\r\n                                value={x.qty_fisik}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Keterangan Fisik\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                type=\"text\"\r\n                                name=\"keterangan_fisik\"\r\n                                placeholder=\"Masukan Keterangna Fisik\"\r\n                                value={x.keterangan_fisik}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <div className=\"btn-box\">\r\n                              {inputList.length !== 1 && (\r\n                                <Button\r\n                                  color=\"default\"\r\n                                  onClick={() => handleRemoveClick(i)}\r\n                                >\r\n                                  Remove\r\n                                </Button>\r\n                              )}\r\n                              {inputList.length - 1 === i && (\r\n                                <Button\r\n                                  color=\"default\"\r\n                                  onClick={handleAddClick}\r\n                                >\r\n                                  Add\r\n                                </Button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </CardBody>\r\n                    <CardFooter>\r\n                      {!isLoading && (\r\n                        <Button color=\"primary\" type=\"submit\">\r\n                          Simpan\r\n                        </Button>\r\n                      )}\r\n                      {isLoading && (\r\n                        <Button color=\"primary\" disabled>\r\n                          <i className=\"fas fa-spinner fa-spin\"></i>\r\n                          {\"\"}\r\n                          loading...\r\n                        </Button>\r\n                      )}\r\n                      <Link className=\"btn btn-info\" to=\"/admin/sales-order\">\r\n                        Kembali\r\n                      </Link>\r\n                    </CardFooter>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            ) : role === \"ROLE_ADMIN\" && namaDepartment === \"Gudang\" ? (\r\n              <Card>\r\n                <CardBody>\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <CardHeader>\r\n                      <h3>Edit Sales Order</h3>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Order Code\r\n                        </Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"text\"\r\n                          name=\"po\"\r\n                          placeholder=\"Masukan Kode\"\r\n                          value={code}\r\n                          onChange={(e) => {\r\n                            setCode(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan Gudang\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descGudang\"\r\n                          placeholder=\"Masukan Keterangan Gudang\"\r\n                          value={descriptionGudang}\r\n                          onChange={(e) => {\r\n                            setDescriptionGudang(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Status Barang\r\n                        </Label>\r\n                        <Row>\r\n                          <Col>\r\n                            <div style={{ display: \"flex\" }}>\r\n                              <div className=\"custom-control custom-radio mb-3\">\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio11\"\r\n                                  name=\"custom-radio-4\"\r\n                                  type=\"radio\"\r\n                                  value={1}\r\n                                  checked={statusBarang === 1}\r\n                                  onChange={() => setStatusBarang(1)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio11\"\r\n                                >\r\n                                  Diterima\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio12\"\r\n                                  name=\"custom-radio-4\"\r\n                                  type=\"radio\"\r\n                                  value={2}\r\n                                  checked={statusBarang === 2}\r\n                                  onChange={() => setStatusBarang(2)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio12\"\r\n                                >\r\n                                  Ditolak\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio13\"\r\n                                  name=\"custom-radio-4\"\r\n                                  type=\"radio\"\r\n                                  value={3}\r\n                                  checked={statusBarang === 3}\r\n                                  onChange={() => setStatusBarang(3)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio13\"\r\n                                >\r\n                                  Dibatalkan\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </FormGroup>\r\n                      {inputList.map((x, i) => {\r\n                        return (\r\n                          <div className=\"box\">\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Item\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                name=\"item_id\"\r\n                                type=\"select\"\r\n                                value={parseInt(x.item_id)}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Item</option>\r\n                                {items.map((item, key) => {\r\n                                  return (\r\n                                    <option key={key} value={item.id}>\r\n                                      {item.item_name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                              <FormFeedback>\r\n                                Item tidak boleh kosong\r\n                              </FormFeedback>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Quality\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                type=\"text\"\r\n                                name=\"qty\"\r\n                                placeholder=\"Masukan Quality\"\r\n                                value={x.qty}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Satuan\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                name=\"satuan\"\r\n                                type=\"select\"\r\n                                value={x.satuan}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Satuan</option>\r\n                                {allSatuan.map((satuan, key) => {\r\n                                  return (\r\n                                    <option key={key} value={satuan.id}>\r\n                                      {satuan.uom_code}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Person\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                name=\"person\"\r\n                                type=\"select\"\r\n                                value={x.person}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Person</option>\r\n                                {persons.map((person, key) => {\r\n                                  return (\r\n                                    <option key={key} value={person.id}>\r\n                                      {person.person_name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Harga\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                type=\"text\"\r\n                                name=\"harga\"\r\n                                placeholder=\"Masukan Harga\"\r\n                                value={x.harga}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Quality Fisik\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                type=\"text\"\r\n                                name=\"qty_fisik\"\r\n                                placeholder=\"Masukan Quality Fidik\"\r\n                                value={x.qty_fisik}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Keterangan Fisik\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                type=\"text\"\r\n                                name=\"keterangan_fisik\"\r\n                                placeholder=\"Masukan Keterangna Fisik\"\r\n                                value={x.keterangan_fisik}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <div className=\"btn-box\">\r\n                              {inputList.length !== 1 && (\r\n                                <Button\r\n                                  color=\"default\"\r\n                                  onClick={() => handleRemoveClick(i)}\r\n                                >\r\n                                  Remove\r\n                                </Button>\r\n                              )}\r\n                              {inputList.length - 1 === i && (\r\n                                <Button\r\n                                  color=\"default\"\r\n                                  onClick={handleAddClick}\r\n                                >\r\n                                  Add\r\n                                </Button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </CardBody>\r\n                    <CardFooter>\r\n                      {!isLoading && (\r\n                        <Button color=\"primary\" type=\"submit\">\r\n                          Simpan\r\n                        </Button>\r\n                      )}\r\n                      {isLoading && (\r\n                        <Button color=\"primary\" disabled>\r\n                          <i className=\"fas fa-spinner fa-spin\"></i>\r\n                          {\"\"}\r\n                          loading...\r\n                        </Button>\r\n                      )}\r\n                      <Link className=\"btn btn-info\" to=\"/admin/sales-order\">\r\n                        Kembali\r\n                      </Link>\r\n                    </CardFooter>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            ) : (\r\n              <Card>\r\n                <CardBody>\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <CardHeader>\r\n                      <h3>Edit Transfer Stock</h3>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Username TS\r\n                        </Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"text\"\r\n                          name=\"ts\"\r\n                          placeholder=\"Masukan Username TS\"\r\n                          value={usernameTs}\r\n                          onChange={(e) => {\r\n                            setUsernameTs(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan TS\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descSo\"\r\n                          placeholder=\"Masukan Keterangan TS\"\r\n                          value={descriptionTs}\r\n                          onChange={(e) => {\r\n                            setDescriptionTs(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Username Kurir\r\n                        </Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"text\"\r\n                          name=\"kurir\"\r\n                          placeholder=\"Masukan Username Kurir\"\r\n                          value={usernameKurir}\r\n                          onChange={(e) => {\r\n                            setUsernameKurir(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Username Gudang\r\n                        </Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"text\"\r\n                          name=\"usernameGudang\"\r\n                          placeholder=\"Masukan Username Gudang\"\r\n                          value={usernammeGudang}\r\n                          onChange={(e) => {\r\n                            setUsernameGudang(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan Gudang\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descGudang\"\r\n                          placeholder=\"Masukan Keterangan Gudang\"\r\n                          value={descriptionGudang}\r\n                          onChange={(e) => {\r\n                            setDescriptionGudang(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Username Validator\r\n                        </Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"text\"\r\n                          name=\"usernameValidation\"\r\n                          placeholder=\"Masukan Username Validator\"\r\n                          value={usernameValidator}\r\n                          onChange={(e) => {\r\n                            setUsernameValidator(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan Validator\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descValidator\"\r\n                          placeholder=\"Masukan Keterangan Validator\"\r\n                          value={descriptionValidator}\r\n                          onChange={(e) => {\r\n                            setDescriptionValidator(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          TS Type\r\n                        </Label>\r\n                        <Input\r\n                          name=\"tsType\"\r\n                          type=\"select\"\r\n                          value={tsType}\r\n                          onChange={(e) => {\r\n                            setTsType(e.target.value);\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Pilih Payment Method</option>\r\n                          <option value={1}>Konvensional</option>\r\n                          <option value={2}>Indent</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Clear\r\n                        </Label>\r\n                        <Row>\r\n                          <Col>\r\n                            <div style={{ display: \"flex\" }}>\r\n                              <div className=\"custom-control custom-radio mb-3\">\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio5\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={1}\r\n                                  checked={clear === 1}\r\n                                  onChange={() => setClear(1)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio5\"\r\n                                >\r\n                                  Disetujui\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio6\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={2}\r\n                                  checked={clear === 2}\r\n                                  onChange={() => setClear(2)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio6\"\r\n                                >\r\n                                  Ditolak\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio7\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={3}\r\n                                  checked={clear === 3}\r\n                                  onChange={() => setClear(3)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio7\"\r\n                                >\r\n                                  Dibatalkan\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Status Barang\r\n                        </Label>\r\n                        <Row>\r\n                          <Col>\r\n                            <div style={{ display: \"flex\" }}>\r\n                              <div className=\"custom-control custom-radio mb-3\">\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio11\"\r\n                                  name=\"custom-radio-4\"\r\n                                  type=\"radio\"\r\n                                  value={1}\r\n                                  checked={statusBarang === 1}\r\n                                  onChange={() => setStatusBarang(1)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio11\"\r\n                                >\r\n                                  Diterima\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio12\"\r\n                                  name=\"custom-radio-4\"\r\n                                  type=\"radio\"\r\n                                  value={2}\r\n                                  checked={statusBarang === 2}\r\n                                  onChange={() => setStatusBarang(2)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio12\"\r\n                                >\r\n                                  Ditolak\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio13\"\r\n                                  name=\"custom-radio-4\"\r\n                                  type=\"radio\"\r\n                                  value={3}\r\n                                  checked={statusBarang === 3}\r\n                                  onChange={() => setStatusBarang(3)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio13\"\r\n                                >\r\n                                  Dibatalkan\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </FormGroup>\r\n                      {inputList.map((x, i) => {\r\n                        return (\r\n                          <div className=\"box\" key={i}>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Item\r\n                              </Label>\r\n                              <Input\r\n                                name=\"item_id\"\r\n                                type=\"select\"\r\n                                value={x.item_id}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Item</option>\r\n                                {items.map((item, key) => {\r\n                                  return (\r\n                                    <option key={key} value={item.id}>\r\n                                      {item.item_name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Quantity\r\n                              </Label>\r\n                              <Input\r\n                                type=\"number\"\r\n                                name=\"qty\"\r\n                                placeholder=\"Masukan Quantity\"\r\n                                value={x.qty}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Quantity Fisik\r\n                              </Label>\r\n                              <Input\r\n                                type=\"number\"\r\n                                name=\"qty_fisik\"\r\n                                placeholder=\"Masukan Quantity Fisik\"\r\n                                value={x.qty_fisik}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Keterangan Fisik\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"keterangan_fisik\"\r\n                                placeholder=\"Masukan Keterangna Fisik\"\r\n                                value={x.keterangan_fisik}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <div className=\"btn-box\">\r\n                              {inputList.length !== 1 && (\r\n                                <Button\r\n                                  color=\"default\"\r\n                                  onClick={() => handleRemoveClick(i)}\r\n                                >\r\n                                  Remove\r\n                                </Button>\r\n                              )}\r\n                              {inputList.length - 1 === i && (\r\n                                <Button\r\n                                  color=\"default\"\r\n                                  onClick={handleAddClick}\r\n                                >\r\n                                  Add\r\n                                </Button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </CardBody>\r\n                    <CardFooter>\r\n                      {!isLoading && (\r\n                        <Button color=\"primary\" type=\"submit\">\r\n                          Simpan\r\n                        </Button>\r\n                      )}\r\n                      {isLoading && (\r\n                        <Button color=\"primary\" disabled>\r\n                          <i className=\"fas fa-spinner fa-spin\"></i>\r\n                          {\"\"}\r\n                          loading...\r\n                        </Button>\r\n                      )}\r\n                      <Link className=\"btn btn-info\" to=\"/admin/transfer-stock\">\r\n                        Kembali\r\n                      </Link>\r\n                    </CardFooter>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function CreateTransferStock() {\r\n  const token = localStorage.token;\r\n  const username = localStorage.username;\r\n  const warehouse = localStorage.warehouse;\r\n  const role = localStorage.authority;\r\n  const namaDepartment = localStorage.department;\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [usernameTs, setUsernameTs] = useState(username);\r\n  const [usernameKurir, setUsernameKurir] = useState(username);\r\n  const [usernammeGudang, setUsernameGudang] = useState(username);\r\n  const [usernameValidator, setUsernameValidator] = useState(username);\r\n  const [descriptionValidator, setDescriptionValidator] = useState(\"\");\r\n  const [descriptionTs, setDescriptionTs] = useState(\"\");\r\n  const [descriptionGudang, setDescriptionGudang] = useState(\"\");\r\n  const [statusBarang, setStatusBarang] = useState(0);\r\n  const [clear, setClear] = useState(0);\r\n  const [tsType, setTsType] = useState(\"\");\r\n  const [typeItemId, setTypeItemId] = useState(1);\r\n  const [approve, setApprove] = useState(0);\r\n\r\n  const [errKeterangan, setErrKeteranganTs] = useState(\"\");\r\n  const [errKetValidator, setErrKetValidator] = useState(\"\");\r\n  const [errKetGudang, setErrKeGudang] = useState(\"\");\r\n  const [errTsType, setErrTsType] = useState(\"\");\r\n  const [errClear, setErrClear] = useState(\"\");\r\n  const [errStatusBarang, setErrStatusBarang] = useState(\"\");\r\n\r\n  const [items, setItems] = useState([]);\r\n\r\n  const [inputList, setInputList] = useState([\r\n    {\r\n      item_id: \"\",\r\n      qty: \"\",\r\n      qty_fisik: \"\",\r\n      keterangan_fisik: \"\",\r\n    },\r\n  ]);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (descriptionTs === \"\") {\r\n      setErrKeteranganTs(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (descriptionValidator === \"\") {\r\n      setErrKetValidator(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (descriptionGudang === \"\") {\r\n      setErrKeGudang(\"invalid\");\r\n      error = true;\r\n    }\r\n    if (tsType === \"\") {\r\n      setErrTsType(\"invalid\");\r\n      error = true;\r\n    }\r\n\r\n    if (clear === 0) {\r\n      setErrClear(\"invalid\");\r\n      error = true;\r\n    }\r\n\r\n    if (statusBarang === 0) {\r\n      setErrStatusBarang(\"invalid\");\r\n      error = true;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getItem();\r\n  }, [typeItemId, setTypeItemId]);\r\n\r\n  const getItem = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/items/type`,\r\n        { params: { warehouse_id: warehouse, type: typeItemId } },\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        setItems(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  // handle input change\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...inputList];\r\n    list[index][name] = name === \"keterangan_fisik\" ? value : parseInt(value);\r\n    setInputList(list);\r\n  };\r\n\r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...inputList];\r\n    list.splice(index, 1);\r\n    setInputList(list);\r\n  };\r\n\r\n  // handle click event of the Add button\r\n  const handleAddClick = () => {\r\n    setInputList([\r\n      ...inputList,\r\n      {\r\n        item_id: \"\",\r\n        qty: \"\",\r\n        qty_fisik: \"\",\r\n        keterangan_fisik: \"\",\r\n      },\r\n    ]);\r\n  };\r\n\r\n  function CreateData() {\r\n    setLoading(true);\r\n    let data = {\r\n      warehouse_id: parseInt(warehouse),\r\n      username_ts: usernameTs,\r\n      username_manager: \"\",\r\n      manager_approval: \"\",\r\n      keterangan_manager: \"\",\r\n      username_gudang: usernammeGudang,\r\n      status_barang: parseInt(statusBarang),\r\n      keterangan_gudang: descriptionGudang,\r\n      username_kurir: usernameKurir,\r\n      username_validator: usernameValidator,\r\n      clear: parseInt(clear),\r\n      keterangan_validator: descriptionValidator,\r\n      active_flag: 1,\r\n      ts_type: tsType,\r\n      keterangan_ts: descriptionTs,\r\n      items: inputList,\r\n    };\r\n\r\n    console.log(inputList.slice(1, inputList.length));\r\n    fetch(`${process.env.REACT_APP_API_BASE_URL}/transfer-stok/save`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        history.push(\"/admin/transfer-stock\");\r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      CreateData();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Daftar Transfer Stock\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            {role === \"ROLE_KARYAWAN\" && namaDepartment === \"Gudang\" ? (\r\n              <Card>\r\n                <CardBody>\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <CardHeader>\r\n                      <h3>Daftar Transfer Stock</h3>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Username TS\r\n                        </Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"text\"\r\n                          name=\"ts\"\r\n                          placeholder=\"Masukan Username TS\"\r\n                          value={usernameTs}\r\n                          onChange={(e) => {\r\n                            setUsernameTs(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan TS\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descSo\"\r\n                          placeholder=\"Masukan Keterangan TS\"\r\n                          value={descriptionTs}\r\n                          invalid={errKeterangan === \"invalid\"}\r\n                          onChange={(e) => {\r\n                            setDescriptionTs(e.target.value);\r\n                            setErrKeteranganTs(\"\");\r\n                          }}\r\n                        />\r\n                        <FormFeedback>\r\n                          Keterangan TS Tidak boleh kosong\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          TS Type\r\n                        </Label>\r\n                        <Input\r\n                          name=\"paymentMethod\"\r\n                          type=\"select\"\r\n                          value={tsType}\r\n                          onChange={(e) => {\r\n                            setTsType(e.target.value);\r\n                            setErrTsType(\"\");\r\n                          }}\r\n                          invalid={errTsType === \"invalid\"}\r\n                        >\r\n                          <option value=\"\">Pilih Payment Method</option>\r\n                          <option value={1}>Konvensional</option>\r\n                          <option value={2}>Indent</option>\r\n                        </Input>\r\n                        <FormFeedback>TS Type tidak boleh kosong</FormFeedback>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Approve\r\n                        </Label>\r\n                        <Row>\r\n                          <Col>\r\n                            <div style={{ display: \"flex\" }}>\r\n                              <div className=\"custom-control custom-radio mb-3\">\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio8\"\r\n                                  name=\"custom-radio-3\"\r\n                                  type=\"radio\"\r\n                                  value={1}\r\n                                  checked={approve === 1}\r\n                                  onChange={() => setApprove(1)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio8\"\r\n                                >\r\n                                  Disetujui\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio9\"\r\n                                  name=\"custom-radio-3\"\r\n                                  type=\"radio\"\r\n                                  value={2}\r\n                                  checked={approve === 2}\r\n                                  onChange={() => setApprove(2)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio9\"\r\n                                >\r\n                                  Ditolak\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio10\"\r\n                                  name=\"custom-radio-3\"\r\n                                  type=\"radio\"\r\n                                  value={3}\r\n                                  checked={approve === 3}\r\n                                  onChange={() => setApprove(3)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio10\"\r\n                                >\r\n                                  Dibatalkan\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </FormGroup>\r\n                      {inputList.map((x, i) => {\r\n                        return (\r\n                          <div className=\"box\" key={i}>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Item\r\n                              </Label>\r\n                              <Input\r\n                                name=\"item_id\"\r\n                                type=\"select\"\r\n                                value={x.item_id}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Item</option>\r\n                                {items.map((item, key) => {\r\n                                  return (\r\n                                    <option key={key} value={item.id}>\r\n                                      {item.item_name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Quantity\r\n                              </Label>\r\n                              <Input\r\n                                type=\"number\"\r\n                                name=\"qty\"\r\n                                placeholder=\"Masukan Quantity\"\r\n                                value={x.qty}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Quantity Fisik\r\n                              </Label>\r\n                              <Input\r\n                                type=\"number\"\r\n                                name=\"qty_fisik\"\r\n                                placeholder=\"Masukan Quantity Fisik\"\r\n                                value={x.qty_fisik}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Keterangan Fisik\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"keterangan_fisik\"\r\n                                placeholder=\"Masukan Keterangna Fisik\"\r\n                                value={x.keterangan_fisik}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <div className=\"btn-box\">\r\n                              {inputList.length !== 1 && (\r\n                                <Button\r\n                                  color=\"default\"\r\n                                  onClick={() => handleRemoveClick(i)}\r\n                                >\r\n                                  Remove\r\n                                </Button>\r\n                              )}\r\n                              {inputList.length - 1 === i && (\r\n                                <Button\r\n                                  color=\"default\"\r\n                                  onClick={handleAddClick}\r\n                                >\r\n                                  Add\r\n                                </Button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </CardBody>\r\n                    <CardFooter>\r\n                      {!isLoading && (\r\n                        <Button color=\"primary\" type=\"submit\">\r\n                          Simpan\r\n                        </Button>\r\n                      )}\r\n                      {isLoading && (\r\n                        <Button color=\"primary\" disabled>\r\n                          <i className=\"fas fa-spinner fa-spin\"></i>\r\n                          {\"\"}\r\n                          loading...\r\n                        </Button>\r\n                      )}\r\n                      <Link className=\"btn btn-info\" to=\"/admin/transfer-stock\">\r\n                        Kembali\r\n                      </Link>\r\n                    </CardFooter>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            ) : (\r\n              <Card>\r\n                <CardBody>\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <CardHeader>\r\n                      <h3>Daftar Transfer Stock</h3>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Username TS\r\n                        </Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"text\"\r\n                          name=\"ts\"\r\n                          placeholder=\"Masukan Username TS\"\r\n                          value={usernameTs}\r\n                          onChange={(e) => {\r\n                            setUsernameTs(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan TS\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descSo\"\r\n                          placeholder=\"Masukan Keterangan TS\"\r\n                          value={descriptionTs}\r\n                          invalid={errKeterangan === \"invalid\"}\r\n                          onChange={(e) => {\r\n                            setDescriptionTs(e.target.value);\r\n                            setErrKeteranganTs(\"\");\r\n                          }}\r\n                        />\r\n                        <FormFeedback>\r\n                          Keterangan TS Tidak boleh kosong\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Username Kurir\r\n                        </Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"text\"\r\n                          name=\"kurir\"\r\n                          placeholder=\"Masukan Username Kurir\"\r\n                          value={usernameKurir}\r\n                          onChange={(e) => {\r\n                            setUsernameKurir(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Username Validator\r\n                        </Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"text\"\r\n                          name=\"usernameValidation\"\r\n                          placeholder=\"Masukan Username Validator\"\r\n                          value={usernameValidator}\r\n                          onChange={(e) => {\r\n                            setUsernameValidator(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan Validator\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descValidator\"\r\n                          placeholder=\"Masukan Keterangan Validator\"\r\n                          value={descriptionValidator}\r\n                          invalid={errKetValidator === \"invalid\"}\r\n                          onChange={(e) => {\r\n                            setDescriptionValidator(e.target.value);\r\n                            setErrKetValidator(\"\");\r\n                          }}\r\n                        />\r\n                        <FormFeedback>\r\n                          Keterangan Validator Tidak Boleh Kosong\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Username Gudang\r\n                        </Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"text\"\r\n                          name=\"usernameGudang\"\r\n                          placeholder=\"Masukan Username Gudang\"\r\n                          value={usernammeGudang}\r\n                          onChange={(e) => {\r\n                            setUsernameGudang(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan Gudang\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descGudang\"\r\n                          placeholder=\"Masukan Keterangan Gudang\"\r\n                          value={descriptionGudang}\r\n                          invalid={errKetGudang === \"invalid\"}\r\n                          onChange={(e) => {\r\n                            setDescriptionGudang(e.target.value);\r\n                            setErrKeGudang(\"\");\r\n                          }}\r\n                        />\r\n                        <FormFeedback>\r\n                          Keterangan Gudang tidak Boleh Kosong\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          TS Type\r\n                        </Label>\r\n                        <Input\r\n                          name=\"paymentMethod\"\r\n                          type=\"select\"\r\n                          value={tsType}\r\n                          onChange={(e) => {\r\n                            setTsType(e.target.value);\r\n                            setErrTsType(\"\");\r\n                          }}\r\n                          invalid={errTsType === \"invalid\"}\r\n                        >\r\n                          <option value=\"\">Pilih Payment Method</option>\r\n                          <option value={1}>Konvensional</option>\r\n                          <option value={2}>Indent</option>\r\n                        </Input>\r\n                        <FormFeedback>TS Type tidak boleh kosong</FormFeedback>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Clear\r\n                        </Label>\r\n                        <Row>\r\n                          <Col>\r\n                            <div style={{ display: \"flex\" }}>\r\n                              <div className=\"custom-control custom-radio mb-3\">\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio5\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={1}\r\n                                  checked={clear === 1}\r\n                                  onChange={() => {\r\n                                    setClear(1);\r\n                                    setErrClear(\"\");\r\n                                  }}\r\n                                  invalid={errClear === \"invalid\"}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio5\"\r\n                                >\r\n                                  Disetujui\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio6\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={2}\r\n                                  checked={clear === 2}\r\n                                  onChange={() => {\r\n                                    setClear(2);\r\n                                    setErrClear(\"\");\r\n                                  }}\r\n                                  invalid={errClear === \"invalid\"}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio6\"\r\n                                >\r\n                                  Ditolak\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio7\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={3}\r\n                                  checked={clear === 3}\r\n                                  onChange={() => {\r\n                                    setClear(3);\r\n                                    setErrClear(\"\");\r\n                                  }}\r\n                                  invalid={errClear === \"invalid\"}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio7\"\r\n                                >\r\n                                  Dibatalkan\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Status Barang\r\n                        </Label>\r\n                        <Row>\r\n                          <Col>\r\n                            <div style={{ display: \"flex\" }}>\r\n                              <div className=\"custom-control custom-radio mb-3\">\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio11\"\r\n                                  name=\"custom-radio-4\"\r\n                                  type=\"radio\"\r\n                                  value={1}\r\n                                  checked={statusBarang === 1}\r\n                                  invalid={errStatusBarang === \"invalid\"}\r\n                                  onChange={() => {\r\n                                    setStatusBarang(1);\r\n                                    setErrStatusBarang(\"\");\r\n                                  }}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio11\"\r\n                                >\r\n                                  Diterima\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio12\"\r\n                                  name=\"custom-radio-4\"\r\n                                  type=\"radio\"\r\n                                  value={2}\r\n                                  checked={statusBarang === 2}\r\n                                  invalid={errStatusBarang === \"invalid\"}\r\n                                  onChange={() => {\r\n                                    setStatusBarang(2);\r\n                                    setErrStatusBarang(\"\");\r\n                                  }}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio12\"\r\n                                >\r\n                                  Ditolak\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio13\"\r\n                                  name=\"custom-radio-4\"\r\n                                  type=\"radio\"\r\n                                  value={3}\r\n                                  checked={statusBarang === 3}\r\n                                  invalid={errStatusBarang === \"invalid\"}\r\n                                  onChange={() => {\r\n                                    setStatusBarang(3);\r\n                                    setErrStatusBarang(\"\");\r\n                                  }}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio13\"\r\n                                >\r\n                                  Dibatalkan\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </FormGroup>\r\n                      {inputList.map((x, i) => {\r\n                        return (\r\n                          <div className=\"box\" key={i}>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Item\r\n                              </Label>\r\n                              <Input\r\n                                name=\"item_id\"\r\n                                type=\"select\"\r\n                                value={x.item_id}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Item</option>\r\n                                {items.map((item, key) => {\r\n                                  return (\r\n                                    <option key={key} value={item.id}>\r\n                                      {item.item_name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Quantity\r\n                              </Label>\r\n                              <Input\r\n                                type=\"number\"\r\n                                name=\"qty\"\r\n                                placeholder=\"Masukan Quantity\"\r\n                                value={x.qty}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Quantity Fisik\r\n                              </Label>\r\n                              <Input\r\n                                type=\"number\"\r\n                                name=\"qty_fisik\"\r\n                                placeholder=\"Masukan Quantity Fisik\"\r\n                                value={x.qty_fisik}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Keterangan Fisik\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"keterangan_fisik\"\r\n                                placeholder=\"Masukan Keterangna Fisik\"\r\n                                value={x.keterangan_fisik}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <div className=\"btn-box\">\r\n                              {inputList.length !== 1 && (\r\n                                <Button\r\n                                  color=\"default\"\r\n                                  onClick={() => handleRemoveClick(i)}\r\n                                >\r\n                                  Remove\r\n                                </Button>\r\n                              )}\r\n                              {inputList.length - 1 === i && (\r\n                                <Button\r\n                                  color=\"default\"\r\n                                  onClick={handleAddClick}\r\n                                >\r\n                                  Add\r\n                                </Button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </CardBody>\r\n                    <CardFooter>\r\n                      {!isLoading && (\r\n                        <Button color=\"primary\" type=\"submit\">\r\n                          Simpan\r\n                        </Button>\r\n                      )}\r\n                      {isLoading && (\r\n                        <Button color=\"primary\" disabled>\r\n                          <i className=\"fas fa-spinner fa-spin\"></i>\r\n                          {\"\"}\r\n                          loading...\r\n                        </Button>\r\n                      )}\r\n                      <Link className=\"btn btn-info\" to=\"/admin/transfer-stock\">\r\n                        Kembali\r\n                      </Link>\r\n                    </CardFooter>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  TabContent,\r\n  TabPane\r\n} from \"reactstrap\";\r\n\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport classnames from 'classnames';\r\n\r\nimport PermintaanBarang from \"./PermintaanBarang/Index.js\";\r\nimport ValidasiPermintaanBarang from \"./ValidasiPermintaanBarang/Index.js\";\r\n\r\nexport default function Item() {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Permintaan Barang\" parentName=\"PO\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Nav tabs>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '1' })}\r\n                      onClick={() => { toggle('1'); }}\r\n                    >\r\n                      Permintaan Barang\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '2' })}\r\n                      onClick={() => { toggle('2'); }}\r\n                    >\r\n                      Validasi Permintaan Barang\r\n                    </NavLink>\r\n                  </NavItem>\r\n                </Nav>\r\n                <TabContent activeTab={activeTab}>\r\n                  <TabPane tabId=\"1\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <PermintaanBarang />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                  <TabPane tabId=\"2\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <ValidasiPermintaanBarang />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                </TabContent>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Col,\r\n  CardHeader,\r\n  Container,\r\n  CardFooter,\r\n  Button,\r\n  Form,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\n\r\n\r\nexport default function Edit(props) {\r\n  const username = localStorage.username;\r\n  const token = localStorage.token;\r\n  const warehouse = localStorage.warehouse;\r\n  \r\n  let history = useHistory();\r\n  const [usernamePo, setUsernamePo] = useState(\"\");\r\n  \r\n  const [isLoading, setLoading] = useState(false);\r\n  const [person, setPerson] = useState(\"\");\r\n  const [persons, setPersons] = useState([]);\r\n  const [ordercode,setOrderCode]= useState(\"\");\r\n  const [jangkawaktu,setJangkaWaktu] = useState([]);\r\n  const [keteranganpayment,setKeteranganPayment] = useState(\"\");\r\n  const [paymentmethod,setPaymentMethod] = useState(\"\");\r\n  const [keteranganpo,setKeteranganPo] = useState(\"\");\r\n  const [termin,setTermin] = useState([]);\r\n  const [durasitempo,setDurasiTempo] = useState(\"\");\r\n  const [poType, setPoType] = useState(\"\");\r\n  const [approve, setApprove] = useState([]);\r\n  const [adminapprove,setAdminApprove] = useState([]);\r\n  const [clear,setValidatorPo] = useState([]);\r\n  const [usernameadmin,setUsernameAdmin] = useState(\"\");\r\n  const [adminvalidator,setAdminValidator] = useState(\"\");\r\n  const [,] = useState(\"\");\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  \r\n  useEffect(() => {\r\n    getById();\r\n      }, []);\r\n\r\n  const getById = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/purchase-order/get/${props.match.params.id}`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        getPo(data.data.response_data.id);\r\n        setOrderCode(data.data.response_data.order_code);\r\n        setUsernamePo(data.data.response_data.username_po);\r\n        setUsernameAdmin(data.data.response_data.username_admin)\r\n        setPaymentMethod(data.data.response_data.payment_method);\r\n        setKeteranganPo(data.data.response_data.keterangan_po);\r\n        setJangkaWaktu(data.data.response_data.jangka_waktu);\r\n        setKeteranganPayment(data.data.response_data.keterangan_payment );\r\n        setTermin(data.data.response_data.is_cicil);\r\n        setDurasiTempo(data.data.response_data.durasi_po);\r\n        setPerson(data.data.response_data.person);\r\n        setPoType(data.data.response_data.po_type);\r\n        setDurasiTempo(data.data.response_data.durasi_po);\r\n        setPerson(data.data.response_data.person);\r\n        setPoType(data.data.response_data.po_type);\r\n        setApprove(data.data.response_data.approve);\r\n        setAdminApprove(data.data.response_data.admin_approval);\r\n        setValidatorPo(data.data.response_data.clear);\r\n        setAdminValidator(data.data.response_data.username_validator);\r\n\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getPo = (poId) => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const data = {\r\n      po_id: parseInt(poId),\r\n    };\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/purchase-order/po-items`,\r\n        data,\r\n        {\r\n          headers,\r\n        }\r\n      )\r\n      .then((data) => {\r\n        getPerson();\r\n\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getPerson = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/person/list`, { headers })\r\n      .then((data) => {\r\n        setPersons(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, uomCode, ordercode);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort,  uomCode, ordercode)\r\n    }\r\n  }\r\n  function EditData() {\r\n    setLoading(true);\r\n    let data = {\r\n    warehouse_id : parseInt(warehouse),\r\n    username_po : usernamePo,\r\n    payment_method : paymentmethod,\r\n    jangka_waktu : jangkawaktu,\r\n    keterangan_payment : keteranganpayment,\r\n    po_type: poType,\r\n    durasi_po: durasitempo,\r\n    person: person,\r\n    is_cicil: parseInt(termin),\r\n    approve: parseInt(approve),\r\n    keterangan_po: keteranganpo,\r\n    username_admin: usernameadmin,\r\n    admin_approval: parseInt(adminapprove),\r\n    keterangan_admin: \"\",\r\n    username_validator : username,\r\n    clear : parseInt(clear),\r\n    keterangan_validator : \"\",\r\n    username_gudang : \"\",\r\n    status_barang : 0,\r\n    keterangan_gudang : \"\",\r\n    username_kurir : \"\",\r\n    person:1,\r\n    active_flag : 1,\r\n    po_type : 1,\r\n    items : [],\r\n    };\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/purchase-order/update/${props.match.params.id}`,\r\n        data,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        history.push(\"/admin/po\");\r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    {\r\n      EditData();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div> \r\n      <SimpleHeader name=\"Validasi Pimpinan PO\" parentName=\"PO\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Card>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <CardBody>\r\n                    <Row md=\"12\">\r\n                        <Col md=\"6\">\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Kode PO\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                              disabled\r\n                                type=\"text\"\r\n                                name=\"desc\"\r\n                                placeholder=\"Masukan Keterangan PO\"\r\n                                value={ordercode}\r\n                                onChange={(e) => {\r\n                                  setOrderCode(e.target.value);\r\n                                }}\r\n                              />\r\n                              \r\n                            </Col>\r\n                          </FormGroup>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                                type=\"hidden\"\r\n                                name=\"desc\"\r\n                                placeholder=\"Masukan Keterangan PO\"\r\n                                value={usernamePo}\r\n                                onChange={(e) => {\r\n                                  setUsernamePo(e.target.value);\r\n                                 \r\n                                }}\r\n                              />\r\n                              \r\n                            </Col>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                                type=\"hidden\"\r\n                                name=\"desc\"\r\n                                placeholder=\"Masukan Keterangan PO\"\r\n                                value={adminvalidator}\r\n                                onChange={(e) => {\r\n                                  setadminvalidator(e.target.value);\r\n                                 \r\n                                }}\r\n                              />\r\n                              \r\n                            </Col>\r\n                          \r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                                Nama Supplier\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                                name=\"kategory\"\r\n                                type=\"select\"\r\n                                value={person}\r\n                                onChange={(e) => {\r\n                                  setPerson(e.target.value);\r\n                                }}\r\n                              >\r\n                                {persons.map((person, key) => {\r\n                                    return (\r\n                                      <option key={key} value={person.id}>\r\n                                        {person.person_name}\r\n                                      </option>\r\n                                    );\r\n                                  })}\r\n                              </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              keterangan PO\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                              disabled\r\n                                type=\"text\"\r\n                                name=\"desc\"\r\n                                placeholder=\"Masukan Keterangan PO\"\r\n                                value={keteranganpo}\r\n                                onChange={(e) => {\r\n                                  setKeteranganPo(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              keterangan Payment\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                              disabled\r\n                                type=\"text\"\r\n                                name=\"desc\"\r\n                                placeholder=\"Masukan Keterangan PO\"\r\n                                value={keteranganpayment}\r\n                                onChange={(e) => {\r\n                                  setKeteranganPayment(e.target.value);\r\n                                 \r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Tipe PO\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                                name=\"paymentMethod\"\r\n                                type=\"select\"\r\n                                value={poType}\r\n                                onChange={(e) => {\r\n                                  setPoType(e.target.value);\r\n                                }}\r\n                              >\r\n                                <option value=\"\">Pilih Payment Method</option>\r\n                                <option value={1}>Ready</option>\r\n                                <option value={2}>Indent</option>\r\n                              </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Durasi Tempo\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                                type=\"text\"\r\n                                name=\"barcode\"\r\n                                placeholder=\"Masukan Durasi Tempo\"\r\n                                value={durasitempo}\r\n                                onChange={(e) => {\r\n                                  setDurasiTempo(e.target.value);\r\n                                  \r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Jangka Waktu\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                                type=\"number\"\r\n                                name=\"jangkawaktu\"\r\n                                placeholder=\"Masukan Jangka Waktu\"\r\n                                value={jangkawaktu}\r\n                                onChange={(e) => {\r\n                                  setJangkaWaktu(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Termin\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                            name=\"satuan\"\r\n                            type=\"select\"\r\n                            value={termin}\r\n                            onChange={(e) => {\r\n                              setTermin(e.target.value);\r\n                            }}\r\n                          >\r\n                            <option value={0}>Pilih Cicilan</option>\r\n                            <option value={1}>Lunas</option>\r\n                            <option value={2}>Belum Lunas</option>\r\n                            \r\n                              </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Metode Pembayaran\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                          disabled\r\n                          name=\"paymentMethod\"\r\n                          type=\"select\"\r\n                          value={paymentmethod}\r\n                          onChange={(e) => {\r\n                            setPaymentMethod(e.target.value);\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Pilih Payment Method</option>\r\n                          <option value={1}>Tunai</option>\r\n                          <option value={2}>Tempo/Termin/Utang</option>\r\n                        </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                            <Col sm={6}>\r\n                              <div style={{ display: \"none\" }}>\r\n                                <div className=\"custom-control custom-radio mb-3\">\r\n                                  <Input\r\n                                    className=\"custom-control-input\"\r\n                                    id=\"customRadio8\"\r\n                                    name=\"custom-radio-2\"\r\n                                    type=\"radio\"\r\n                                    value={1}\r\n                                    checked={approve === 1}\r\n                                    onChange={() => setApprove(1)}\r\n                                  />\r\n                                  <Label\r\n                                    className=\"custom-control-label\"\r\n                                    htmlFor=\"customRadio8\"\r\n                                  >\r\n                                    Disetujui\r\n                                  </Label>\r\n                                </div>\r\n                                <div\r\n                                  className=\"custom-control custom-radio mb-3\"\r\n                                  style={{ marginLeft: \"20px\" }}\r\n                                >\r\n                                  <Input\r\n                                    className=\"custom-control-input\"\r\n                                    id=\"customRadio9\"\r\n                                    name=\"custom-radio-2\"\r\n                                    type=\"radio\"\r\n                                    value={2}\r\n                                    checked={approve === 2}\r\n                                    onChange={() => setApprove(2)}\r\n                                  />\r\n                                  <Label\r\n                                    className=\"custom-control-label\"\r\n                                    htmlFor=\"customRadio9\"\r\n                                  >\r\n                                    Ditolak\r\n                                  </Label>\r\n                                </div>\r\n                                <div\r\n                                  className=\"custom-control custom-radio mb-3\"\r\n                                  style={{ marginLeft: \"20px\" }}\r\n                                >\r\n                                  <Input\r\n                                    className=\"custom-control-input\"\r\n                                    id=\"customRadio10\"\r\n                                    name=\"custom-radio-2\"\r\n                                    type=\"radio\"\r\n                                    value={3}\r\n                                    checked={approve === 3}\r\n                                    onChange={() => setApprove(3)}\r\n                                  />\r\n                                  <Label\r\n                                    className=\"custom-control-label\"\r\n                                    htmlFor=\"customRadio10\"\r\n                                  >\r\n                                    Dibatalkan\r\n                                  </Label>\r\n                                </div>\r\n                              </div>\r\n                            </Col>\r\n                            <Col sm={6}>\r\n                              <div style={{ display: \"none\" }}>\r\n                                <div className=\"custom-control custom-radio mb-3\">\r\n                                  <Input\r\n                                    className=\"custom-control-input\"\r\n                                    id=\"customRadio11\"\r\n                                    name=\"custom-radio-3\"\r\n                                    type=\"radio\"\r\n                                    value={1}\r\n                                    checked={adminapprove === 1}\r\n                                    onChange={() => setAdminApprove(1)}\r\n                                  />\r\n                                  <Label\r\n                                    className=\"custom-control-label\"\r\n                                    htmlFor=\"customRadio11\"\r\n                                  >\r\n                                    Disetujui\r\n                                  </Label>\r\n                                </div>\r\n                                <div\r\n                                  className=\"custom-control custom-radio mb-3\"\r\n                                  style={{ marginLeft: \"20px\" }}\r\n                                >\r\n                                  <Input\r\n                                    className=\"custom-control-input\"\r\n                                    id=\"customRadio12\"\r\n                                    name=\"custom-radio-3\"\r\n                                    type=\"radio\"\r\n                                    value={2}\r\n                                    checked={adminapprove === 2}\r\n                                    onChange={() => setAdminApprove(2)}\r\n                                  />\r\n                                  <Label\r\n                                    className=\"custom-control-label\"\r\n                                    htmlFor=\"customRadio12\"\r\n                                  >\r\n                                    Ditolak\r\n                                  </Label>\r\n                                </div>\r\n                                <div\r\n                                  className=\"custom-control custom-radio mb-3\"\r\n                                  style={{ marginLeft: \"20px\" }}\r\n                                >\r\n                                  <Input\r\n                                    className=\"custom-control-input\"\r\n                                    id=\"customRadio13\"\r\n                                    name=\"custom-radio-3\"\r\n                                    type=\"radio\"\r\n                                    value={3}\r\n                                    checked={adminapprove === 3}\r\n                                    onChange={() => setAdminApprove(3)}\r\n                                  />\r\n                                  <Label\r\n                                    className=\"custom-control-label\"\r\n                                    htmlFor=\"customRadio13\"\r\n                                  >\r\n                                    Dibatalkan\r\n                                  </Label>\r\n                                </div>\r\n                              </div>\r\n                            </Col>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Approve\r\n                            </Label>\r\n                              <Col sm={6}>\r\n                                <div style={{ display: \"flex\" }}>\r\n                                  <div className=\"custom-control custom-radio mb-3\">\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio14\"\r\n                                      name=\"custom-radio-4\"\r\n                                      type=\"radio\"\r\n                                      value={1}\r\n                                      checked={clear === 1}\r\n                                      onChange={() => setValidatorPo(1)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio14\"\r\n                                    >\r\n                                      Disetujui\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"custom-control custom-radio mb-3\"\r\n                                    style={{ marginLeft: \"20px\" }}\r\n                                  >\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio15\"\r\n                                      name=\"custom-radio-4\"\r\n                                      type=\"radio\"\r\n                                      value={2}\r\n                                      checked={clear === 2}\r\n                                      onChange={() => setValidatorPo(2)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio15\"\r\n                                    >\r\n                                      Ditolak\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"custom-control custom-radio mb-3\"\r\n                                    style={{ marginLeft: \"20px\" }}\r\n                                  >\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio16\"\r\n                                      name=\"custom-radio-4\"\r\n                                      type=\"radio\"\r\n                                      value={3}\r\n                                      checked={clear === 3}\r\n                                      onChange={() => setValidatorPo(3)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio16\"\r\n                                    >\r\n                                      Dibatalkan\r\n                                    </Label>\r\n                                  </div>\r\n                                </div>\r\n                              </Col>\r\n                          </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <ToolkitProvider\r\n                            rowNumber={rowIndex}\r\n                            data={\"\"}\r\n                            keyField=\"id\"\r\n                            columns={[\r\n                                {\r\n                                    dataField: \"no\",\r\n                                    text: \"No\",\r\n                                    sort: true,\r\n                                    page: 1,\r\n                                    formatter: (cell, row, index) => {\r\n                                      let currentRow = ++index;\r\n                                      return currentRow + rowIndex;\r\n                                    }\r\n                                  },\r\n                                  {\r\n                                    dataField: \"kode_Item\",\r\n                                    text: \"Kode Item\",\r\n                                    sort: true,\r\n                                  },\r\n                                  {\r\n                                    dataField: \"Qty\",\r\n                                    text: \"Qty \",\r\n                                    sort: true,\r\n                                  },\r\n                                  {\r\n                                    dataField: \"satuan\",\r\n                                    text: \"Satuan \",\r\n                                    sort: true,\r\n                                  },\r\n                                  {\r\n                                    dataField: \"Harga\",\r\n                                    text: \"Harga \",\r\n                                    sort: true,\r\n                                  },\r\n                            ]}\r\n                          >\r\n                            {(props) => (\r\n                              <div className=\"py-4 table-responsive\">\r\n                                <BootstrapTable\r\n                                  remote\r\n                                  {...props.baseProps}\r\n                                  bootstrap4={true}\r\n                                  bordered={false}\r\n                                  hover={true}\r\n                                  pagination={paginationFactory({ ...paginationOption })}\r\n                                  onTableChange={handleTableChange}\r\n                                />\r\n                              </div>\r\n                            )}\r\n                    </ToolkitProvider>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                  <Row md=\"12\">\r\n                    <Col md=\"9\">\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                    {!isLoading && (\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        Simpan\r\n                      </Button>\r\n                    )}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {\"\"}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/po\">\r\n                      Kembali\r\n                    </Link>\r\n                    </Col>\r\n                  </Row>\r\n                  </CardFooter>\r\n                  </Form>\r\n                </Card>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n        </Container>\r\n    </div>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Col,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\n\r\n\r\nexport default function Edit(props) {\r\n  \r\n  const token = localStorage.token;\r\n  const warehouse = localStorage.warehouse;\r\n  const username = localStorage.username;\r\n  const sub = localStorage.sub;\r\n  \r\n  let history = useHistory();\r\n  const [usernamePo, setUsernamePo] = useState(\"\");\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [person, setPerson] = useState(\"\");\r\n  const [persons, setPersons] = useState([]);\r\n  const [ordercode,setOrderCode]= useState(\"\");\r\n  const [jangkawaktu,setJangkaWaktu] = useState(\"\");\r\n  const [keteranganpayment,setKeteranganPayment] = useState(\"\");\r\n  const [paymentmethod,setPaymentMethod] = useState(\"\");\r\n  const [keteranganpo,setKeteranganPo] = useState(\"\");\r\n  const [termin,setTermin] = useState([]);\r\n  const [durasitempo,setDurasiTempo] = useState(\"\");\r\n  const [poType, setPoType] = useState(\"\");\r\n  const [approve, setApprove] = useState([]);\r\n  const [adminapprove,setAdminApprove] = useState([]);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n    getById();\r\n      }, []);\r\n\r\n  const getById = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/purchase-order/get/${props.match.params.id}`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        getPo(data.data.response_data.id);\r\n        setOrderCode(data.data.response_data.order_code);\r\n        setUsernamePo(data.data.response_data.username_po);\r\n        setPaymentMethod(data.data.response_data.payment_method);\r\n        setKeteranganPo(data.data.response_data.keterangan_po);\r\n        setUsernameAdmin(data.data.response_data.username_admin);\r\n        setJangkaWaktu(data.data.response_data.jangka_waktu);\r\n        setKeteranganPayment(data.data.response_data.keterangan_payment);\r\n        setTermin(data.data.response_data.is_cicil);\r\n        setDurasiTempo(data.data.response_data.durasi_po);\r\n        setPerson(data.data.response_data.person);\r\n        setPoType(data.data.response_data.po_type);\r\n        setDurasiTempo(data.data.response_data.durasi_po);\r\n        setPoType(data.data.response_data.po_type);\r\n        setApprove(data.data.response_data.approve);\r\n        setAdminApprove(data.data.response_data.admin_approval);\r\n        \r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getPo = (poId) => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const data = {\r\n      po_id: parseInt(poId),\r\n    };\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/purchase-order/po-items`,\r\n        data,\r\n        {\r\n          headers,\r\n        }\r\n      )\r\n      .then((data) => {\r\n        getPerson();\r\n\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getPerson = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/person/list`, { headers })\r\n      .then((data) => {\r\n        setPersons(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, uomCode, description);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort,  uomCode, description)\r\n    }\r\n  }\r\n  function EditData() {\r\n    setLoading(true);\r\n    let data = {\r\n\r\n    warehouse_id : parseInt(warehouse),\r\n    username_po : usernamePo,\r\n    payment_method : paymentmethod,\r\n    jangka_waktu ,\r\n    keterangan_payment : keteranganpayment,\r\n    po_type: poType,\r\n    durasi_po: durasitempo,\r\n    person: person,\r\n    is_cicil: parseInt(termin),\r\n    approve: parseInt(approve),\r\n    keterangan_po: keteranganpo,\r\n    username_admin: sub,\r\n    admin_approval: parseInt(adminapprove),\r\n    keterangan_admin: \"\",\r\n    username_validator : \"\",\r\n    clear : 0,\r\n    keterangan_validator : \"\",\r\n    username_gudang : \"\",\r\n    status_barang : 0,\r\n    keterangan_gudang : \"\",\r\n    username_kurir : \"\",\r\n    active_flag : 1,\r\n    po_type : 1,\r\n    items : [],\r\n    };\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/purchase-order/update/${props.match.params.id}`,\r\n        data,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        history.push(\"/admin/po\");\r\n        \r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    {\r\n      EditData();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div> \r\n      <SimpleHeader name=\"Validasi Admin Purchase Order\" parentName=\"PO\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardHeader>\r\n                  <h3>Validasi Admin Purchase Order</h3>\r\n              </CardHeader> \r\n              <CardBody>\r\n                <Card>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <CardBody>\r\n                    <Row md=\"12\">\r\n                        <Col md=\"6\">\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Kode PO\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                              disabled\r\n                                type=\"text\"\r\n                                name=\"desc\"\r\n                                placeholder=\"Masukan Keterangan PO\"\r\n                                value={ordercode}\r\n                                onChange={(e) => {\r\n                                  setDescription(e.target.value);\r\n                                 \r\n                                }}\r\n                              />\r\n                              \r\n                            </Col>\r\n                            \r\n                          </FormGroup>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                                type=\"hidden\"\r\n                                name=\"desc\"\r\n                                placeholder=\"Masukan Keterangan PO\"\r\n                                value={usernamePo}\r\n                                onChange={(e) => {\r\n                                  setUsernamePo(e.target.value);\r\n                                 \r\n                                }}\r\n                              />\r\n                              <Input\r\n                                type=\"hidden\"\r\n                                name=\"desc\"\r\n                                placeholder=\"Masukan Keterangan PO\"\r\n                                value={sub}\r\n                                onChange={(e) => {\r\n                                  setUsernamePo(e.target.value);\r\n                                 \r\n                                }}\r\n                              />\r\n                              \r\n                            </Col>\r\n                          \r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                                Nama Supplier\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                                name=\"kategory\"\r\n                                type=\"select\"\r\n                                value={person}\r\n                                onChange={(e) => {\r\n                                  setPerson(e.target.value);\r\n                                }}\r\n                              >\r\n                                {persons.map((person, key) => {\r\n                                    return (\r\n                                      <option key={key} value={person.id}>\r\n                                        {person.person_name}\r\n                                      </option>\r\n                                    );\r\n                                  })}\r\n                              </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              keterangan PO\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                              disabled\r\n                                type=\"text\"\r\n                                name=\"desc\"\r\n                                placeholder=\"Masukan Keterangan PO\"\r\n                                value={keteranganpo}\r\n                                onChange={(e) => {\r\n                                  setKeteranganPo(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              keterangan Payment\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                              disabled\r\n                                type=\"text\"\r\n                                name=\"desc\"\r\n                                placeholder=\"Masukan Keterangan PO\"\r\n                                value={keteranganpayment}\r\n                                onChange={(e) => {\r\n                                  setDescription(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Tipe PO\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                                name=\"paymentMethod\"\r\n                                type=\"select\"\r\n                                value={poType}\r\n                                onChange={(e) => {\r\n                                  setPoType(e.target.value);\r\n                                }}\r\n                              >\r\n                                <option value={1}>Ready</option>\r\n                                <option value={2}>Indent</option>\r\n                              </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Durasi Tempo\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                                type=\"text\"\r\n                                name=\"barcode\"\r\n                                placeholder=\"Masukan Durasi Tempo\"\r\n                                value={durasitempo}\r\n                                onChange={(e) => {\r\n                                  setDurasiTempo(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Jangka Waktu\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                                type=\"text\"\r\n                                name=\"jangkawaktu\"\r\n                                placeholder=\"Masukan Jangka Waktu\"\r\n                                value={jangkawaktu}\r\n                                onChange={(e) => {\r\n                                    setJangkaWaktu(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Termin\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                            name=\"satuan\"\r\n                            type=\"select\"\r\n                            value={termin}\r\n                            onChange={(e) => {\r\n                              setTermin(e.target.value);\r\n                            }}\r\n                          >\r\n                            <option value={0}>Pilih Cicilan</option>\r\n                            <option value={1}>Lunas</option>\r\n                            <option value={2}>Belum Lunas</option>\r\n                            \r\n                              </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Metode Pembayaran\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                          disabled\r\n                          name=\"paymentMethod\"\r\n                          type=\"select\"\r\n                          value={paymentmethod}\r\n                          onChange={(e) => {\r\n                            setPaymentMethod(e.target.value);\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Pilih Payment Method</option>\r\n                          <option value={1}>Tunai</option>\r\n                          <option value={2}>Tempo/Termin/Utang</option>\r\n                        </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                          \r\n                              <Col sm={6}>\r\n                                <div style={{ display: \"none\" }}>\r\n                                  <div className=\"custom-control custom-radio mb-3\">\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio8\"\r\n                                      name=\"custom-radio-2\"\r\n                                      type=\"radio\"\r\n                                      value={1}\r\n                                      checked={approve === 1}\r\n                                      onChange={() => setApprove(1)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio8\"\r\n                                    >\r\n                                      Disetujui\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"custom-control custom-radio mb-3\"\r\n                                    style={{ marginLeft: \"20px\" }}\r\n                                  >\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio9\"\r\n                                      name=\"custom-radio-2\"\r\n                                      type=\"radio\"\r\n                                      value={2}\r\n                                      checked={approve === 2}\r\n                                      onChange={() => setApprove(2)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio9\"\r\n                                    >\r\n                                      Ditolak\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"custom-control custom-radio mb-3\"\r\n                                    style={{ marginLeft: \"20px\" }}\r\n                                  >\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio10\"\r\n                                      name=\"custom-radio-2\"\r\n                                      type=\"radio\"\r\n                                      value={3}\r\n                                      checked={approve === 3}\r\n                                      onChange={() => setApprove(3)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio10\"\r\n                                    >\r\n                                      Dibatalkan\r\n                                    </Label>\r\n                                  </div>\r\n                                </div>\r\n                              </Col>\r\n                          \r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Admin Approval\r\n                            </Label>\r\n                              <Col sm={6}>\r\n                                <div style={{ display: \"flex\" }}>\r\n                                  <div className=\"custom-control custom-radio mb-3\">\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio11\"\r\n                                      name=\"custom-radio-3\"\r\n                                      type=\"radio\"\r\n                                      value={1}\r\n                                      checked={adminapprove === 1}\r\n                                      onChange={() => setAdminApprove(1)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio11\"\r\n                                    >\r\n                                      Disetujui\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"custom-control custom-radio mb-3\"\r\n                                    style={{ marginLeft: \"20px\" }}\r\n                                  >\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio12\"\r\n                                      name=\"custom-radio-3\"\r\n                                      type=\"radio\"\r\n                                      value={2}\r\n                                      checked={adminapprove === 2}\r\n                                      onChange={() => setAdminApprove(2)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio12\"\r\n                                    >\r\n                                      Ditolak\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"custom-control custom-radio mb-3\"\r\n                                    style={{ marginLeft: \"20px\" }}\r\n                                  >\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio13\"\r\n                                      name=\"custom-radio-3\"\r\n                                      type=\"radio\"\r\n                                      value={3}\r\n                                      checked={adminapprove === 3}\r\n                                      onChange={() => setAdminApprove(3)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio13\"\r\n                                    >\r\n                                      Dibatalkan\r\n                                    </Label>\r\n                                  </div>\r\n                                </div>\r\n                              </Col>\r\n                          </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <ToolkitProvider\r\n                            rowNumber={rowIndex}\r\n                            data={\"\"}\r\n                            keyField=\"id\"\r\n                            columns={[\r\n                              {\r\n                                dataField: \"no\",\r\n                                text: \"No\",\r\n                                sort: true,\r\n                                page: 1,\r\n                                formatter: (cell, row, index) => {\r\n                                  let currentRow = ++index;\r\n                                  return currentRow + rowIndex;\r\n                                }\r\n                              },\r\n                              {\r\n                                dataField: \"kode_Item\",\r\n                                text: \"Kode Item\",\r\n                                sort: true,\r\n                              },\r\n                              {\r\n                                dataField: \"Qty\",\r\n                                text: \"Qty \",\r\n                                sort: true,\r\n                              },\r\n                              {\r\n                                dataField: \"satuan\",\r\n                                text: \"Satuan \",\r\n                                sort: true,\r\n                              },\r\n                              {\r\n                                dataField: \"Harga\",\r\n                                text: \"Harga \",\r\n                                sort: true,\r\n                              },\r\n                            ]}\r\n                          >\r\n                            {(props) => (\r\n                              <div className=\"py-4 table-responsive\">\r\n                                <BootstrapTable\r\n                                  remote\r\n                                  {...props.baseProps}\r\n                                  bootstrap4={true}\r\n                                  bordered={false}\r\n                                  hover={true}\r\n                                  pagination={paginationFactory({ ...paginationOption })}\r\n                                  onTableChange={handleTableChange}\r\n                                />\r\n                              </div>\r\n                            )}\r\n                    </ToolkitProvider>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                  <Row md=\"12\">\r\n                    <Col md=\"9\">\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                    {!isLoading && (\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        Simpan\r\n                      </Button>\r\n                    )}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {\"\"}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/po\">\r\n                      Kembali\r\n                    </Link>\r\n                    </Col>\r\n                  </Row>\r\n                  </CardFooter>\r\n                  </Form>\r\n                </Card>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n        </Container>\r\n    </div>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Col,\r\n  CardFooter,\r\n  Container,\r\n  Button,\r\n  Form,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\n\r\n\r\nexport default function Edit(props) {\r\n  const username = localStorage.username;\r\n  const token = localStorage.token;\r\n  const warehouse = localStorage.warehouse;\r\n  \r\n  let history = useHistory();\r\n  const [usernamePo, setUsernamePo] = useState(\"\");\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [person, setPerson] = useState(\"\");\r\n  const [persons, setPersons] = useState([]);\r\n  const [ordercode,setOrderCode]= useState(\"\");\r\n  const [jangkawaktu,setJangkaWaktu] = useState([]);\r\n  const [keteranganpayment,setKeteranganPayment] = useState(\"\");\r\n  const [paymentmethod,setPaymentMethod] = useState(\"\");\r\n  const [keteranganpo,setKeteranganPo] = useState(\"\");\r\n  const [termin,setTermin] = useState([]);\r\n  const [durasitempo,setDurasiTempo] = useState(\"\");\r\n  const [poType, setPoType] = useState(\"\");\r\n  const [approve, setApprove] = useState([]);\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n    getById();\r\n      }, []);\r\n\r\n  const getById = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/purchase-order/get/${props.match.params.id}`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        console.log(data);\r\n        getPo(data.data.response_data.id);\r\n        setOrderCode(data.data.response_data.order_code);\r\n        setUsernamePo(data.data.response_data.username_po);\r\n        setPaymentMethod(data.data.response_data.payment_method);\r\n        setKeteranganPo(data.data.response_data.keterangan_po);\r\n        setJangkaWaktu(data.data.response_data.jangka_waktu);\r\n        setKeteranganPayment(data.data.response_data.keterangan_payment );\r\n        setTermin(data.data.response_data.is_cicil);\r\n        setDurasiTempo(data.data.response_data.durasi_po);\r\n        setPerson(data.data.response_data.person);\r\n        setPoType(data.data.response_data.po_type);\r\n        setApprove(data.data.response_data.approve);\r\n\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getPo = (poId) => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const data = {\r\n      po_id: parseInt(poId),\r\n    };\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/purchase-order/po-items`,\r\n        data,\r\n        {\r\n          headers,\r\n        }\r\n      )\r\n      .then((data) => {\r\n        getPerson();\r\n\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getPerson = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/person/list`, { headers })\r\n      .then((data) => {\r\n        setPersons(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, uomCode, description);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort,  uomCode, description)\r\n    }\r\n  }\r\n  function EditData() {\r\n    setLoading(true);\r\n    let data = {\r\n    warehouse_id : parseInt(warehouse),\r\n    username_po : usernamePo,\r\n    payment_method : paymentmethod,\r\n    jangka_waktu : jangkawaktu,\r\n    keterangan_payment : keteranganpayment,\r\n    po_type: poType,\r\n    durasi_po: durasitempo,\r\n    person: person,\r\n    is_cicil: parseInt(termin),\r\n    approve: parseInt(approve),\r\n    keterangan_po: keteranganpo,\r\n    username_admin: \"\",\r\n    admin_approval: 0,\r\n    keterangan_admin: \"\",\r\n    username_validator : \"\",\r\n    clear : 0,\r\n    keterangan_validator : \"\",\r\n    username_gudang : \"\",\r\n    status_barang : 0,\r\n    keterangan_gudang : \"\",\r\n    username_kurir : \"\",\r\n    person:1,\r\n    active_flag : 1,\r\n    po_type : 1,\r\n    items : [],\r\n    };\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/purchase-order/update/${props.match.params.id}`,\r\n        data,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        history.push(\"/admin/po\");\r\n        console.log(data);\r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    {\r\n      EditData();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div> \r\n      <SimpleHeader name=\"Validasi Penawaran PO\" parentName=\"PO\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                \r\n                <Card>\r\n                <Form onSubmit={handleSubmit}> \r\n                  <CardBody>\r\n                    <Row md=\"12\">\r\n                        <Col md=\"6\">\r\n                          \r\n                            <Col sm={7}>\r\n                              <Input\r\n                              disabled\r\n                                type=\"hidden\"\r\n                                name=\"desc\"\r\n                                value={ordercode}\r\n                                onChange={(e) => {\r\n                                  setDescription(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                                type=\"hidden\"\r\n                                name=\"desc\"\r\n                                placeholder=\"Masukan Keterangan PO\"\r\n                                value={usernamePo}\r\n                                onChange={(e) => {\r\n                                  setUsernamePo(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                                Nama Supplier\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                                name=\"kategory\"\r\n                                type=\"select\"\r\n                                value={person}\r\n                                onChange={(e) => {\r\n                                  setPerson(e.target.value);\r\n                                }}\r\n                              >\r\n                                <option value=''>Pilih Supplier</option>\r\n                                {persons.map((person, key) => {\r\n                                    return (\r\n                                      <option key={key} value={person.id}>\r\n                                        {person.person_name}\r\n                                      </option>\r\n                                    );\r\n                                  })}\r\n                              </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              keterangan PO\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                              disabled\r\n                                type=\"text\"\r\n                                name=\"desc\"\r\n                                placeholder=\"Masukan Keterangan PO\"\r\n                                value={keteranganpo}\r\n                                onChange={(e) => {\r\n                                  setKeteranganPo(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              keterangan Payment\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                              disabled\r\n                                type=\"text\"\r\n                                name=\"desc\"\r\n                                placeholder=\"Masukan Keterangan PO\"\r\n                                value={keteranganpayment}\r\n                                onChange={(e) => {\r\n                                  setDescription(e.target.value);\r\n                                 \r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Tipe PO\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                                name=\"paymentMethod\"\r\n                                type=\"select\"\r\n                                value={poType}\r\n                                onChange={(e) => {\r\n                                  setPoType(e.target.value);\r\n                                }}\r\n                              >\r\n                                <option value=\"\">Pilih Payment Method</option>\r\n                                <option value={1}>Konvensional</option>\r\n                                <option value={2}>Indent</option>\r\n                              </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Durasi Tempo\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                                type=\"text\"\r\n                                name=\"barcode\"\r\n                                placeholder=\"Masukan Durasi Tempo\"\r\n                                value={durasitempo}\r\n                                onChange={(e) => {\r\n                                  setDurasiTempo(e.target.value);\r\n                                  \r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Jangka Waktu\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                                type=\"number\"\r\n                                name=\"jangkawaktu\"\r\n                                placeholder=\"Masukan Jangka Waktu\"\r\n                                value={jangkawaktu}\r\n                                onChange={(e) => {\r\n                                  setJangkaWaktu(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Termin\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                            name=\"satuan\"\r\n                            type=\"select\"\r\n                            value={termin}\r\n                            onChange={(e) => {\r\n                              setTermin(e.target.value);\r\n                            }}\r\n                          >\r\n                            <option value={0}>Pilih Cicilan</option>\r\n                            <option value={1}>Lunas</option>\r\n                            <option value={2}>Belum Lunas</option>\r\n                            \r\n                              </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Metode Pembayaran\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                          disabled\r\n                          name=\"paymentMethod\"\r\n                          type=\"select\"\r\n                          value={paymentmethod}\r\n                          onChange={(e) => {\r\n                            setPaymentMethod(e.target.value);\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Pilih Payment Method</option>\r\n                          <option value={1}>Tunai</option>\r\n                          <option value={2}>Tempo/Termin/Utang</option>\r\n                        </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Approve\r\n                            </Label>\r\n                              <Col sm={6}>\r\n                                <div style={{ display: \"flex\" }}>\r\n                                  <div className=\"custom-control custom-radio mb-3\">\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio8\"\r\n                                      name=\"custom-radio-3\"\r\n                                      type=\"radio\"\r\n                                      value={1}\r\n                                      checked={approve === 1}\r\n                                      onChange={() => setApprove(1)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio8\"\r\n                                    >\r\n                                      Disetujui\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"custom-control custom-radio mb-3\"\r\n                                    style={{ marginLeft: \"20px\" }}\r\n                                  >\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio9\"\r\n                                      name=\"custom-radio-3\"\r\n                                      type=\"radio\"\r\n                                      value={2}\r\n                                      checked={approve === 2}\r\n                                      onChange={() => setApprove(2)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio9\"\r\n                                    >\r\n                                      Ditolak\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"custom-control custom-radio mb-3\"\r\n                                    style={{ marginLeft: \"20px\" }}\r\n                                  >\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio10\"\r\n                                      name=\"custom-radio-3\"\r\n                                      type=\"radio\"\r\n                                      value={3}\r\n                                      checked={approve === 3}\r\n                                      onChange={() => setApprove(3)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio10\"\r\n                                    >\r\n                                      Dibatalkan\r\n                                    </Label>\r\n                                  </div>\r\n                                </div>\r\n                              </Col>\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <ToolkitProvider\r\n                            rowNumber={rowIndex}\r\n                            data={\"\"}\r\n                            keyField=\"id\"\r\n                            columns={[\r\n                              {\r\n                                dataField: \"no\",\r\n                                text: \"No\",\r\n                                sort: true,\r\n                                page: 1,\r\n                                formatter: (cell, row, index) => {\r\n                                  let currentRow = ++index;\r\n                                  return currentRow + rowIndex;\r\n                                }\r\n                              },\r\n                              {\r\n                                dataField: \"kode_po\",\r\n                                text: \"Kode PO\",\r\n                                sort: true,\r\n                              },\r\n                           \r\n                                {\r\n                                  dataField: \"description\",\r\n                                  text: \"Deskripsi SO\",\r\n                                  sort: true,\r\n                                },\r\n                            ]}\r\n                          >\r\n                            {(props) => (\r\n                              <div className=\"py-4 table-responsive\">\r\n                                <BootstrapTable\r\n                                  remote\r\n                                  {...props.baseProps}\r\n                                  bootstrap4={true}\r\n                                  bordered={false}\r\n                                  hover={true}\r\n                                  pagination={paginationFactory({ ...paginationOption })}\r\n                                  onTableChange={handleTableChange}\r\n                                />\r\n                              </div>\r\n                            )}\r\n                    </ToolkitProvider>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                  <Row md=\"12\">\r\n                    <Col md=\"9\">\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                    {!isLoading && (\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        Simpan\r\n                      </Button>\r\n                    )}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {\"\"}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/po\">\r\n                      Kembali\r\n                    </Link>\r\n                    </Col>\r\n                  </Row>\r\n                  </CardFooter>\r\n                  </Form>\r\n                  </Card>\r\n              </CardBody>\r\n              </Card>\r\n          </div>\r\n        </Row>\r\n        </Container>\r\n    </div>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function CreateAddress(props) {\r\n  const token = localStorage.token;\r\n  const warehouse = localStorage.warehouse;\r\n  const role = localStorage.authority;\r\n  const namaDepartment = localStorage.department;\r\n  const username = localStorage.username;\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [usernamePo, setUsernamePo] = useState(\"\");\r\n  const [usernamePoError, setUsernamePoError] = useState(null);\r\n  const [usernamePurchasing, setUsernamePurchasing] = useState(\"\");\r\n  const [usernamePurchasingError, setUsernamePurchasingError] = useState(null);\r\n  const [usernammeGudang, setUsernameGudang] = useState(\"\");\r\n  const [usernammeGudangError, setUsernameGudangError] = useState(null);\r\n  const [usernameValidator, setUsernameValidator] = useState(\"\");\r\n  const [usernameValidatorError, setUsernameValidatorError] = useState(null);\r\n  const [paymentMethod, setPaymentMethod] = useState(\"\");\r\n  const [paymentMethodError, setPaymentMethodError] = useState(null);\r\n  const [descriptionPayment, setDescriptionPayment] = useState(\"\");\r\n  const [descriptionValidator, setDescriptionValidator] = useState(\"\");\r\n  const [descriptionPurchasing, setDescriptionPurchasing] = useState(\"\");\r\n  const [descriptionGudang, setDescriptionGudang] = useState(\"\");\r\n  const [descriptionPo, setDescriptionPo] = useState(\"\");\r\n  const [isCicil, setIsCicil] = useState(\"\");\r\n  const [statusBarang, setStatusBarang] = useState(0);\r\n  const [clear, setClear] = useState(0);\r\n  const [approve, setApprove] = useState(0);\r\n  const [poType, setPoType] = useState(\"\");\r\n  const [poId, setPoId] = useState(\"\");\r\n  const [code, setCode] = useState(\"\");\r\n  const [usernameAdmin, setUsernameAdmin] = useState(username);\r\n  const [descriptionAdmin, setDescriptionAdmin] = useState(\"\");\r\n  const [approvalAdmin, setApprovalAdmin] = useState(0);\r\n\r\n  const [items, setItems] = useState([]);\r\n  const [persons, setPersons] = useState([]);\r\n  const [allSatuan, setAllSatuan] = useState([]);\r\n\r\n  const [inputList, setInputList] = useState([\r\n    {\r\n      item_id: \"\",\r\n      qty: \"\",\r\n      satuan: \"\",\r\n      person: \"\",\r\n      harga: \"\",\r\n      qty_fisik: \"\",\r\n      keterangan_fisik: \"\",\r\n    },\r\n  ]);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    // if (province === \"\") {\r\n    //   setProvinceError(\"invalid\");\r\n    //   error = true;\r\n    // }\r\n    // if (city === \"\") {\r\n    //   setCityError(\"invalid\");\r\n    //   error = true;\r\n    // }\r\n    // if (address === \"\") {\r\n    //   setAddressError(\"invalid\");\r\n    //   error = true;\r\n    // }\r\n    // if (phoneNumber === \"\") {\r\n    //   setPhoneNumberError(\"invalid\");\r\n    //   error = true;\r\n    // }\r\n    // if (fax === \"\") {\r\n    //   setFaxError(\"invalid\");\r\n    //   error = true;\r\n    // }\r\n    // if (npwp === \"\") {\r\n    //   setNpwpError(\"invalid\");\r\n    //   error = true;\r\n    // }\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getById();\r\n  }, []);\r\n\r\n  const getById = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/purchase-order/get/${props.match.params.id}`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        console.log(data);\r\n        getPo(data.data.response_data.id);\r\n        setUsernamePo(data.data.response_data.username_po);\r\n        setDescriptionPo(data.data.response_data.keterangan_po);\r\n        setUsernamePurchasing(data.data.response_data.username_purchasing);\r\n        setDescriptionPurchasing(data.data.response_data.keterangan_purchasing);\r\n        setUsernameGudang(data.data.response_data.username_gudang);\r\n        setDescriptionGudang(data.data.response_data.keterangan_gudang);\r\n        setUsernameValidator(data.data.response_data.username_validator);\r\n        setDescriptionValidator(data.data.response_data.keterangan_validator);\r\n        setDescriptionPayment(data.data.response_data.keterangan_payment);\r\n        setPaymentMethod(data.data.response_data.payment_method);\r\n        setIsCicil(data.data.response_data.is_cicil);\r\n        setPoType(data.data.response_data.po_type);\r\n        setClear(data.data.response_data.clear);\r\n        setApprove(data.data.response_data.approve);\r\n        setStatusBarang(data.data.response_data.status_barang);\r\n        setCode(data.data.response_data.order_code);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getPo = (poId) => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const data = {\r\n      po_id: parseInt(poId),\r\n    };\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/purchase-order/po-items`,\r\n        data,\r\n        {\r\n          headers,\r\n        }\r\n      )\r\n      .then((data) => {\r\n        getItem();\r\n        getPerson();\r\n        getSatuan();\r\n        let harga = [];\r\n        let item = [];\r\n        let qty = [];\r\n        let satuan = [];\r\n        let person = [];\r\n        let qty_fisik = [];\r\n        let keterangan_fisik = [];\r\n        data.data.response_data.map((x, i) => {\r\n          harga.push(x.harga);\r\n          item.push(x.item_id);\r\n          qty.push(x.qty);\r\n          satuan.push(x.satuan);\r\n          person.push(x.person);\r\n          qty_fisik.push(x.qty_fisik);\r\n          keterangan_fisik.push(x.keterangan_fisik);\r\n          setInputList([\r\n            {\r\n              // harga: harga,\r\n              // item_id: item,\r\n              // qty: qty,\r\n              // satuan: satuan,\r\n              // person: person,\r\n              // qty_fisik: qty_fisik,\r\n              // keterangan_fisik: keterangan_fisik,\r\n              harga: x.harga,\r\n              item_id: x.item_id,\r\n              qty: x.qty,\r\n              satuan: x.satuan,\r\n              person: x.person,\r\n              qty_fisik: x.qty_fisik,\r\n              keterangan_fisik: x.keterangan_fisik,\r\n            },\r\n          ]);\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getItem = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/items/list?warehouse_id=${warehouse}`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        setItems(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getPerson = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/person/list`, { headers })\r\n      .then((data) => {\r\n        setPersons(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getSatuan = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/uom/list`, { headers })\r\n      .then((data) => {\r\n        setAllSatuan(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  // handle input change\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...inputList];\r\n    list[index][name] =\r\n      name === \"keterangan_fisik\"\r\n        ? value\r\n        : name === \"harga\"\r\n        ? parseFloat(value)\r\n        : parseInt(value);\r\n    setInputList(list);\r\n  };\r\n\r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...inputList];\r\n    list.splice(index, 1);\r\n    setInputList(list);\r\n  };\r\n\r\n  // handle click event of the Add button\r\n  const handleAddClick = () => {\r\n    setInputList([\r\n      ...inputList,\r\n      {\r\n        item_id: \"\",\r\n        qty: \"\",\r\n        satuan: \"\",\r\n        person: \"\",\r\n        harga: \"\",\r\n        qty_fisik: \"\",\r\n        keterangan_fisik: \"\",\r\n      },\r\n    ]);\r\n  };\r\n\r\n  function EditData() {\r\n    setLoading(true);\r\n    let data = {\r\n      warehouse_id: parseInt(warehouse),\r\n      username_po: usernamePo,\r\n      payment_method: paymentMethod,\r\n      keterangan_payment: descriptionPayment,\r\n      is_cicil: parseInt(isCicil),\r\n      username_purchasing: usernamePurchasing,\r\n      approve: parseInt(approve),\r\n      keterangan_purchasing: descriptionPurchasing,\r\n      username_gudang: usernammeGudang,\r\n      status_barang: parseInt(statusBarang),\r\n      keterangan_gudang: descriptionGudang,\r\n      username_kurir: \"\",\r\n      username_validator: usernameValidator,\r\n      clear: parseInt(clear),\r\n      keterangan_validator: descriptionValidator,\r\n      active_flag: 1,\r\n      po_type: 1,\r\n      keterangan_po: descriptionPo,\r\n      items: inputList,\r\n      username_admin: usernameAdmin,\r\n      admin_approval: parseInt(approvalAdmin),\r\n      keterangan_admin: descriptionAdmin,\r\n    };\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/purchase-order/update/${props.match.params.id}`,\r\n        data,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        history.push(\"/admin/po\");\r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      EditData();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Edit Purchase Order\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            {role === \"ROLE_ADMIN\" && namaDepartment === \"Purchase\" ? (\r\n              <Card>\r\n                <CardBody>\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <CardHeader>\r\n                      <h3>Edit Purchase Order</h3>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Order Code\r\n                        </Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"text\"\r\n                          name=\"po\"\r\n                          placeholder=\"Masukan Kode\"\r\n                          value={code}\r\n                          onChange={(e) => {\r\n                            setCode(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan PO\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"text\"\r\n                          name=\"descPo\"\r\n                          placeholder=\"Masukan Keterangan PO\"\r\n                          value={descriptionPo}\r\n                          onChange={(e) => {\r\n                            setDescriptionPo(e.target.value);\r\n                          }}\r\n                        />\r\n                        <FormFeedback>\r\n                          Keterangan PO tidak boleh kosong\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan Admin\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descPo\"\r\n                          placeholder=\"Masukan Keterangan Admin\"\r\n                          value={descriptionAdmin}\r\n                          onChange={(e) => {\r\n                            setDescriptionAdmin(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Approval Admin\r\n                        </Label>\r\n                        <Row>\r\n                          <Col>\r\n                            <div style={{ display: \"flex\" }}>\r\n                              <div className=\"custom-control custom-radio mb-3\">\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio13\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={1}\r\n                                  checked={approvalAdmin === 1}\r\n                                  onClick={() => setApprovalAdmin(1)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio13\"\r\n                                >\r\n                                  Disetujui\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio14\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={2}\r\n                                  checked={approvalAdmin === 2}\r\n                                  onClick={() => setApprovalAdmin(2)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio14\"\r\n                                >\r\n                                  Ditolak\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio15\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={3}\r\n                                  checked={approvalAdmin === 3}\r\n                                  onClick={() => setApprovalAdmin(3)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio15\"\r\n                                >\r\n                                  Dibatalkan\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Payment Method\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          disabled\r\n                          name=\"paymentMethod\"\r\n                          type=\"select\"\r\n                          value={paymentMethod}\r\n                          invalid={paymentMethodError === \"invalid\"}\r\n                          onChange={(e) => {\r\n                            setPaymentMethod(e.target.value);\r\n                            if (e.target.value !== \"\") {\r\n                              setPaymentMethodError(\"\");\r\n                            }\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Pilih Payment Method</option>\r\n                          <option value={1}>Tunia</option>\r\n                          <option value={2}>Tempo/Termin/Utang</option>\r\n                        </Input>\r\n                        <FormFeedback>\r\n                          Payment Method tidak boleh kosong\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n\r\n                      {inputList.map((x, i) => {\r\n                        return (\r\n                          <div className=\"box\">\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Item\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                name=\"item_id\"\r\n                                type=\"select\"\r\n                                value={parseInt(x.item_id)}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Item</option>\r\n                                {items.map((item, key) => {\r\n                                  return (\r\n                                    <option key={key} value={item.id}>\r\n                                      {item.item_name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                              <FormFeedback>\r\n                                Item tidak boleh kosong\r\n                              </FormFeedback>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Quality\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                type=\"text\"\r\n                                name=\"qty\"\r\n                                placeholder=\"Masukan Quality\"\r\n                                value={x.qty}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Satuan\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                name=\"satuan\"\r\n                                type=\"select\"\r\n                                value={x.satuan}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Satuan</option>\r\n                                {allSatuan.map((satuan, key) => {\r\n                                  return (\r\n                                    <option key={key} value={satuan.id}>\r\n                                      {satuan.uom_code}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Person\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                name=\"person\"\r\n                                type=\"select\"\r\n                                value={x.person}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Person</option>\r\n                                {persons.map((person, key) => {\r\n                                  return (\r\n                                    <option key={key} value={person.id}>\r\n                                      {person.person_name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Harga\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                type=\"text\"\r\n                                name=\"harga\"\r\n                                placeholder=\"Masukan Harga\"\r\n                                value={x.harga}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Quality Fisik\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                type=\"text\"\r\n                                name=\"qty_fisik\"\r\n                                placeholder=\"Masukan Quality Fidik\"\r\n                                value={x.qty_fisik}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Keterangan Fisik\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                type=\"text\"\r\n                                name=\"keterangan_fisik\"\r\n                                placeholder=\"Masukan Keterangna Fisik\"\r\n                                value={x.keterangan_fisik}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <div className=\"btn-box\">\r\n                              {inputList.length !== 1 && (\r\n                                <Button\r\n                                  color=\"default\"\r\n                                  onClick={() => handleRemoveClick(i)}\r\n                                >\r\n                                  Remove\r\n                                </Button>\r\n                              )}\r\n                              {inputList.length - 1 === i && (\r\n                                <Button\r\n                                  color=\"default\"\r\n                                  onClick={handleAddClick}\r\n                                >\r\n                                  Add\r\n                                </Button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </CardBody>\r\n                    <CardFooter>\r\n                      {!isLoading && (\r\n                        <Button color=\"primary\" type=\"submit\">\r\n                          Simpan\r\n                        </Button>\r\n                      )}\r\n                      {isLoading && (\r\n                        <Button color=\"primary\" disabled>\r\n                          <i className=\"fas fa-spinner fa-spin\"></i>\r\n                          {\"\"}\r\n                          loading...\r\n                        </Button>\r\n                      )}\r\n                      <Link className=\"btn btn-info\" to=\"/admin/po\">\r\n                        Kembali\r\n                      </Link>\r\n                    </CardFooter>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            ) : role === \"ROLE_ADMIN\" &&\r\n              namaDepartment === \"Board Of Director\" ? (\r\n              <Card>\r\n                <CardBody>\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <CardHeader>\r\n                      <h3>Edit Purchase Order</h3>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Order Code\r\n                        </Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"text\"\r\n                          name=\"po\"\r\n                          placeholder=\"Masukan Kode\"\r\n                          value={code}\r\n                          onChange={(e) => {\r\n                            setCode(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan PO\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"text\"\r\n                          name=\"descPo\"\r\n                          placeholder=\"Masukan Keterangan PO\"\r\n                          value={descriptionPo}\r\n                          onChange={(e) => {\r\n                            setDescriptionPo(e.target.value);\r\n                          }}\r\n                        />\r\n                        <FormFeedback>\r\n                          Keterangan PO tidak boleh kosong\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan Validator\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descValidator\"\r\n                          placeholder=\"Masukan Keterangan Validator\"\r\n                          value={descriptionValidator}\r\n                          onChange={(e) => {\r\n                            setDescriptionValidator(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Clear\r\n                        </Label>\r\n                        <Row>\r\n                          <Col>\r\n                            <div style={{ display: \"flex\" }}>\r\n                              <div className=\"custom-control custom-radio mb-3\">\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio5\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={1}\r\n                                  checked={clear === 1}\r\n                                  onClick={() => setClear(1)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio5\"\r\n                                >\r\n                                  Disetujui\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio6\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={2}\r\n                                  checked={clear === 2}\r\n                                  onClick={() => setClear(2)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio6\"\r\n                                >\r\n                                  Ditolak\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio7\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={3}\r\n                                  checked={clear === 3}\r\n                                  onClick={() => setClear(3)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio7\"\r\n                                >\r\n                                  Dibatalkan\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Payment Method\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          disabled\r\n                          name=\"paymentMethod\"\r\n                          type=\"select\"\r\n                          value={paymentMethod}\r\n                          invalid={paymentMethodError === \"invalid\"}\r\n                          onChange={(e) => {\r\n                            setPaymentMethod(e.target.value);\r\n                            if (e.target.value !== \"\") {\r\n                              setPaymentMethodError(\"\");\r\n                            }\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Pilih Payment Method</option>\r\n                          <option value={1}>Tunia</option>\r\n                          <option value={2}>Tempo/Termin/Utang</option>\r\n                        </Input>\r\n                        <FormFeedback>\r\n                          Payment Method tidak boleh kosong\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n\r\n                      {inputList.map((x, i) => {\r\n                        return (\r\n                          <div className=\"box\">\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Item\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                name=\"item_id\"\r\n                                type=\"select\"\r\n                                value={parseInt(x.item_id)}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Item</option>\r\n                                {items.map((item, key) => {\r\n                                  return (\r\n                                    <option key={key} value={item.id}>\r\n                                      {item.item_name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                              <FormFeedback>\r\n                                Item tidak boleh kosong\r\n                              </FormFeedback>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Quality\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                type=\"text\"\r\n                                name=\"qty\"\r\n                                placeholder=\"Masukan Quality\"\r\n                                value={x.qty}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Satuan\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                name=\"satuan\"\r\n                                type=\"select\"\r\n                                value={x.satuan}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Satuan</option>\r\n                                {allSatuan.map((satuan, key) => {\r\n                                  return (\r\n                                    <option key={key} value={satuan.id}>\r\n                                      {satuan.uom_code}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Person\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                name=\"person\"\r\n                                type=\"select\"\r\n                                value={x.person}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Person</option>\r\n                                {persons.map((person, key) => {\r\n                                  return (\r\n                                    <option key={key} value={person.id}>\r\n                                      {person.person_name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Harga\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                type=\"text\"\r\n                                name=\"harga\"\r\n                                placeholder=\"Masukan Harga\"\r\n                                value={x.harga}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Quality Fisik\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                type=\"text\"\r\n                                name=\"qty_fisik\"\r\n                                placeholder=\"Masukan Quality Fidik\"\r\n                                value={x.qty_fisik}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Keterangan Fisik\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                type=\"text\"\r\n                                name=\"keterangan_fisik\"\r\n                                placeholder=\"Masukan Keterangna Fisik\"\r\n                                value={x.keterangan_fisik}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <div className=\"btn-box\">\r\n                              {inputList.length !== 1 && (\r\n                                <Button\r\n                                  color=\"default\"\r\n                                  onClick={() => handleRemoveClick(i)}\r\n                                >\r\n                                  Remove\r\n                                </Button>\r\n                              )}\r\n                              {inputList.length - 1 === i && (\r\n                                <Button\r\n                                  color=\"default\"\r\n                                  onClick={handleAddClick}\r\n                                >\r\n                                  Add\r\n                                </Button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </CardBody>\r\n                    <CardFooter>\r\n                      {!isLoading && (\r\n                        <Button color=\"primary\" type=\"submit\">\r\n                          Simpan\r\n                        </Button>\r\n                      )}\r\n                      {isLoading && (\r\n                        <Button color=\"primary\" disabled>\r\n                          <i className=\"fas fa-spinner fa-spin\"></i>\r\n                          {\"\"}\r\n                          loading...\r\n                        </Button>\r\n                      )}\r\n                      <Link className=\"btn btn-info\" to=\"/admin/po\">\r\n                        Kembali\r\n                      </Link>\r\n                    </CardFooter>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            ) : role === \"ROLE_ADMIN\" && namaDepartment === \"Gudang\" ? (\r\n              <Card>\r\n                <CardBody>\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <CardHeader>\r\n                      <h3>Edit Purchase Order</h3>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Order Code\r\n                        </Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"text\"\r\n                          name=\"po\"\r\n                          placeholder=\"Masukan Kode\"\r\n                          value={code}\r\n                          onChange={(e) => {\r\n                            setCode(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan PO\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"text\"\r\n                          name=\"descPo\"\r\n                          placeholder=\"Masukan Keterangan PO\"\r\n                          value={descriptionPo}\r\n                          onChange={(e) => {\r\n                            setDescriptionPo(e.target.value);\r\n                          }}\r\n                        />\r\n                        <FormFeedback>\r\n                          Keterangan PO tidak boleh kosong\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan Gudang\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descGudang\"\r\n                          placeholder=\"Masukan Keterangan Gudang\"\r\n                          value={descriptionGudang}\r\n                          onChange={(e) => {\r\n                            setDescriptionGudang(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Status Barang\r\n                        </Label>\r\n                        <Row>\r\n                          <Col>\r\n                            <div style={{ display: \"flex\" }}>\r\n                              <div className=\"custom-control custom-radio mb-3\">\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio11\"\r\n                                  name=\"custom-radio-4\"\r\n                                  type=\"radio\"\r\n                                  value={1}\r\n                                  checked={statusBarang === 1}\r\n                                  onClick={() => setStatusBarang(1)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio11\"\r\n                                >\r\n                                  Diterima\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio12\"\r\n                                  name=\"custom-radio-4\"\r\n                                  type=\"radio\"\r\n                                  value={2}\r\n                                  checked={statusBarang === 2}\r\n                                  onClick={() => setStatusBarang(2)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio12\"\r\n                                >\r\n                                  Ditolak\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio13\"\r\n                                  name=\"custom-radio-4\"\r\n                                  type=\"radio\"\r\n                                  value={3}\r\n                                  checked={statusBarang === 3}\r\n                                  onClick={() => setStatusBarang(3)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio13\"\r\n                                >\r\n                                  Dibatalkan\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Payment Method\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          disabled\r\n                          name=\"paymentMethod\"\r\n                          type=\"select\"\r\n                          value={paymentMethod}\r\n                          invalid={paymentMethodError === \"invalid\"}\r\n                          onChange={(e) => {\r\n                            setPaymentMethod(e.target.value);\r\n                            if (e.target.value !== \"\") {\r\n                              setPaymentMethodError(\"\");\r\n                            }\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Pilih Payment Method</option>\r\n                          <option value={1}>Tunia</option>\r\n                          <option value={2}>Tempo/Termin/Utang</option>\r\n                        </Input>\r\n                        <FormFeedback>\r\n                          Payment Method tidak boleh kosong\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n\r\n                      {inputList.map((x, i) => {\r\n                        return (\r\n                          <div className=\"box\">\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Item\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                name=\"item_id\"\r\n                                type=\"select\"\r\n                                value={parseInt(x.item_id)}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Item</option>\r\n                                {items.map((item, key) => {\r\n                                  return (\r\n                                    <option key={key} value={item.id}>\r\n                                      {item.item_name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                              <FormFeedback>\r\n                                Item tidak boleh kosong\r\n                              </FormFeedback>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Quality\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                type=\"text\"\r\n                                name=\"qty\"\r\n                                placeholder=\"Masukan Quality\"\r\n                                value={x.qty}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Satuan\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                name=\"satuan\"\r\n                                type=\"select\"\r\n                                value={x.satuan}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Satuan</option>\r\n                                {allSatuan.map((satuan, key) => {\r\n                                  return (\r\n                                    <option key={key} value={satuan.id}>\r\n                                      {satuan.uom_code}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Person\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                name=\"person\"\r\n                                type=\"select\"\r\n                                value={x.person}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Person</option>\r\n                                {persons.map((person, key) => {\r\n                                  return (\r\n                                    <option key={key} value={person.id}>\r\n                                      {person.person_name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Harga\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                type=\"text\"\r\n                                name=\"harga\"\r\n                                placeholder=\"Masukan Harga\"\r\n                                value={x.harga}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Quality Fisik\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"qty_fisik\"\r\n                                placeholder=\"Masukan Quality Fidik\"\r\n                                value={x.qty_fisik}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Keterangan Fisik\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"keterangan_fisik\"\r\n                                placeholder=\"Masukan Keterangna Fisik\"\r\n                                value={x.keterangan_fisik}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <div className=\"btn-box\">\r\n                              {inputList.length !== 1 && (\r\n                                <Button\r\n                                  color=\"default\"\r\n                                  onClick={() => handleRemoveClick(i)}\r\n                                >\r\n                                  Remove\r\n                                </Button>\r\n                              )}\r\n                              {inputList.length - 1 === i && (\r\n                                <Button\r\n                                  color=\"default\"\r\n                                  onClick={handleAddClick}\r\n                                >\r\n                                  Add\r\n                                </Button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </CardBody>\r\n                    <CardFooter>\r\n                      {!isLoading && (\r\n                        <Button color=\"primary\" type=\"submit\">\r\n                          Simpan\r\n                        </Button>\r\n                      )}\r\n                      {isLoading && (\r\n                        <Button color=\"primary\" disabled>\r\n                          <i className=\"fas fa-spinner fa-spin\"></i>\r\n                          {\"\"}\r\n                          loading...\r\n                        </Button>\r\n                      )}\r\n                      <Link className=\"btn btn-info\" to=\"/admin/po\">\r\n                        Kembali\r\n                      </Link>\r\n                    </CardFooter>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            ) : (\r\n              <Card>\r\n                <CardBody>\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <CardHeader>\r\n                      <h3>Edit Purchase Order</h3>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Username PO\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"po\"\r\n                          placeholder=\"Masukan Username PO\"\r\n                          value={usernamePo}\r\n                          invalid={usernamePoError === \"invalid\"}\r\n                          onChange={(e) => {\r\n                            setUsernamePo(e.target.value);\r\n                            if (e.target.value !== \"\") {\r\n                              setUsernamePoError(\"\");\r\n                            }\r\n                          }}\r\n                        />\r\n                        <FormFeedback>\r\n                          Username PO tidak boleh kosong\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan PO\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descPo\"\r\n                          placeholder=\"Masukan Keterangan PO\"\r\n                          value={descriptionPo}\r\n                          onChange={(e) => {\r\n                            setDescriptionPo(e.target.value);\r\n                          }}\r\n                        />\r\n                        <FormFeedback>\r\n                          Keterangan PO tidak boleh kosong\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Username Purchasing\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"purchasing\"\r\n                          placeholder=\"Masukan Username Purchasing\"\r\n                          value={usernamePurchasing}\r\n                          invalid={usernamePurchasingError === \"invalid\"}\r\n                          onChange={(e) => {\r\n                            setUsernamePurchasing(e.target.value);\r\n                            if (e.target.value !== \"\") {\r\n                              setUsernamePurchasingError(\"\");\r\n                            }\r\n                          }}\r\n                        />\r\n                        <FormFeedback>\r\n                          Username Purchasing tidak boleh kosong\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan Purchasing\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descPurchasing\"\r\n                          placeholder=\"Masukan Keterangan Purchasing\"\r\n                          value={descriptionPurchasing}\r\n                          onChange={(e) => {\r\n                            setDescriptionPurchasing(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Username Gudang\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"usernameGudang\"\r\n                          placeholder=\"Masukan Username Gudang\"\r\n                          value={usernammeGudang}\r\n                          invalid={usernammeGudangError === \"invalid\"}\r\n                          onChange={(e) => {\r\n                            setUsernameGudang(e.target.value);\r\n                            if (e.target.value !== \"\") {\r\n                              setUsernameGudangError(\"\");\r\n                            }\r\n                          }}\r\n                        />\r\n                        <FormFeedback>\r\n                          Username Gudang tidak boleh kosong\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan Gudang\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descGudang\"\r\n                          placeholder=\"Masukan Keterangan Gudang\"\r\n                          value={descriptionGudang}\r\n                          onChange={(e) => {\r\n                            setDescriptionGudang(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Username Validator\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"usernameValidation\"\r\n                          placeholder=\"Masukan Username Validator\"\r\n                          value={usernameValidator}\r\n                          invalid={usernameValidatorError === \"invalid\"}\r\n                          onChange={(e) => {\r\n                            setUsernameValidator(e.target.value);\r\n                            if (e.target.value !== \"\") {\r\n                              setUsernameValidatorError(\"\");\r\n                            }\r\n                          }}\r\n                        />\r\n                        <FormFeedback>\r\n                          Username Validator tidak boleh kosong\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan Validator\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descValidator\"\r\n                          placeholder=\"Masukan Keterangan Validator\"\r\n                          value={descriptionValidator}\r\n                          onChange={(e) => {\r\n                            setDescriptionValidator(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan Payment\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descPayment\"\r\n                          placeholder=\"Masukan Keterangan Payment\"\r\n                          value={descriptionPayment}\r\n                          onChange={(e) => {\r\n                            setDescriptionPayment(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Payment Method\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          name=\"paymentMethod\"\r\n                          type=\"select\"\r\n                          value={paymentMethod}\r\n                          invalid={paymentMethodError === \"invalid\"}\r\n                          onChange={(e) => {\r\n                            setPaymentMethod(e.target.value);\r\n                            if (e.target.value !== \"\") {\r\n                              setPaymentMethodError(\"\");\r\n                            }\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Pilih Payment Method</option>\r\n                          <option value={1}>Tunia</option>\r\n                          <option value={2}>Tempo/Termin/Utang</option>\r\n                        </Input>\r\n                        <FormFeedback>\r\n                          Payment Method tidak boleh kosong\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Is Cicil\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          name=\"isCicil\"\r\n                          type=\"select\"\r\n                          value={isCicil}\r\n                          onChange={(e) => {\r\n                            setIsCicil(e.target.value);\r\n                          }}\r\n                        >\r\n                          <option value={0}>Pilih Cicilan</option>\r\n                          <option value={1}>Cicilan (Lunas)</option>\r\n                          <option value={2}>Cicilan (Belum Lunas)</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          PO Type\r\n                        </Label>\r\n                        <Input\r\n                          name=\"paymentMethod\"\r\n                          type=\"select\"\r\n                          value={poType}\r\n                          onChange={(e) => {\r\n                            setPoType(e.target.value);\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Pilih Payment Method</option>\r\n                          <option value={1}>Konvensional</option>\r\n                          <option value={2}>Indent</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Clear\r\n                        </Label>\r\n                        <Row>\r\n                          <Col>\r\n                            <div style={{ display: \"flex\" }}>\r\n                              <div className=\"custom-control custom-radio mb-3\">\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio5\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={1}\r\n                                  checked={clear === 1}\r\n                                  onClick={() => setClear(1)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio5\"\r\n                                >\r\n                                  Disetujui\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio6\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={2}\r\n                                  checked={clear === 2}\r\n                                  onClick={() => setClear(2)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio6\"\r\n                                >\r\n                                  Ditolak\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio7\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={3}\r\n                                  checked={clear === 3}\r\n                                  onClick={() => setClear(3)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio7\"\r\n                                >\r\n                                  Dibatalkan\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Approve\r\n                        </Label>\r\n                        <Row>\r\n                          <Col>\r\n                            <div style={{ display: \"flex\" }}>\r\n                              <div className=\"custom-control custom-radio mb-3\">\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio8\"\r\n                                  name=\"custom-radio-3\"\r\n                                  type=\"radio\"\r\n                                  value={1}\r\n                                  checked={approve === 1}\r\n                                  onClick={() => setApprove(1)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio8\"\r\n                                >\r\n                                  Disetujui\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio9\"\r\n                                  name=\"custom-radio-3\"\r\n                                  type=\"radio\"\r\n                                  value={2}\r\n                                  checked={approve === 2}\r\n                                  onClick={() => setApprove(2)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio9\"\r\n                                >\r\n                                  Ditolak\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio10\"\r\n                                  name=\"custom-radio-3\"\r\n                                  type=\"radio\"\r\n                                  value={3}\r\n                                  checked={approve === 3}\r\n                                  onClick={() => setApprove(3)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio10\"\r\n                                >\r\n                                  Dibatalkan\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Status Barang\r\n                        </Label>\r\n                        <Row>\r\n                          <Col>\r\n                            <div style={{ display: \"flex\" }}>\r\n                              <div className=\"custom-control custom-radio mb-3\">\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio11\"\r\n                                  name=\"custom-radio-4\"\r\n                                  type=\"radio\"\r\n                                  value={1}\r\n                                  checked={statusBarang === 1}\r\n                                  onClick={() => setStatusBarang(1)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio11\"\r\n                                >\r\n                                  Diterima\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio12\"\r\n                                  name=\"custom-radio-4\"\r\n                                  type=\"radio\"\r\n                                  value={2}\r\n                                  checked={statusBarang === 2}\r\n                                  onClick={() => setStatusBarang(2)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio12\"\r\n                                >\r\n                                  Ditolak\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio13\"\r\n                                  name=\"custom-radio-4\"\r\n                                  type=\"radio\"\r\n                                  value={3}\r\n                                  checked={statusBarang === 3}\r\n                                  onClick={() => setStatusBarang(3)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio13\"\r\n                                >\r\n                                  Dibatalkan\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </FormGroup>\r\n                      {inputList.map((x, i) => {\r\n                        return (\r\n                          <div className=\"box\">\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Item\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                name=\"item_id\"\r\n                                type=\"select\"\r\n                                value={parseInt(x.item_id)}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Item</option>\r\n                                {items.map((item, key) => {\r\n                                  return (\r\n                                    <option key={key} value={item.id}>\r\n                                      {item.item_name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                              <FormFeedback>\r\n                                Item tidak boleh kosong\r\n                              </FormFeedback>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Quality\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"qty\"\r\n                                placeholder=\"Masukan Quality\"\r\n                                value={x.qty}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Satuan\r\n                              </Label>\r\n                              <Input\r\n                                name=\"satuan\"\r\n                                type=\"select\"\r\n                                value={x.satuan}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Satuan</option>\r\n                                {allSatuan.map((satuan, key) => {\r\n                                  return (\r\n                                    <option key={key} value={satuan.id}>\r\n                                      {satuan.uom_code}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Person\r\n                              </Label>\r\n                              <Input\r\n                                name=\"person\"\r\n                                type=\"select\"\r\n                                value={x.person}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Person</option>\r\n                                {persons.map((person, key) => {\r\n                                  return (\r\n                                    <option key={key} value={person.id}>\r\n                                      {person.person_name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Harga\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"harga\"\r\n                                placeholder=\"Masukan Harga\"\r\n                                value={x.harga}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Quality Fisik\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"qty_fisik\"\r\n                                placeholder=\"Masukan Quality Fidik\"\r\n                                value={x.qty_fisik}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Keterangan Fisik\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"keterangan_fisik\"\r\n                                placeholder=\"Masukan Keterangna Fisik\"\r\n                                value={x.keterangan_fisik}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <div className=\"btn-box\">\r\n                              {inputList.length !== 1 && (\r\n                                <Button\r\n                                  color=\"default\"\r\n                                  onClick={() => handleRemoveClick(i)}\r\n                                >\r\n                                  Remove\r\n                                </Button>\r\n                              )}\r\n                              {inputList.length - 1 === i && (\r\n                                <Button\r\n                                  color=\"default\"\r\n                                  onClick={handleAddClick}\r\n                                >\r\n                                  Add\r\n                                </Button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </CardBody>\r\n                    <CardFooter>\r\n                      {!isLoading && (\r\n                        <Button color=\"primary\" type=\"submit\">\r\n                          Simpan\r\n                        </Button>\r\n                      )}\r\n                      {isLoading && (\r\n                        <Button color=\"primary\" disabled>\r\n                          <i className=\"fas fa-spinner fa-spin\"></i>\r\n                          {\"\"}\r\n                          loading...\r\n                        </Button>\r\n                      )}\r\n                      <Link className=\"btn btn-info\" to=\"/admin/po\">\r\n                        Kembali\r\n                      </Link>\r\n                    </CardFooter>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function CreateAddress() {\r\n  const token = localStorage.token;\r\n  const username = localStorage.username;\r\n  const role = localStorage.authority;\r\n  const namaDepartment = localStorage.department;\r\n  const warehouse = localStorage.warehouse;\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [usernamePo, setUsernamePo] = useState(username);\r\n  const [usernamePoError, setUsernamePoError] = useState(null);\r\n  const [usernamePurchasing, setUsernamePurchasing] = useState(\"\");\r\n  const [usernamePurchasingError, setUsernamePurchasingError] = useState(null);\r\n  const [usernammeGudang, setUsernameGudang] = useState(username);\r\n  const [usernammeGudangError, setUsernameGudangError] = useState(null);\r\n  const [usernameValidator, setUsernameValidator] = useState(\"\");\r\n  const [usernameValidatorError, setUsernameValidatorError] = useState(null);\r\n  const [paymentMethod, setPaymentMethod] = useState(\"\");\r\n  const [paymentMethodError, setPaymentMethodError] = useState(null);\r\n  const [descriptionPayment, setDescriptionPayment] = useState(\"\");\r\n  const [descriptionValidator, setDescriptionValidator] = useState(\"\");\r\n  const [descriptionPurchasing, setDescriptionPurchasing] = useState(\"\");\r\n  const [descriptionGudang, setDescriptionGudang] = useState(\"\");\r\n  const [descriptionPo, setDescriptionPo] = useState(\"\");\r\n  const [isCicil, setIsCicil] = useState(\"\");\r\n  const [statusBarang, setStatusBarang] = useState(0);\r\n  const [clear, setClear] = useState(0);\r\n  const [approve, setApprove] = useState(0);\r\n  const [poType, setPoType] = useState(\"\");\r\n  const [typeItemId, setTypeItemId] = useState(1);\r\n  const [allJangkaWaktu, setAllJangkaWaktu] = useState([]);\r\n  const [jangkaWaktu, setJangkuWaktu] = useState(\"\");\r\n  const [person, setPerson] = useState(\"\");\r\n  const [usernameAdmin, setUsernameAdmin] = useState(username);\r\n  const [descriptionAdmin, setDescriptionAdmin] = useState(\"\");\r\n\r\n  const [items, setItems] = useState([]);\r\n  const [persons, setPersons] = useState([]);\r\n  const [allSatuan, setAllSatuan] = useState([]);\r\n\r\n  const [inputList, setInputList] = useState([\r\n    {\r\n      item_id: \"\",\r\n      qty: \"\",\r\n      satuan: \"\",\r\n      harga: \"\",\r\n      qty_fisik: \"\",\r\n      keterangan_fisik: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [inputListPurcahse, setInputListPurchase] = useState([\r\n    {\r\n      item_id: \"\",\r\n      qty: \"\",\r\n      satuan: \"\",\r\n      harga: \"\",\r\n    },\r\n  ]);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    // if (province === \"\") {\r\n    //   setProvinceError(\"invalid\");\r\n    //   error = true;\r\n    // }\r\n    // if (city === \"\") {\r\n    //   setCityError(\"invalid\");\r\n    //   error = true;\r\n    // }\r\n    // if (address === \"\") {\r\n    //   setAddressError(\"invalid\");\r\n    //   error = true;\r\n    // }\r\n    // if (phoneNumber === \"\") {\r\n    //   setPhoneNumberError(\"invalid\");\r\n    //   error = true;\r\n    // }\r\n    // if (fax === \"\") {\r\n    //   setFaxError(\"invalid\");\r\n    //   error = true;\r\n    // }\r\n    // if (npwp === \"\") {\r\n    //   setNpwpError(\"invalid\");\r\n    //   error = true;\r\n    // }\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getItem();\r\n    getPerson();\r\n    getSatuan();\r\n    getJangkaWaktu();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getItem();\r\n  }, [typeItemId, setTypeItemId]);\r\n\r\n  const getItem = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/items/type`,\r\n        {\r\n          params: {\r\n            warehouse_id: warehouse,\r\n            type: typeItemId,\r\n          },\r\n        },\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        setItems(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getPerson = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/person/list`, { headers })\r\n      .then((data) => {\r\n        setPersons(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getSatuan = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/uom/list`, { headers })\r\n      .then((data) => {\r\n        setAllSatuan(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getJangkaWaktu = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/jwkredit/list`, { headers })\r\n      .then((data) => {\r\n        setAllJangkaWaktu(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  // handle input change\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...inputList];\r\n    list[index][name] =\r\n      name === \"keterangan_fisik\"\r\n        ? value\r\n        : name === \"harga\"\r\n        ? parseFloat(value)\r\n        : parseInt(value);\r\n    setInputList(list);\r\n  };\r\n\r\n  // handle input change\r\n  const handleInputChangePurchase = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...inputListPurcahse];\r\n    list[index][name] = name === \"harga\" ? parseFloat(value) : parseInt(value);\r\n    setInputListPurchase(list);\r\n  };\r\n\r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...inputList];\r\n    list.splice(index, 1);\r\n    setInputList(list);\r\n  };\r\n\r\n  // handle click event of the Add button\r\n  const handleAddClick = () => {\r\n    setInputList([\r\n      ...inputList,\r\n      {\r\n        item_id: \"\",\r\n        qty: \"\",\r\n        satuan: \"\",\r\n        harga: \"\",\r\n        qty_fisik: \"\",\r\n        keterangan_fisik: \"\",\r\n      },\r\n    ]);\r\n  };\r\n\r\n  function CreateData() {\r\n    if (role === \"ROLE_KARYAWAN\" && namaDepartment === \"Purchase\") {\r\n      let data = {\r\n        warehouse_id: parseInt(warehouse),\r\n        username_po: usernamePo,\r\n        payment_method: 1,\r\n        jangka_waktu: parseInt(jangkaWaktu),\r\n        keterangan_payment: descriptionPayment,\r\n        is_cicil: parseInt(isCicil),\r\n        approve: parseInt(approve),\r\n        // active_flag: 1,\r\n        po_type: 1,\r\n        keterangan_po: descriptionPo,\r\n        person: parseInt(person),\r\n        items: inputList,\r\n        username_gudang: usernamePo,\r\n        status_barang: parseInt(statusBarang),\r\n        keterangan_gudang: descriptionGudang,\r\n        username_kurir: \"\",\r\n        username_validator: usernameValidator,\r\n        clear: parseInt(clear),\r\n        keterangan_validator: descriptionValidator,\r\n        username_admin: usernameAdmin,\r\n        keterangan_admin: descriptionAdmin,\r\n        durasi_po: 0,\r\n        admin_approval: 1,\r\n      };\r\n      axios\r\n        .post(\r\n          `${process.env.REACT_APP_API_BASE_URL}/purchase-order/save`,\r\n          data,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        )\r\n        .then(function (response) {\r\n          history.push(\"/admin/po\");\r\n        })\r\n        .then((json) => {\r\n          setLoading(false);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      let data = {\r\n        warehouse_id: parseInt(warehouse),\r\n        username_po: usernamePo,\r\n        payment_method: 1,\r\n        jangka_waktu: 0,\r\n        keterangan_payment: descriptionPayment,\r\n        is_cicil: parseInt(isCicil),\r\n        approve: parseInt(approve),\r\n        username_gudang: usernamePo,\r\n        status_barang: parseInt(statusBarang),\r\n        keterangan_gudang: descriptionGudang,\r\n        username_kurir: \"\",\r\n        username_validator: usernameValidator,\r\n        clear: parseInt(clear),\r\n        keterangan_validator: descriptionValidator,\r\n        // active_flag: 1,\r\n        po_type: 1,\r\n        keterangan_po: descriptionPo,\r\n        person: parseInt(person),\r\n        items: inputList,\r\n        username_admin: usernameAdmin,\r\n        keterangan_admin: descriptionAdmin,\r\n        durasi_po: 0,\r\n        admin_approval: 1,\r\n      };\r\n      axios\r\n        .post(\r\n          `${process.env.REACT_APP_API_BASE_URL}/purchase-order/save`,\r\n          data,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        )\r\n        .then(function (response) {\r\n          history.push(\"/admin/po\");\r\n        })\r\n        .then((json) => {\r\n          setLoading(false);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      CreateData();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Daftar Purchase Order\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            {role === \"ROLE_KARYAWAN\" && namaDepartment === \"Purchase\" ? (\r\n              <Card>\r\n                <CardBody>\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <CardHeader>\r\n                      <h3>Daftar Purchase Order</h3>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Username PO\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"text\"\r\n                          name=\"po\"\r\n                          placeholder=\"Masukan Username PO\"\r\n                          value={usernamePo}\r\n                          invalid={usernamePoError === \"invalid\"}\r\n                          onChange={(e) => {\r\n                            setUsernamePo(e.target.value);\r\n                            if (e.target.value !== \"\") {\r\n                              setUsernamePoError(\"\");\r\n                            }\r\n                          }}\r\n                        />\r\n                        <FormFeedback>\r\n                          Username PO tidak boleh kosong\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan PO\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descPo\"\r\n                          placeholder=\"Masukan Keterangan PO\"\r\n                          value={descriptionPo}\r\n                          onChange={(e) => {\r\n                            setDescriptionPo(e.target.value);\r\n                          }}\r\n                        />\r\n                        <FormFeedback>\r\n                          Keterangan PO tidak boleh kosong\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Username Admin\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"text\"\r\n                          name=\"po\"\r\n                          placeholder=\"Masukan Username Admin\"\r\n                          value={usernameAdmin}\r\n                          onChange={(e) => {\r\n                            setUsernameAdmin(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan Admin\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descPo\"\r\n                          placeholder=\"Masukan Keterangan Admin\"\r\n                          value={descriptionAdmin}\r\n                          onChange={(e) => {\r\n                            setDescriptionAdmin(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan Payment\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descPayment\"\r\n                          placeholder=\"Masukan Keterangan Payment\"\r\n                          value={descriptionPayment}\r\n                          onChange={(e) => {\r\n                            setDescriptionPayment(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Payment Method\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          name=\"paymentMethod\"\r\n                          type=\"select\"\r\n                          value={paymentMethod}\r\n                          invalid={paymentMethodError === \"invalid\"}\r\n                          onChange={(e) => {\r\n                            setPaymentMethod(e.target.value);\r\n                            if (e.target.value !== \"\") {\r\n                              setPaymentMethodError(\"\");\r\n                            }\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Pilih Payment Method</option>\r\n                          <option value={1}>Tunia</option>\r\n                          <option value={2}>Tempo/Termin/Utang</option>\r\n                        </Input>\r\n                        <FormFeedback>\r\n                          Payment Method tidak boleh kosong\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Is Cicil\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          name=\"isCicil\"\r\n                          type=\"select\"\r\n                          value={isCicil}\r\n                          onChange={(e) => {\r\n                            setIsCicil(e.target.value);\r\n                          }}\r\n                        >\r\n                          <option value={0}>Pilih Cicilan</option>\r\n                          <option value={1}>Cicilan (Lunas)</option>\r\n                          <option value={2}>Cicilan (Belum Lunas)</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Jangka waktu\r\n                        </Label>\r\n                        <Input\r\n                          name=\"jangkawWaktu\"\r\n                          type=\"select\"\r\n                          value={jangkaWaktu}\r\n                          onChange={(e) => {\r\n                            setJangkuWaktu(e.target.value);\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Pilih Jangka Waktu</option>\r\n                          {allJangkaWaktu.map((waktu, key) => {\r\n                            return (\r\n                              <option key={key} value={waktu.durasi}>\r\n                                {waktu.durasi}\r\n                              </option>\r\n                            );\r\n                          })}\r\n                        </Input>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          PO Type\r\n                        </Label>\r\n                        <Input\r\n                          name=\"paymentMethod\"\r\n                          type=\"select\"\r\n                          value={poType}\r\n                          onChange={(e) => {\r\n                            setPoType(e.target.value);\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Pilih Payment Method</option>\r\n                          <option value={1}>Konvensional</option>\r\n                          <option value={2}>Indent</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Person\r\n                        </Label>\r\n                        <Input\r\n                          name=\"person\"\r\n                          type=\"select\"\r\n                          value={person}\r\n                          onChange={(e) => {\r\n                            setPerson(e.target.value);\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Pilih Person</option>\r\n                          {persons.map((person, key) => {\r\n                            return (\r\n                              <option key={key} value={person.id}>\r\n                                {person.person_name}\r\n                              </option>\r\n                            );\r\n                          })}\r\n                        </Input>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Approve\r\n                        </Label>\r\n                        <Row>\r\n                          <Col>\r\n                            <div style={{ display: \"flex\" }}>\r\n                              <div className=\"custom-control custom-radio mb-3\">\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio8\"\r\n                                  name=\"custom-radio-3\"\r\n                                  type=\"radio\"\r\n                                  value={1}\r\n                                  checked={approve === 1}\r\n                                  onChange={() => setApprove(1)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio8\"\r\n                                >\r\n                                  Disetujui\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio9\"\r\n                                  name=\"custom-radio-3\"\r\n                                  type=\"radio\"\r\n                                  value={2}\r\n                                  checked={approve === 2}\r\n                                  onChange={() => setApprove(2)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio9\"\r\n                                >\r\n                                  Ditolak\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio10\"\r\n                                  name=\"custom-radio-3\"\r\n                                  type=\"radio\"\r\n                                  value={3}\r\n                                  checked={approve === 3}\r\n                                  onChange={() => setApprove(3)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio10\"\r\n                                >\r\n                                  Dibatalkan\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </FormGroup>\r\n                      {inputList.map((x, i) => {\r\n                        return (\r\n                          <div className=\"box\" key={i}>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Tipe Item\r\n                              </Label>\r\n                              <Input\r\n                                name=\"item_id\"\r\n                                type=\"select\"\r\n                                onChange={(event) =>\r\n                                  setTypeItemId(event.target.value)\r\n                                }\r\n                              >\r\n                                <option value=\"1\">Barang Mentah</option>\r\n                                <option value=\"2\">Barang Produksi</option>\r\n                              </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Item\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                name=\"item_id\"\r\n                                type=\"select\"\r\n                                value={x.item_id}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Item</option>\r\n                                {items.map((item, key) => {\r\n                                  return (\r\n                                    <option key={key} value={item.id}>\r\n                                      {item.item_name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                              <FormFeedback>\r\n                                Item tidak boleh kosong\r\n                              </FormFeedback>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Quality\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"qty\"\r\n                                placeholder=\"Masukan Quality\"\r\n                                value={x.qty}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Satuan\r\n                              </Label>\r\n                              <Input\r\n                                name=\"satuan\"\r\n                                type=\"select\"\r\n                                value={x.satuan}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Satuan</option>\r\n                                {allSatuan.map((satuan, key) => {\r\n                                  return (\r\n                                    <option key={key} value={satuan.id}>\r\n                                      {satuan.uom_code}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </FormGroup>\r\n                            {/* <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Person\r\n                              </Label>\r\n                              <Input\r\n                                name=\"person\"\r\n                                type=\"select\"\r\n                                value={x.person}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Person</option>\r\n                                {persons.map((person, key) => {\r\n                                  return (\r\n                                    <option key={key} value={person.id}>\r\n                                      {person.person_name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </FormGroup> */}\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Harga\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"harga\"\r\n                                placeholder=\"Masukan Harga\"\r\n                                value={x.harga}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Quality Fisik\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"qty_fisik\"\r\n                                placeholder=\"Masukan Quality Fidik\"\r\n                                value={x.qty_fisik}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Keterangan Fisik\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"keterangan_fisik\"\r\n                                placeholder=\"Masukan Keterangna Fisik\"\r\n                                value={x.keterangan_fisik}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <div className=\"btn-box\">\r\n                              {inputList.length !== 1 && (\r\n                                <Button\r\n                                  color=\"default\"\r\n                                  onClick={() => handleRemoveClick(i)}\r\n                                >\r\n                                  Remove\r\n                                </Button>\r\n                              )}\r\n                              {inputList.length - 1 === i && (\r\n                                <Button\r\n                                  color=\"default\"\r\n                                  onClick={handleAddClick}\r\n                                >\r\n                                  Add\r\n                                </Button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </CardBody>\r\n                    <CardFooter>\r\n                      {!isLoading && (\r\n                        <Button color=\"primary\" type=\"submit\">\r\n                          Simpan\r\n                        </Button>\r\n                      )}\r\n                      {isLoading && (\r\n                        <Button color=\"primary\" disabled>\r\n                          <i className=\"fas fa-spinner fa-spin\"></i>\r\n                          {\"\"}\r\n                          loading...\r\n                        </Button>\r\n                      )}\r\n                      <Link className=\"btn btn-info\" to=\"/admin/po\">\r\n                        Kembali\r\n                      </Link>\r\n                    </CardFooter>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            ) : (\r\n              <Card>\r\n                <CardBody>\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <CardHeader>\r\n                      <h3>Daftar Purchase Order</h3>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Username PO\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"text\"\r\n                          name=\"po\"\r\n                          placeholder=\"Masukan Username PO\"\r\n                          value={usernamePo}\r\n                          invalid={usernamePoError === \"invalid\"}\r\n                          onChange={(e) => {\r\n                            setUsernamePo(e.target.value);\r\n                            if (e.target.value !== \"\") {\r\n                              setUsernamePoError(\"\");\r\n                            }\r\n                          }}\r\n                        />\r\n                        <FormFeedback>\r\n                          Username PO tidak boleh kosong\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan PO\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descPo\"\r\n                          placeholder=\"Masukan Keterangan PO\"\r\n                          value={descriptionPo}\r\n                          onChange={(e) => {\r\n                            setDescriptionPo(e.target.value);\r\n                          }}\r\n                        />\r\n                        <FormFeedback>\r\n                          Keterangan PO tidak boleh kosong\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Username Validator\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"usernameValidation\"\r\n                          placeholder=\"Masukan Username Validator\"\r\n                          value={usernameValidator}\r\n                          invalid={usernameValidatorError === \"invalid\"}\r\n                          onChange={(e) => {\r\n                            setUsernameValidator(e.target.value);\r\n                            if (e.target.value !== \"\") {\r\n                              setUsernameValidatorError(\"\");\r\n                            }\r\n                          }}\r\n                        />\r\n                        <FormFeedback>\r\n                          Username Validator tidak boleh kosong\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan Validator\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descValidator\"\r\n                          placeholder=\"Masukan Keterangan Validator\"\r\n                          value={descriptionValidator}\r\n                          onChange={(e) => {\r\n                            setDescriptionValidator(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Username Gudang\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"usernameGudang\"\r\n                          placeholder=\"Masukan Username Gudang\"\r\n                          value={usernammeGudang}\r\n                          invalid={usernammeGudangError === \"invalid\"}\r\n                          onChange={(e) => {\r\n                            setUsernameGudang(e.target.value);\r\n                            if (e.target.value !== \"\") {\r\n                              setUsernameGudangError(\"\");\r\n                            }\r\n                          }}\r\n                        />\r\n                        <FormFeedback>\r\n                          Username Gudang tidak boleh kosong\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan Gudang\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descGudang\"\r\n                          placeholder=\"Masukan Keterangan Gudang\"\r\n                          value={descriptionGudang}\r\n                          onChange={(e) => {\r\n                            setDescriptionGudang(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan Payment\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descPayment\"\r\n                          placeholder=\"Masukan Keterangan Payment\"\r\n                          value={descriptionPayment}\r\n                          onChange={(e) => {\r\n                            setDescriptionPayment(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Payment Method\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          name=\"paymentMethod\"\r\n                          type=\"select\"\r\n                          value={paymentMethod}\r\n                          invalid={paymentMethodError === \"invalid\"}\r\n                          onChange={(e) => {\r\n                            setPaymentMethod(e.target.value);\r\n                            if (e.target.value !== \"\") {\r\n                              setPaymentMethodError(\"\");\r\n                            }\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Pilih Payment Method</option>\r\n                          <option value={1}>Tunia</option>\r\n                          <option value={2}>Tempo/Termin/Utang</option>\r\n                        </Input>\r\n                        <FormFeedback>\r\n                          Payment Method tidak boleh kosong\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Is Cicil\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          name=\"isCicil\"\r\n                          type=\"select\"\r\n                          value={isCicil}\r\n                          onChange={(e) => {\r\n                            setIsCicil(e.target.value);\r\n                          }}\r\n                        >\r\n                          <option value={0}>Pilih Cicilan</option>\r\n                          <option value={1}>Cicilan (Lunas)</option>\r\n                          <option value={2}>Cicilan (Belum Lunas)</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          PO Type\r\n                        </Label>\r\n                        <Input\r\n                          name=\"paymentMethod\"\r\n                          type=\"select\"\r\n                          value={poType}\r\n                          onChange={(e) => {\r\n                            setPoType(e.target.value);\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Pilih Payment Method</option>\r\n                          <option value={1}>Konvensional</option>\r\n                          <option value={2}>Indent</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Person\r\n                        </Label>\r\n                        <Input\r\n                          name=\"person\"\r\n                          type=\"select\"\r\n                          value={person}\r\n                          onChange={(e) => {\r\n                            setPerson(e.target.value);\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Pilih Person</option>\r\n                          {persons.map((person, key) => {\r\n                            return (\r\n                              <option key={key} value={person.id}>\r\n                                {person.person_name}\r\n                              </option>\r\n                            );\r\n                          })}\r\n                        </Input>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Clear\r\n                        </Label>\r\n                        <Row>\r\n                          <Col>\r\n                            <div style={{ display: \"flex\" }}>\r\n                              <div className=\"custom-control custom-radio mb-3\">\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio5\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={1}\r\n                                  checked={clear === 1}\r\n                                  onChange={() => setClear(1)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio5\"\r\n                                  check\r\n                                >\r\n                                  Disetujui\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio6\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={2}\r\n                                  checked={clear === 2}\r\n                                  onChange={() => setClear(2)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio6\"\r\n                                  check\r\n                                >\r\n                                  Ditolak\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio7\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={3}\r\n                                  checked={clear === 3}\r\n                                  onChange={() => setClear(3)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio7\"\r\n                                  check\r\n                                >\r\n                                  Dibatalkan\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Approve\r\n                        </Label>\r\n                        <Row>\r\n                          <Col>\r\n                            <div style={{ display: \"flex\" }}>\r\n                              <div className=\"custom-control custom-radio mb-3\">\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio8\"\r\n                                  name=\"custom-radio-3\"\r\n                                  type=\"radio\"\r\n                                  value={1}\r\n                                  checked={approve === 1}\r\n                                  onChange={() => setApprove(1)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio8\"\r\n                                >\r\n                                  Disetujui\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio9\"\r\n                                  name=\"custom-radio-3\"\r\n                                  type=\"radio\"\r\n                                  value={2}\r\n                                  checked={approve === 2}\r\n                                  onChange={() => setApprove(2)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio9\"\r\n                                >\r\n                                  Ditolak\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio10\"\r\n                                  name=\"custom-radio-3\"\r\n                                  type=\"radio\"\r\n                                  value={3}\r\n                                  checked={approve === 3}\r\n                                  onChange={() => setApprove(3)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio10\"\r\n                                >\r\n                                  Dibatalkan\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Status Barang\r\n                        </Label>\r\n                        <Row>\r\n                          <Col>\r\n                            <div style={{ display: \"flex\" }}>\r\n                              <div className=\"custom-control custom-radio mb-3\">\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio11\"\r\n                                  name=\"custom-radio-4\"\r\n                                  type=\"radio\"\r\n                                  value={1}\r\n                                  checked={statusBarang === 1}\r\n                                  onChange={() => setStatusBarang(1)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio11\"\r\n                                >\r\n                                  Diterima\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio12\"\r\n                                  name=\"custom-radio-4\"\r\n                                  type=\"radio\"\r\n                                  value={2}\r\n                                  checked={statusBarang === 2}\r\n                                  onChange={() => setStatusBarang(2)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio12\"\r\n                                >\r\n                                  Ditolak\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio13\"\r\n                                  name=\"custom-radio-4\"\r\n                                  type=\"radio\"\r\n                                  value={3}\r\n                                  checked={statusBarang === 3}\r\n                                  onChange={() => setStatusBarang(3)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio13\"\r\n                                >\r\n                                  Dibatalkan\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </FormGroup>\r\n                      {inputList.map((x, i) => {\r\n                        return (\r\n                          <div className=\"box\" key={i}>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Tipe Item\r\n                              </Label>\r\n                              <Input\r\n                                name=\"item_id\"\r\n                                type=\"select\"\r\n                                onChange={(event) =>\r\n                                  setTypeItemId(event.target.value)\r\n                                }\r\n                              >\r\n                                <option value=\"1\">Barang Mentah</option>\r\n                                <option value=\"2\">Barang Produksi</option>\r\n                              </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Item\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                name=\"item_id\"\r\n                                type=\"select\"\r\n                                value={x.item_id}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Item</option>\r\n                                {items.map((item, key) => {\r\n                                  return (\r\n                                    <option key={key} value={item.id}>\r\n                                      {item.item_name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                              <FormFeedback>\r\n                                Item tidak boleh kosong\r\n                              </FormFeedback>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Quality\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"qty\"\r\n                                placeholder=\"Masukan Quality\"\r\n                                value={x.qty}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Satuan\r\n                              </Label>\r\n                              <Input\r\n                                name=\"satuan\"\r\n                                type=\"select\"\r\n                                value={x.satuan}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Satuan</option>\r\n                                {allSatuan.map((satuan, key) => {\r\n                                  return (\r\n                                    <option key={key} value={satuan.id}>\r\n                                      {satuan.uom_code}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </FormGroup>\r\n                            {/* <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Person\r\n                              </Label>\r\n                              <Input\r\n                                name=\"person\"\r\n                                type=\"select\"\r\n                                value={x.person}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Person</option>\r\n                                {persons.map((person, key) => {\r\n                                  return (\r\n                                    <option key={key} value={person.id}>\r\n                                      {person.person_name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </FormGroup> */}\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Harga\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"harga\"\r\n                                placeholder=\"Masukan Harga\"\r\n                                value={x.harga}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Quality Fisik\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"qty_fisik\"\r\n                                placeholder=\"Masukan Quality Fidik\"\r\n                                value={x.qty_fisik}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Keterangan Fisik\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"keterangan_fisik\"\r\n                                placeholder=\"Masukan Keterangna Fisik\"\r\n                                value={x.keterangan_fisik}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <div className=\"btn-box\">\r\n                              {inputList.length !== 1 && (\r\n                                <Button\r\n                                  color=\"default\"\r\n                                  onClick={() => handleRemoveClick(i)}\r\n                                >\r\n                                  Remove\r\n                                </Button>\r\n                              )}\r\n                              {inputList.length - 1 === i && (\r\n                                <Button\r\n                                  color=\"default\"\r\n                                  onClick={handleAddClick}\r\n                                >\r\n                                  Add\r\n                                </Button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </CardBody>\r\n                    <CardFooter>\r\n                      {!isLoading && (\r\n                        <Button color=\"primary\" type=\"submit\">\r\n                          Simpan\r\n                        </Button>\r\n                      )}\r\n                      {isLoading && (\r\n                        <Button color=\"primary\" disabled>\r\n                          <i className=\"fas fa-spinner fa-spin\"></i>\r\n                          {\"\"}\r\n                          loading...\r\n                        </Button>\r\n                      )}\r\n                      <Link className=\"btn btn-info\" to=\"/admin/po\">\r\n                        Kembali\r\n                      </Link>\r\n                    </CardFooter>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  TabContent,\r\n  TabPane\r\n} from \"reactstrap\";\r\n\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport classnames from 'classnames';\r\n\r\nimport PenawaranPo from \"views/pages/po/PenawaranPo/Index.js\";\r\nimport ValidatorPo from \"views/pages/po/ValidatorPo/Index.js\";\r\nimport AdminApprovePo from \"views/pages/po/AdminApprove/Index.js\";\r\nimport ValidasiPo from \"views/pages/po/ValidasiPo/Index.js\";\r\n\r\nexport default function Item() {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Purchase Order\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Nav tabs>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '1' })}\r\n                      onClick={() => { toggle('1'); }}\r\n                    >\r\n                      Penawaran PO\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '2' })}\r\n                      onClick={() => { toggle('2'); }}\r\n                    >\r\n                      Validasi Penawaran PO\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '3' })}\r\n                      onClick={() => { toggle('3'); }}\r\n                    >\r\n                      Validasi Admin PO\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '4' })}\r\n                      onClick={() => { toggle('4'); }}\r\n                    >\r\n                      Validasi Pimpinan\r\n                    </NavLink>\r\n                  </NavItem>\r\n                </Nav>\r\n                <TabContent activeTab={activeTab}>\r\n                  <TabPane tabId=\"1\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <PenawaranPo />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                  <TabPane tabId=\"2\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <ValidasiPo />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                  <TabPane tabId=\"3\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <AdminApprovePo />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                  <TabPane tabId=\"4\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <ValidatorPo />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                </TabContent>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  TabContent,\r\n  TabPane\r\n} from \"reactstrap\";\r\n\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport classnames from 'classnames';\r\n\r\nimport MemoKurirPo from \"./MemoKurirPo/Index.js\";\r\nimport ValidasiAdminPo from \"./ValidasiAdminPo/Index.js\";\r\n\r\nexport default function Item() {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Memo Kurir PO\" parentName=\"PO\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Nav tabs>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '1' })}\r\n                      onClick={() => { toggle('1'); }}\r\n                    >\r\n                      Memo Kurir PO\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '2' })}\r\n                      onClick={() => { toggle('2'); }}\r\n                    >\r\n                      Validasi Admin PO\r\n                    </NavLink>\r\n                  </NavItem>\r\n                </Nav>\r\n                <TabContent activeTab={activeTab}>\r\n                  <TabPane tabId=\"1\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <MemoKurirPo />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                  <TabPane tabId=\"2\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <ValidasiAdminPo />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                </TabContent>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  TabContent,\r\n  TabPane\r\n} from \"reactstrap\";\r\n\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport classnames from 'classnames';\r\n\r\nimport ReceivingPo from \"./ReceivingPo/Index\";\r\nimport ValidasiReceivingPo from \"./ValidasiReceivingPo/Index\";\r\n\r\n// import MemoKurirPo from \"./MemoKurirPo/Index.js\";\r\n// import ValidasiAdminPo from \"./ValidasiAdminPo/Index.js\";\r\n\r\n\r\nexport default function Item() {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Receiving PO\" parentName=\"PO\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Nav tabs>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '1' })}\r\n                      onClick={() => { toggle('1'); }}\r\n                    >\r\n                      Receiving PO\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '2' })}\r\n                      onClick={() => { toggle('2'); }}\r\n                    >\r\n                      Validasi Receiving PO\r\n                    </NavLink>\r\n                  </NavItem>\r\n                </Nav>\r\n                <TabContent activeTab={activeTab}>\r\n                  <TabPane tabId=\"1\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <ReceivingPo />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                  <TabPane tabId=\"2\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <ValidasiReceivingPo />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                </TabContent>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  TabContent,\r\n  TabPane\r\n} from \"reactstrap\";\r\n\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport classnames from 'classnames';\r\n\r\nimport InvoicePO from \"./InvoicePo/Index\";\r\nimport ValidasiAdminFinance from \"./ValidasiAdminFinance/Index\";\r\nimport ValidasiPimpinan from \"./ValidasiPimpinan/Index\";\r\nimport HistoryInvoicePo from \"./HistoryInvoice/Index\";\r\n\r\n\r\n\r\nexport default function Item() {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"invoice PO\" parentName=\"PO\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Nav tabs>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '1' })}\r\n                      onClick={() => { toggle('1'); }}\r\n                    >\r\n                      Invoice PO\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '2' })}\r\n                      onClick={() => { toggle('2'); }}\r\n                    >\r\n                      Validasi Admin Finance\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '3' })}\r\n                      onClick={() => { toggle('3'); }}\r\n                    >\r\n                      Validasi Pimpinan\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '4' })}\r\n                      onClick={() => { toggle('4'); }}\r\n                    >\r\n                      History Invoice PO\r\n                    </NavLink>\r\n                  </NavItem>\r\n                </Nav>\r\n                <TabContent activeTab={activeTab}>\r\n                  <TabPane tabId=\"1\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <InvoicePO />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                  <TabPane tabId=\"2\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <ValidasiAdminFinance />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                  <TabPane tabId=\"3\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <ValidasiPimpinan />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                  <TabPane tabId=\"4\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <HistoryInvoicePo />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>  \r\n                </TabContent>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  TabContent,\r\n  TabPane\r\n} from \"reactstrap\";\r\n\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport classnames from 'classnames';\r\nimport BuktiKasKeluar from \"./BuktiKasKeluar/Index\";\r\nimport ValidasiKepalaFinance from \"./ValidasiKepalaFinance/Index\";\r\nimport ValidasiPimpinan from \"./ValidasiPimpinan/Index\";\r\nimport HistoryBuktiKasKeluar from \"./HistoryBkk/Index\";\r\n\r\n\r\n\r\n\r\nexport default function BKK() {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Bukti Kas Keluar\" parentName=\"PO\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Nav tabs>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '1' })}\r\n                      onClick={() => { toggle('1'); }}\r\n                    >\r\n                      Bukti Kas Keluar\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '2' })}\r\n                      onClick={() => { toggle('2'); }}\r\n                    >\r\n                      Validasi Kepala Finance\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '3' })}\r\n                      onClick={() => { toggle('3'); }}\r\n                    >\r\n                      Validasi Pimpinan\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '4' })}\r\n                      onClick={() => { toggle('4'); }}\r\n                    >\r\n                      History Bukti Kas Keluar\r\n                    </NavLink>\r\n                  </NavItem>\r\n                </Nav>\r\n                <TabContent activeTab={activeTab}>\r\n                  <TabPane tabId=\"1\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <BuktiKasKeluar />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                  <TabPane tabId=\"2\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <ValidasiKepalaFinance />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                  <TabPane tabId=\"3\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <ValidasiPimpinan />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                  <TabPane tabId=\"4\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <HistoryBuktiKasKeluar />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                </TabContent>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form,\r\n  FormFeedback,\r\n} from 'reactstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport SimpleHeader from 'components/Headers/SimpleHeader.js';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default function Create() {\r\n  const token = localStorage.token;\r\n  const warehouse = localStorage.warehouse;\r\n  let poItems;\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    Authorization: `Bearer ${token}`,\r\n  };\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [kodePo, setKodePo] = useState('');\r\n  const [dataPo, setDataPo] = useState('');\r\n  const [dataPoItems, setDataPoItems] = useState('');\r\n  const initialReturItems = {\r\n    item_id: '',\r\n    qty: '',\r\n    keterangan: '',\r\n  };\r\n  const [dataReturItems, setDataReturItems] = useState([initialReturItems]);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  // handle input change item\r\n  const onInputChangeItem = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...dataReturItems];\r\n    list[index][name] = value;\r\n    setDataReturItems(list);\r\n  };\r\n\r\n  // handle input change\r\n  const onInputChange = (type, val) => {\r\n    setDataPo((prevState) => ({\r\n      ...prevState,\r\n      [type]: val,\r\n    }));\r\n  };\r\n\r\n  const postReturPo = async () => {\r\n    setLoading(true);\r\n    const payload = {\r\n      warehouse_id: dataPo.warehouse_id,\r\n      username_po: dataPo.username_po,\r\n      item_or_money: parseInt(dataPo.item_or_money),\r\n      payment_method: dataPo.payment_method,\r\n      keterangan_payment: dataPo.keterangan_payment,\r\n      is_cicil: dataPo.is_cicil,\r\n      username_gudang: dataPo.username_gudang,\r\n      status_barang: dataPo.status_barang,\r\n      keterangan_gudang: dataPo.keterangan_gudang,\r\n      username_kurir: dataPo.username_kurir,\r\n      person: dataPo.person,\r\n      username_validator: dataPo.username_validator,\r\n      username_manajer: '',\r\n      manajer_approval: 0,\r\n      keterangan_manajer: '',\r\n      clear: dataPo.clear,\r\n      keterangan_validator: dataPo.keterangan_validator,\r\n      active_flag: dataPo.active_flag,\r\n      po_type: dataPo.po_type,\r\n      keterangan_po: dataPo.keterangan_po,\r\n      items: dataPo.item_or_money === 2 ? dataPo.items : dataReturItems,\r\n      retur_code: dataPo.order_code,\r\n    };\r\n    await axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/retur-po/save`, payload, {\r\n        headers,\r\n      })\r\n      .then(function (response) {\r\n        history.push('/admin/po-return');\r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleSearchPO = async () => {\r\n    await axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/purchase-order/get?order_code=${kodePo}`,\r\n        {\r\n          headers,\r\n        }\r\n      )\r\n      .then(async (data) => {\r\n        await getPoItems(data.data.response_data.id);\r\n        const mergeItems = {\r\n          ...data.data.response_data,\r\n          items: poItems,\r\n        };\r\n        setDataPo(mergeItems);\r\n        if (!data.data.status) {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Gagal',\r\n            text: 'Maaf, Data PO tidak ditemukan',\r\n          });\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Gagal',\r\n          text: 'Maaf, Data PO tidak ditemukan',\r\n        });\r\n      });\r\n  };\r\n\r\n  const getPoItems = async (po_id) => {\r\n    await axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/purchase-order/po-items`,\r\n        { po_id: po_id },\r\n        {\r\n          headers,\r\n        }\r\n      )\r\n      .then((data) => {\r\n        setDataPoItems(data.data.response_data);\r\n        const constructItems = [];\r\n        data.data.response_data.map((key) => {\r\n          constructItems.push({\r\n            item_id: key.item_id,\r\n            qty: key.qty,\r\n            keterangan: '',\r\n          });\r\n        });\r\n        poItems = constructItems;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      postReturPo();\r\n    }\r\n  };\r\n\r\n  const onAddItem = () => {\r\n    setDataReturItems([...dataReturItems, initialReturItems]);\r\n  };\r\n\r\n  const onRemoveItem = (index) => {\r\n    const list = [...dataReturItems];\r\n    list.splice(index, 1);\r\n    setDataReturItems(list);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Daftar Purchase Order Return\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <CardHeader>\r\n                    <h3>Daftar Purchase Order Return</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Kode Purchase Order\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"codePo\"\r\n                        placeholder=\"Masukan Kode Purchase Order\"\r\n                        value={kodePo}\r\n                        onChange={(e) => {\r\n                          setKodePo(e.target.value);\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Kode Purchase Order tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      style={{ marginBottom: 12 }}\r\n                      onClick={handleSearchPO}\r\n                    >\r\n                      Cari\r\n                    </Button>\r\n                    {dataPo && (\r\n                      <div>\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">\r\n                            Username PO\r\n                          </Label>\r\n                          <Input\r\n                            disabled\r\n                            type=\"text\"\r\n                            value={dataPo?.username_po}\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">\r\n                            Keterangan PO\r\n                          </Label>\r\n                          <Input\r\n                            disabled\r\n                            type=\"text\"\r\n                            value={dataPo?.keterangan_po}\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">\r\n                            Username Validator\r\n                          </Label>\r\n                          <Input\r\n                            disabled\r\n                            type=\"text\"\r\n                            value={dataPo?.username_validator}\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">\r\n                            Keterangan Validator\r\n                          </Label>\r\n                          <Input\r\n                            disabled\r\n                            type=\"text\"\r\n                            value={dataPo?.keterangan_validator}\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">\r\n                            Username Gudang\r\n                          </Label>\r\n                          <Input\r\n                            disabled\r\n                            type=\"text\"\r\n                            value={dataPo?.username_gudang}\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">\r\n                            Keterangan Payment\r\n                          </Label>\r\n                          <Input\r\n                            disabled\r\n                            type=\"text\"\r\n                            value={dataPo?.keterangan_payment}\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">\r\n                            Payment Method\r\n                          </Label>\r\n                          <Input\r\n                            disabled\r\n                            type=\"text\"\r\n                            value={\r\n                              dataPo?.payment_method === 1\r\n                                ? 'Tunai'\r\n                                : 'Tempo / Termin / Utang'\r\n                            }\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">Is Cicil</Label>\r\n                          <Input\r\n                            disabled\r\n                            type=\"text\"\r\n                            value={\r\n                              dataPo?.is_cicil === 0\r\n                                ? 'Pilih Cicilan'\r\n                                : dataPo?.is_cicil === 1\r\n                                ? 'Cicilan (Lunas)'\r\n                                : 'Cicilan (Belum Lunas)'\r\n                            }\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\"> PO Type</Label>\r\n                          <Input\r\n                            disabled\r\n                            type=\"text\"\r\n                            value={\r\n                              dataPo?.is_cicil === 1\r\n                                ? 'Konvensional'\r\n                                : 'Cicilan (Belum Lunas)'\r\n                            }\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">Clear</Label>\r\n                          <Input\r\n                            disabled\r\n                            type=\"text\"\r\n                            value={\r\n                              dataPo?.clear === 1\r\n                                ? 'Disetujui'\r\n                                : dataPo?.clear === 2\r\n                                ? 'Ditolak'\r\n                                : 'Dibatalkan'\r\n                            }\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">Approve</Label>\r\n                          <Input\r\n                            disabled\r\n                            type=\"text\"\r\n                            value={\r\n                              dataPo?.approve === 1\r\n                                ? 'Disetujui'\r\n                                : dataPo?.approve === 2\r\n                                ? 'Ditolak'\r\n                                : 'Dibatalkan'\r\n                            }\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">\r\n                            Status Barang\r\n                          </Label>\r\n                          <Input\r\n                            disabled\r\n                            type=\"text\"\r\n                            value={\r\n                              dataPo?.status_barang === 1\r\n                                ? 'Disetujui'\r\n                                : dataPo?.status_barang === 2\r\n                                ? 'Ditolak'\r\n                                : 'Dibatalkan'\r\n                            }\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">Qty</Label>\r\n                          <Input\r\n                            disabled\r\n                            type=\"text\"\r\n                            value={dataPo?.total_qty}\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">Harga</Label>\r\n                          <Input\r\n                            disabled\r\n                            type=\"text\"\r\n                            value={dataPo?.total_price}\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">\r\n                            Total Qty Fisik\r\n                          </Label>\r\n                          <Input\r\n                            disabled\r\n                            type=\"text\"\r\n                            value={dataPo?.total_qty_fisik}\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">\r\n                            Total Harga Fisik\r\n                          </Label>\r\n                          <Input\r\n                            disabled\r\n                            type=\"text\"\r\n                            value={dataPo?.total_price_fisik}\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label\r\n                            className=\"form-control-label\"\r\n                            htmlFor=\"exampleFormControlSelect3\"\r\n                          >\r\n                            Item or Money\r\n                          </Label>\r\n                          <Input\r\n                            name=\"item_or_money\"\r\n                            type=\"select\"\r\n                            onChange={(e) =>\r\n                              onInputChange('item_or_money', e.target.value)\r\n                            }\r\n                          >\r\n                            <option value=\"0\">Pilih</option>\r\n                            <option value={1}>Item</option>\r\n                            <option value={2}>Money</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                        {parseInt(dataPo.item_or_money) === 1 &&\r\n                          dataReturItems.map((x, i) => {\r\n                            return (\r\n                              <div key={i}>\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    className=\"form-control-label\"\r\n                                    htmlFor=\"exampleFormControlSelect3\"\r\n                                  >\r\n                                    Item\r\n                                  </Label>\r\n                                  <Input\r\n                                    name=\"item_id\"\r\n                                    type=\"select\"\r\n                                    onChange={(e) => {\r\n                                      onInputChangeItem(e, i);\r\n                                    }}\r\n                                  >\r\n                                    <option value=\"0\">Pilih Item</option>\r\n                                    {dataPoItems.map((item, key) => {\r\n                                      return (\r\n                                        <option key={key} value={item.item_id}>\r\n                                          {item.item_name}\r\n                                        </option>\r\n                                      );\r\n                                    })}\r\n                                  </Input>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                  <Label className=\"form-control-label\">\r\n                                    Quantity\r\n                                  </Label>\r\n                                  <Input\r\n                                    type=\"text\"\r\n                                    name=\"qty\"\r\n                                    placeholder=\"Masukan Quantity yang Akan di Retur\"\r\n                                    value={dataReturItems.qty}\r\n                                    onChange={(e) => onInputChangeItem(e, i)}\r\n                                  />\r\n                                </FormGroup>\r\n                                <div className=\"btn-box\">\r\n                                  {dataReturItems.length !== 1 && (\r\n                                    <Button\r\n                                      color=\"default\"\r\n                                      onClick={() => onRemoveItem(i)}\r\n                                    >\r\n                                      Remove\r\n                                    </Button>\r\n                                  )}\r\n                                  {dataReturItems.length - 1 === i && (\r\n                                    <Button color=\"default\" onClick={onAddItem}>\r\n                                      Add\r\n                                    </Button>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                            );\r\n                          })}\r\n                      </div>\r\n                    )}\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        Simpan\r\n                      </Button>\r\n                    )}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {''}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/po-return\">\r\n                      Kembali\r\n                    </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form,\r\n  FormFeedback,\r\n} from 'reactstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport SimpleHeader from 'components/Headers/SimpleHeader.js';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default function Edit(props) {\r\n  const token = localStorage.token;\r\n  const warehouse = localStorage.warehouse;\r\n  let poItems;\r\n  let poId;\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    Authorization: `Bearer ${token}`,\r\n  };\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [dataPoRetur, setDataPoRetur] = useState('');\r\n  const [dataPoItems, setDataPoItems] = useState('');\r\n  const initialReturItems = {\r\n    item_id: '',\r\n    qty: '',\r\n    keterangan: '',\r\n  };\r\n  const [dataReturItems, setDataReturItems] = useState([initialReturItems]);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getById();\r\n  }, []);\r\n\r\n  // handle input change item\r\n  const onInputChangeItem = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...dataReturItems];\r\n    list[index][name] = value;\r\n    setDataReturItems(list);\r\n  };\r\n\r\n  // handle input change\r\n  const onInputChange = (type, val) => {\r\n    setDataPoRetur((prevState) => ({\r\n      ...prevState,\r\n      [type]: val,\r\n    }));\r\n  };\r\n\r\n  const getById = () => {\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/retur-po/get/${props.match.params.id}`,\r\n        { headers }\r\n      )\r\n      .then(async (data) => {\r\n        await getPo(data.data.response_data.retur_code);\r\n        await getPoItems(poId);\r\n\r\n        const mergeItems = {\r\n          ...data.data.response_data,\r\n          items: poItems,\r\n        };\r\n        setDataPoRetur(mergeItems);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getPo = async (kodePo) => {\r\n    await axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/purchase-order/get?order_code=${kodePo}`,\r\n        {\r\n          headers,\r\n        }\r\n      )\r\n      .then((data) => {\r\n        poId = data.data.response_data.id;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getPoItems = async (po_id) => {\r\n    await axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/purchase-order/po-items`,\r\n        { po_id: po_id },\r\n        {\r\n          headers,\r\n        }\r\n      )\r\n      .then((data) => {\r\n        setDataPoItems(data.data.response_data);\r\n        const constructItems = [];\r\n        data.data.response_data.map((key) => {\r\n          constructItems.push({\r\n            item_id: key.item_id,\r\n            qty: key.qty,\r\n            keterangan: '',\r\n          });\r\n        });\r\n        poItems = constructItems;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const updateReturPo = async () => {\r\n    setLoading(true);\r\n    const payload = {\r\n      warehouse_id: dataPoRetur.warehouse_id,\r\n      username_po: dataPoRetur.username_po,\r\n      item_or_money: parseInt(dataPoRetur.item_or_money),\r\n      payment_method: dataPoRetur.payment_method,\r\n      keterangan_payment: dataPoRetur.keterangan_payment,\r\n      is_cicil: dataPoRetur.is_cicil,\r\n      username_gudang: dataPoRetur.username_gudang,\r\n      status_barang: dataPoRetur.status_barang,\r\n      keterangan_gudang: dataPoRetur.keterangan_gudang,\r\n      username_kurir: dataPoRetur.username_kurir,\r\n      person: dataPoRetur.person,\r\n      username_validator: dataPoRetur.username_validator,\r\n      username_manajer: '',\r\n      manajer_approval: 0,\r\n      keterangan_manajer: '',\r\n      clear: dataPoRetur.clear,\r\n      keterangan_validator: dataPoRetur.keterangan_validator,\r\n      active_flag: dataPoRetur.active_flag,\r\n      po_type: dataPoRetur.po_type,\r\n      keterangan_po: dataPoRetur.keterangan_po,\r\n      items:\r\n        dataPoRetur.item_or_money === '2' ? dataPoRetur.items : dataReturItems,\r\n      retur_code: dataPoRetur.retur_code,\r\n    };\r\n    await axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/retur-po/update/${props.match.params.id}`,\r\n        payload,\r\n        {\r\n          headers,\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setLoading(false);\r\n        if (response.data.error?.error_code > 200) {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Gagal',\r\n            text: 'Maaf, Data PO retur gagal di simpan',\r\n          });\r\n        } else {\r\n          history.push('/admin/po-return');\r\n        }\r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const onAddItem = () => {\r\n    setDataReturItems([...dataReturItems, initialReturItems]);\r\n  };\r\n\r\n  const onRemoveItem = (index) => {\r\n    const list = [...dataReturItems];\r\n    list.splice(index, 1);\r\n    setDataReturItems(list);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      updateReturPo();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Edit Purchase Order\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <CardHeader>\r\n                    <h3>Edit Purchase Order Retur</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label className=\"form-control-label\">Username PO</Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        value={dataPoRetur?.username_po}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label className=\"form-control-label\">\r\n                        Keterangan PO\r\n                      </Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        value={dataPoRetur?.keterangan_po}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label className=\"form-control-label\">\r\n                        Username Validator\r\n                      </Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        value={dataPoRetur?.username_validator}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label className=\"form-control-label\">\r\n                        Keterangan Validator\r\n                      </Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        value={dataPoRetur?.keterangan_validator}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label className=\"form-control-label\">\r\n                        Username Gudang\r\n                      </Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        value={dataPoRetur?.username_gudang}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label className=\"form-control-label\">\r\n                        Keterangan Payment\r\n                      </Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        value={dataPoRetur?.keterangan_payment}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label className=\"form-control-label\">\r\n                        Payment Method\r\n                      </Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        value={\r\n                          dataPoRetur?.payment_method === 1\r\n                            ? 'Tunai'\r\n                            : 'Tempo / Termin / Utang'\r\n                        }\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label className=\"form-control-label\">Is Cicil</Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        value={\r\n                          dataPoRetur?.is_cicil === 0\r\n                            ? 'Pilih Cicilan'\r\n                            : dataPoRetur?.is_cicil === 1\r\n                            ? 'Cicilan (Lunas)'\r\n                            : 'Cicilan (Belum Lunas)'\r\n                        }\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label className=\"form-control-label\"> PO Type</Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        value={\r\n                          dataPoRetur?.is_cicil === 1\r\n                            ? 'Konvensional'\r\n                            : 'Cicilan (Belum Lunas)'\r\n                        }\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label className=\"form-control-label\">Clear</Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        value={\r\n                          dataPoRetur?.clear === 1\r\n                            ? 'Disetujui'\r\n                            : dataPoRetur?.clear === 2\r\n                            ? 'Ditolak'\r\n                            : 'Dibatalkan'\r\n                        }\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label className=\"form-control-label\">Approve</Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        value={\r\n                          dataPoRetur?.approve === 1\r\n                            ? 'Disetujui'\r\n                            : dataPoRetur?.approve === 2\r\n                            ? 'Ditolak'\r\n                            : 'Dibatalkan'\r\n                        }\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label className=\"form-control-label\">\r\n                        Status Barang\r\n                      </Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        value={\r\n                          dataPoRetur?.status_barang === 1\r\n                            ? 'Disetujui'\r\n                            : dataPoRetur?.status_barang === 2\r\n                            ? 'Ditolak'\r\n                            : 'Dibatalkan'\r\n                        }\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label className=\"form-control-label\">Qty</Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        value={dataPoRetur?.total_qty}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label className=\"form-control-label\">Harga</Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        value={dataPoRetur?.total_price}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label className=\"form-control-label\">\r\n                        Total Qty Fisik\r\n                      </Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        value={dataPoRetur?.total_qty_fisik}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label className=\"form-control-label\">\r\n                        Total Harga Fisik\r\n                      </Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        value={dataPoRetur?.total_price_fisik}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        Item or Money\r\n                      </Label>\r\n                      <Input\r\n                        name=\"item_or_money\"\r\n                        type=\"select\"\r\n                        onChange={(e) =>\r\n                          onInputChange('item_or_money', e.target.value)\r\n                        }\r\n                        value={dataPoRetur.item_or_money}\r\n                      >\r\n                        <option value=\"0\">Pilih</option>\r\n                        <option value=\"1\">Item</option>\r\n                        <option value=\"2\">Money</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                    {parseInt(dataPoRetur.item_or_money) === 1 &&\r\n                      dataReturItems.map((x, i) => {\r\n                        return (\r\n                          <div key={i}>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Item\r\n                              </Label>\r\n                              <Input\r\n                                name=\"item_id\"\r\n                                type=\"select\"\r\n                                onChange={(e) => {\r\n                                  onInputChangeItem(e, i);\r\n                                }}\r\n                              >\r\n                                <option value=\"0\">Pilih Item</option>\r\n                                {dataPoItems.map((item, key) => {\r\n                                  return (\r\n                                    <option key={key} value={item.item_id}>\r\n                                      {item.item_name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label className=\"form-control-label\">\r\n                                Quantity\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"qty\"\r\n                                placeholder=\"Masukan Quantity yang Akan di Retur\"\r\n                                value={dataReturItems.qty}\r\n                                onChange={(e) => onInputChangeItem(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <div className=\"btn-box\">\r\n                              {dataReturItems.length !== 1 && (\r\n                                <Button\r\n                                  color=\"default\"\r\n                                  onClick={() => onRemoveItem(i)}\r\n                                >\r\n                                  Remove\r\n                                </Button>\r\n                              )}\r\n                              {dataReturItems.length - 1 === i && (\r\n                                <Button color=\"default\" onClick={onAddItem}>\r\n                                  Add\r\n                                </Button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        Simpan\r\n                      </Button>\r\n                    )}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {''}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/po-return\">\r\n                      Kembali\r\n                    </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  TabContent,\r\n  TabPane\r\n} from \"reactstrap\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport classnames from 'classnames';\r\n\r\nimport Validasi from \"views/pages/poReturn/Validasi/Index.js\";\r\nimport AdminApprove from \"views/pages/poReturn/AdminApprove/Index.js\"\r\nimport Validator from \"views/pages/poReturn/Validator/Index.js\"\r\n\r\nexport default function Item() {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"PO Retur\" parentName=\"Purchase Order\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Nav tabs>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '1' })}\r\n                      onClick={() => { toggle('1'); }}\r\n                    >\r\n                      Admin Retur PO\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '2' })}\r\n                      onClick={() => { toggle('2'); }}\r\n                    >\r\n                      Validasi Kepala Toko\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '3' })}\r\n                      onClick={() => { toggle('3'); }}\r\n                    >\r\n                      Validasi Pemimpin\r\n                    </NavLink>\r\n                  </NavItem>\r\n                </Nav>\r\n                <TabContent activeTab={activeTab}>\r\n                  <TabPane tabId=\"1\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <Validasi />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                  <TabPane tabId=\"2\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <AdminApprove />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                  <TabPane tabId=\"3\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <Validator />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                </TabContent>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Col,\r\n  CardFooter,\r\n  Container,\r\n  Button,\r\n  Form,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\n\r\n\r\nexport default function Edit(props) {\r\n  const username = localStorage.username;\r\n  const token = localStorage.token;\r\n  const warehouse = localStorage.warehouse;\r\n  \r\n  let history = useHistory();\r\n  const [usernameso, setUsernameSo] = useState(\"\");\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [customer, setCustomer] = useState(\"\");\r\n  const [customers, setCustomers] = useState([]);\r\n  const [ordercode,setOrderCode]= useState(\"\");\r\n  const [jangkawaktu,setJangkaWaktu] = useState([]);\r\n  const [keteranganpayment,setKeteranganPayment] = useState(\"\");\r\n  const [paymentmethod,setPaymentMethod] = useState(\"\");\r\n  const [keteranganso,setKeteranganSo] = useState(\"\");\r\n  const [termin,setTermin] = useState([]);\r\n  const [soType, setSoType] = useState(\"\");\r\n  const [approve, setApprove] = useState([]);\r\n  const [adminapprove,setAdminApprove] = useState([]);\r\n  const [clear,setValidatorSo] = useState([]);\r\n  const [usernameadmin,setUsernameAdmin] = useState(\"\");\r\n  const [statusSo,setStatusSo] = useState([]);\r\n  const [durasitempo,setDurasiTempo] = useState(\"\");\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getById();\r\n      }, []);\r\n\r\n  const getById = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/sales-order/get/${props.match.params.id}`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        getSo(data.data.response_data.id);\r\n        setOrderCode(data.data.response_data.order_code);\r\n        setUsernameSo(data.data.response_data.username_so);\r\n        setPaymentMethod(data.data.response_data.payment_method);\r\n        setKeteranganSo(data.data.response_data.keterangan_so);\r\n        setJangkaWaktu(data.data.response_data.jangka_waktu);\r\n        setKeteranganPayment(data.data.response_data.keterangan_payment );\r\n        setDurasiTempo(data.data.response_data.durasitempo);\r\n        setTermin(data.data.response_data.is_cicil);\r\n        setCustomer(data.data.response_data.customer);\r\n        setSoType(data.data.response_data.so_type);\r\n        setApprove(data.data.response_data.approve);\r\n        setAdminApprove(data.data.response_data.admin_approval);\r\n        setUsernameAdmin(data.data.response_data.username_admin);\r\n        setStatusSo(data.data.response_data.so_status);\r\n        setValidatorSo(data.data.response_data.clear);\r\n\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getSo = (soId) => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const data = {\r\n      so_id: parseInt(soId),\r\n    };\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/sales-order/so-items`,\r\n        data,\r\n        {\r\n          headers,\r\n        }\r\n      )\r\n      .then((data) => {\r\n        getCustomer();\r\n\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getCustomer = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/customer/list`, { headers })\r\n      .then((data) => {\r\n        setCustomers(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, uomCode, description);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort,  uomCode, description)\r\n    }\r\n  }\r\n\r\n\r\n  function EditData() {\r\n    setLoading(true);\r\n    let data = {\r\n\r\n        warehouse_id : parseInt(warehouse),\r\n        username_so : usernameso,\r\n        payment_method : paymentmethod,\r\n        jangka_waktu : jangkawaktu,\r\n        keterangan_payment : keteranganpayment,\r\n        is_cicil: parseInt(termin),\r\n        approve: parseInt(approve),\r\n        keterangan_so: keteranganso,\r\n        username_admin: username,\r\n        admin_approval: parseInt(adminapprove),\r\n        keterangan_admin: \"\",\r\n        username_validator : username,\r\n        clear : parseInt(clear),\r\n        keterangan_validator : \"\",\r\n        username_gudang : \"\",\r\n        status_barang : 0,\r\n        keterangan_gudang : \"\",\r\n        username_kurir : \"\",\r\n        member : 1,\r\n        customer : customer,\r\n        address_id:1,\r\n        active_flag : 1,\r\n        so_type: soType,\r\n        so_status : 1,\r\n        promo_id: 0,\r\n        items : [\"\"]\r\n    };\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/sales-order/update/${props.match.params.id}`,\r\n        data,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        history.push(\"/admin/sales-order\");\r\n       \r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    {\r\n      EditData();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div> \r\n      <SimpleHeader name=\"Validasi Pemimpin\" parentName=\"SO\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Card>\r\n                <Form onSubmit={handleSubmit}> \r\n                  <CardBody>\r\n                    <Row md=\"12\">\r\n                        <Col md=\"6\">\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Kode SO\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                              disabled\r\n                                type=\"text\"\r\n                                name=\"desc\"\r\n                                placeholder=\"Masukan Keterangan PO\"\r\n                                value={ordercode}\r\n                                onChange={(e) => {\r\n                                 \r\n                                }}\r\n                              />\r\n                              \r\n                            </Col>\r\n                          </FormGroup>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                                type=\"hidden\"\r\n                                name=\"desc\"\r\n                                placeholder=\"Masukan Username So\"\r\n                                value={usernameso}\r\n                                onChange={(e) => {\r\n                                  setUsernameSo(e.target.value);\r\n                                 \r\n                                }}\r\n                              />\r\n                              \r\n                            </Col>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                                type=\"hidden\"\r\n                                name=\"desc\"\r\n                                placeholder=\"Masukan Username So\"\r\n                                value={usernameadmin}\r\n                                onChange={(e) => {\r\n                                    setUsernameAdmin(e.target.value);\r\n                                 \r\n                                }}\r\n                              />\r\n                              \r\n                            </Col>\r\n                          \r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                                Customer\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                                name=\"kategory\"\r\n                                type=\"select\"\r\n                                value={customer}\r\n                                onChange={(e) => {\r\n                                  setCustomer(e.target.value);\r\n                                }}\r\n                              >\r\n                                {customers.map((customer, key) => {\r\n                                    return (\r\n                                      <option key={key} value={customer.id}>\r\n                                        {customer.name}\r\n                                      </option>\r\n                                    );\r\n                                  })}\r\n                              </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              keterangan SO\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                              disabled\r\n                                type=\"text\"\r\n                                name=\"desc\"\r\n                                placeholder=\"Masukan Keterangan SO\"\r\n                                value={keteranganso}\r\n                                onChange={(e) => {\r\n                                  setKeteranganSo(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Status SO\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                                name=\"paymentMethod\"\r\n                                type=\"select\"\r\n                                value={statusSo}\r\n                                onChange={(e) => {\r\n                                  setSoType(e.target.value);\r\n                                }}\r\n                              >\r\n                               \r\n                                <option value={1}>Kasir</option>\r\n                                <option value={2}>Sales</option>\r\n                                <option value={3}>Canvasing</option>\r\n                              </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Tipe SO\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                                name=\"paymentMethod\"\r\n                                type=\"select\"\r\n                                value={soType}\r\n                                onChange={(e) => {\r\n                                  setSoType(e.target.value);\r\n                                }}\r\n                              >\r\n                                <option value=\"\">Pilih Payment Method</option>\r\n                                <option value={1}>Ready</option>\r\n                                <option value={2}>Indent</option>\r\n                              </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                        <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Durasi Tempo\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                                type=\"text\"\r\n                                name=\"barcode\"\r\n                                placeholder=\"Masukan Durasi Tempo\"\r\n                                value={durasitempo}\r\n                                onChange={(e) => {\r\n                                  setDurasiTempo(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Jangka Waktu\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                                type=\"number\"\r\n                                name=\"jangkawaktu\"\r\n                                placeholder=\"Masukan Jangka Waktu\"\r\n                                value={jangkawaktu}\r\n                                onChange={(e) => {\r\n                                  setJangkaWaktu(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Termin\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                            name=\"satuan\"\r\n                            type=\"select\"\r\n                            value={termin}\r\n                            onChange={(e) => {\r\n                              setTermin(e.target.value);\r\n                            }}\r\n                          >\r\n                            \r\n                            <option value={1}>Lunas</option>\r\n                            <option value={2}>Belum Lunas</option>\r\n                            \r\n                              </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Metode Pembayaran\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                          disabled\r\n                          name=\"paymentMethod\"\r\n                          type=\"select\"\r\n                          value={paymentmethod}\r\n                          onChange={(e) => {\r\n                            setPaymentMethod(e.target.value);\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Pilih Payment Method</option>\r\n                          <option value={1}>Tunai</option>\r\n                          <option value={2}>Tempo/Termin/Utang</option>\r\n                        </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                              <Col sm={6}>\r\n                                <div style={{ display: \"none\" }}>\r\n                                  <div className=\"custom-control custom-radio mb-3\">\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio8\"\r\n                                      name=\"custom-radio-3\"\r\n                                      type=\"radio\"\r\n                                      value={1}\r\n                                      checked={approve === 1}\r\n                                      onChange={() => setApprove(1)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio8\"\r\n                                    >\r\n                                      Disetujui\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"custom-control custom-radio mb-3\"\r\n                                    style={{ marginLeft: \"20px\" }}\r\n                                  >\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio9\"\r\n                                      name=\"custom-radio-3\"\r\n                                      type=\"radio\"\r\n                                      value={2}\r\n                                      checked={approve === 2}\r\n                                      onChange={() => setApprove(2)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio9\"\r\n                                    >\r\n                                      Ditolak\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"custom-control custom-radio mb-3\"\r\n                                    style={{ marginLeft: \"20px\" }}\r\n                                  >\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio10\"\r\n                                      name=\"custom-radio-3\"\r\n                                      type=\"radio\"\r\n                                      value={3}\r\n                                      checked={approve === 3}\r\n                                      onChange={() => setApprove(3)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio10\"\r\n                                    >\r\n                                      Dibatalkan\r\n                                    </Label>\r\n                                  </div>\r\n                                </div>\r\n                              </Col>\r\n                              <Col sm={6}>\r\n                                <div style={{ display: \"none\" }}>\r\n                                  <div className=\"custom-control custom-radio mb-3\">\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio11\"\r\n                                      name=\"custom-radio-4\"\r\n                                      type=\"radio\"\r\n                                      value={1}\r\n                                      checked={adminapprove === 1}\r\n                                      onChange={() => setAdminApprove(1)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio11\"\r\n                                    >\r\n                                      Disetujui\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"custom-control custom-radio mb-3\"\r\n                                    style={{ marginLeft: \"20px\" }}\r\n                                  >\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio12\"\r\n                                      name=\"custom-radio-4\"\r\n                                      type=\"radio\"\r\n                                      value={2}\r\n                                      checked={adminapprove === 2}\r\n                                      onChange={() => setAdminApprove(2)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio12\"\r\n                                    >\r\n                                      Ditolak\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"custom-control custom-radio mb-3\"\r\n                                    style={{ marginLeft: \"20px\" }}\r\n                                  >\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio13\"\r\n                                      name=\"custom-radio-4\"\r\n                                      type=\"radio\"\r\n                                      value={3}\r\n                                      checked={adminapprove === 3}\r\n                                      onChange={() => setAdminApprove(3)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio13\"\r\n                                    >\r\n                                      Dibatalkan\r\n                                    </Label>\r\n                                  </div>\r\n                                </div>\r\n                              </Col>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Status\r\n                            </Label>\r\n                              <Col sm={6}>\r\n                                <div style={{ display: \"flex\" }}>\r\n                                  <div className=\"custom-control custom-radio mb-3\">\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio14\"\r\n                                      name=\"custom-radio-5\"\r\n                                      type=\"radio\"\r\n                                      value={1}\r\n                                      checked={clear === 1}\r\n                                      onChange={() => setValidatorSo(1)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio14\"\r\n                                    >\r\n                                      Disetujui\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"custom-control custom-radio mb-3\"\r\n                                    style={{ marginLeft: \"20px\" }}\r\n                                  >\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio15\"\r\n                                      name=\"custom-radio-5\"\r\n                                      type=\"radio\"\r\n                                      value={2}\r\n                                      checked={clear === 2}\r\n                                      onChange={() => setValidatorSo(2)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio15\"\r\n                                    >\r\n                                      Ditolak\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"custom-control custom-radio mb-3\"\r\n                                    style={{ marginLeft: \"20px\" }}\r\n                                  >\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio16\"\r\n                                      name=\"custom-radio-5\"\r\n                                      type=\"radio\"\r\n                                      value={3}\r\n                                      checked={clear === 3}\r\n                                      onChange={() => setValidatorSo(3)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio16\"\r\n                                    >\r\n                                      Dibatalkan\r\n                                    </Label>\r\n                                  </div>\r\n                                </div>\r\n                              </Col>\r\n                          </FormGroup>\r\n                          \r\n                        </Col>\r\n                    </Row>\r\n                    <ToolkitProvider\r\n                            rowNumber={rowIndex}\r\n                            data={\"\"}\r\n                            keyField=\"id\"\r\n                            columns={[\r\n                                {\r\n                                  dataField: \"no\",\r\n                                  text: \"No\",\r\n                                  sort: true,\r\n                                  page: 1,\r\n                                  formatter: (cell, row, index) => {\r\n                                    let currentRow = ++index;\r\n                                    return currentRow + rowIndex;\r\n                                  }\r\n                                },\r\n                                {\r\n                                  dataField: \"Item_name\",\r\n                                  text: \"Nama Item\",\r\n                                  sort: true,\r\n                                },\r\n                                {\r\n                                  dataField: \"Qty\",\r\n                                  text: \"Qty \",\r\n                                  sort: true,\r\n                                },\r\n                                {\r\n                                  dataField: \"satuan\",\r\n                                  text: \"Satuan \",\r\n                                  sort: true,\r\n                                },\r\n                                {\r\n                                  dataField: \"Harga\",\r\n                                  text: \"Harga \",\r\n                                  sort: true,\r\n                                },\r\n                              ]}\r\n                          >\r\n                            {(props) => (\r\n                              <div className=\"py-4 table-responsive\">\r\n                                <BootstrapTable\r\n                                  remote\r\n                                  {...props.baseProps}\r\n                                  bootstrap4={true}\r\n                                  bordered={false}\r\n                                  hover={true}\r\n                                  pagination={paginationFactory({ ...paginationOption })}\r\n                                  onTableChange={handleTableChange}\r\n                                />\r\n                              </div>\r\n                            )}\r\n                    </ToolkitProvider>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                  <Row md=\"12\">\r\n                    <Col md=\"9\">\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                    {!isLoading && (\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        Simpan\r\n                      </Button>\r\n                    )}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {\"\"}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/so\">\r\n                      Kembali\r\n                    </Link>\r\n                    </Col>\r\n                  </Row>\r\n                  </CardFooter>\r\n                  </Form>\r\n                  </Card>\r\n              </CardBody>\r\n              </Card>\r\n          </div>\r\n        </Row>\r\n        </Container>\r\n    </div>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Col,\r\n  CardFooter,\r\n  Container,\r\n  Button,\r\n  Form,\r\n} from \"reactstrap\";\r\n\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\n\r\n\r\nexport default function Edit(props) {\r\n  const username = localStorage.username;\r\n  const token = localStorage.token;\r\n  const warehouse = localStorage.warehouse;\r\n  \r\n  let history = useHistory();\r\n  const [usernameso, setUsernameSo] = useState(\"\");\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [customer, setCustomer] = useState(\"\");\r\n  const [customers, setCustomers] = useState([]);\r\n  const [ordercode,setOrderCode]= useState(\"\");\r\n  const [jangkawaktu,setJangkaWaktu] = useState([]);\r\n  const [keteranganpayment,setKeteranganPayment] = useState(\"\");\r\n  const [paymentmethod,setPaymentMethod] = useState(\"\");\r\n  const [keteranganso,setKeteranganSo] = useState(\"\");\r\n  const [termin,setTermin] = useState([]);\r\n  const [durasitempo,setDurasiTempo] = useState(\"\");\r\n  const [soType, setSoType] = useState(\"\");\r\n  const [approve, setApprove] = useState([]);\r\n  const [adminapprove,setAdminApprove] = useState([]);\r\n  const [usernameadmin,setUsernameAdmin] = useState(\"\");\r\n  const [statusSo,setStatusSO] = useState(\"\");\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getById();\r\n      }, []);\r\n\r\n  const getById = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/sales-order/get/${props.match.params.id}`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        getSo(data.data.response_data.id);\r\n        setOrderCode(data.data.response_data.order_code);\r\n        setUsernameSo(data.data.response_data.username_so);\r\n        setPaymentMethod(data.data.response_data.payment_method);\r\n        setKeteranganSo(data.data.response_data.keterangan_so);\r\n        setJangkaWaktu(data.data.response_data.jangka_waktu);\r\n        setKeteranganPayment(data.data.response_data.keterangan_payment );\r\n        setTermin(data.data.response_data.is_cicil);\r\n        setDurasiTempo(data.data.response_data.durasi_so);\r\n        setCustomer(data.data.response_data.customer);\r\n        setSoType(data.data.response_data.so_type);\r\n        setApprove(data.data.response_data.approve);\r\n        setAdminApprove(data.data.response_data.admin_approval);\r\n        setUsernameAdmin(data.data.response_data.username_admin);\r\n        setStatusSO(data.data.response_data.so_status);\r\n\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getSo = (soId) => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const data = {\r\n      so_id: parseInt(soId),\r\n    };\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/sales-order/so-items`,\r\n        data,\r\n        {\r\n          headers,\r\n        }\r\n      )\r\n      .then((data) => {\r\n        getCustomer();\r\n\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getCustomer = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/customer/list`, { headers })\r\n      .then((data) => {\r\n        setCustomers(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, uomCode, description);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort,  uomCode, description)\r\n    }\r\n  }\r\n\r\n\r\n  function EditData() {\r\n    setLoading(true);\r\n    let data = {\r\n\r\n        warehouse_id : parseInt(warehouse),\r\n        username_so : usernameso,\r\n        payment_method : paymentmethod,\r\n        jangka_waktu : jangkawaktu,\r\n        keterangan_payment : keteranganpayment,\r\n        is_cicil: parseInt(termin),\r\n        approve: parseInt(approve),\r\n        keterangan_so: keteranganso,\r\n        username_admin: username,\r\n        admin_approval: parseInt(adminapprove),\r\n        keterangan_admin: \"\",\r\n        username_validator : \"\",\r\n        clear : 0,\r\n        keterangan_validator : \"\",\r\n        username_gudang : \"\",\r\n        status_barang : 0,\r\n        keterangan_gudang : \"\",\r\n        username_kurir : \"\",\r\n        member : 1,\r\n        customer : customer,\r\n        address_id:1,\r\n        active_flag : 1,\r\n        so_type: soType,\r\n        so_status : 1,\r\n        promo_id: 0,\r\n        items : [\r\n        ]\r\n    };\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/sales-order/update/${props.match.params.id}`,\r\n        data,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        history.push(\"/admin/sales-order\");\r\n        console.log(data);\r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    {\r\n      EditData();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div> \r\n      <SimpleHeader name=\"Validasi Admin Sales Order\" parentName=\"SO\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Card>\r\n                <Form onSubmit={handleSubmit}> \r\n                  <CardBody>\r\n                    <Row md=\"12\">\r\n                        <Col md=\"6\">\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Kode SO\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                              disabled\r\n                                type=\"text\"\r\n                                name=\"desc\"\r\n                                placeholder=\"Masukan Keterangan PO\"\r\n                                value={ordercode}\r\n                                onChange={(e) => {\r\n                                 \r\n                                }}\r\n                              />\r\n                              \r\n                            </Col>\r\n                          </FormGroup>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                                type=\"hidden\"\r\n                                name=\"desc\"\r\n                                placeholder=\"Masukan Username So\"\r\n                                value={usernameso}\r\n                                onChange={(e) => {\r\n                                  setUsernameSo(e.target.value);\r\n                                 \r\n                                }}\r\n                              />\r\n                              \r\n                            </Col>\r\n                          \r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                                Customer\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                                name=\"kategory\"\r\n                                type=\"select\"\r\n                                value={customer}\r\n                                onChange={(e) => {\r\n                                  setCustomer(e.target.value);\r\n                                }}\r\n                              >\r\n                                {customers.map((customer, key) => {\r\n                                    return (\r\n                                      <option key={key} value={customer.id}>\r\n                                        {customer.name}\r\n                                      </option>\r\n                                    );\r\n                                  })}\r\n                              </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              keterangan SO\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                              disabled\r\n                                type=\"text\"\r\n                                name=\"desc\"\r\n                                placeholder=\"Masukan Keterangan SO\"\r\n                                value={keteranganso}\r\n                                onChange={(e) => {\r\n                                  setKeteranganSo(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Status SO\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                                name=\"paymentMethod\"\r\n                                type=\"select\"\r\n                                value={statusSo}\r\n                                onChange={(e) => {\r\n                                  setSoType(e.target.value);\r\n                                }}\r\n                              >\r\n                               \r\n                                <option value={1}>Kasir</option>\r\n                                <option value={2}>Sales</option>\r\n                                <option value={2}>Canvasing</option>\r\n                              </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Tipe SO\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                                name=\"paymentMethod\"\r\n                                type=\"select\"\r\n                                value={soType}\r\n                                onChange={(e) => {\r\n                                  setSoType(e.target.value);\r\n                                }}\r\n                              >\r\n                                <option value=\"\">Pilih Payment Method</option>\r\n                                <option value={1}>Ready</option>\r\n                                <option value={2}>Indent</option>\r\n                              </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Durasi Tempo\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                                type=\"text\"\r\n                                name=\"barcode\"\r\n                                placeholder=\"Masukan Durasi Tempo\"\r\n                                value={durasitempo}\r\n                                onChange={(e) => {\r\n                                  setDurasiTempo(e.target.value);\r\n                                  \r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Jangka Waktu\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                                type=\"number\"\r\n                                name=\"jangkawaktu\"\r\n                                placeholder=\"Masukan Jangka Waktu\"\r\n                                value={jangkawaktu}\r\n                                onChange={(e) => {\r\n                                  setJangkaWaktu(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Termin\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                            name=\"satuan\"\r\n                            type=\"select\"\r\n                            value={termin}\r\n                            onChange={(e) => {\r\n                              setTermin(e.target.value);\r\n                            }}\r\n                          >\r\n                            \r\n                            <option value={1}>Lunas</option>\r\n                            <option value={2}>Belum Lunas</option>\r\n                            \r\n                              </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Metode Pembayaran\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                          disabled\r\n                          name=\"paymentMethod\"\r\n                          type=\"select\"\r\n                          value={paymentmethod}\r\n                          onChange={(e) => {\r\n                            setPaymentMethod(e.target.value);\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Pilih Payment Method</option>\r\n                          <option value={1}>Tunai</option>\r\n                          <option value={2}>Tempo/Termin/Utang</option>\r\n                        </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                              <Col sm={6}>\r\n                                <div style={{ display: \"none\" }}>\r\n                                  <div className=\"custom-control custom-radio mb-3\">\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio8\"\r\n                                      name=\"custom-radio-3\"\r\n                                      type=\"radio\"\r\n                                      value={1}\r\n                                      checked={approve === 1}\r\n                                      onChange={() => setApprove(1)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio8\"\r\n                                    >\r\n                                      Disetujui\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"custom-control custom-radio mb-3\"\r\n                                    style={{ marginLeft: \"20px\" }}\r\n                                  >\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio9\"\r\n                                      name=\"custom-radio-3\"\r\n                                      type=\"radio\"\r\n                                      value={2}\r\n                                      checked={approve === 2}\r\n                                      onChange={() => setApprove(2)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio9\"\r\n                                    >\r\n                                      Ditolak\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"custom-control custom-radio mb-3\"\r\n                                    style={{ marginLeft: \"20px\" }}\r\n                                  >\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio10\"\r\n                                      name=\"custom-radio-3\"\r\n                                      type=\"radio\"\r\n                                      value={3}\r\n                                      checked={approve === 3}\r\n                                      onChange={() => setApprove(3)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio10\"\r\n                                    >\r\n                                      Dibatalkan\r\n                                    </Label>\r\n                                  </div>\r\n                                </div>\r\n                              </Col>\r\n                          \r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Admin Approval\r\n                            </Label>\r\n                              <Col sm={6}>\r\n                                <div style={{ display: \"flex\" }}>\r\n                                  <div className=\"custom-control custom-radio mb-3\">\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio11\"\r\n                                      name=\"custom-radio-4\"\r\n                                      type=\"radio\"\r\n                                      value={1}\r\n                                      checked={adminapprove === 1}\r\n                                      onChange={() => setAdminApprove(1)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio11\"\r\n                                    >\r\n                                      Disetujui\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"custom-control custom-radio mb-3\"\r\n                                    style={{ marginLeft: \"20px\" }}\r\n                                  >\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio12\"\r\n                                      name=\"custom-radio-4\"\r\n                                      type=\"radio\"\r\n                                      value={2}\r\n                                      checked={adminapprove === 2}\r\n                                      onChange={() => setAdminApprove(2)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio12\"\r\n                                    >\r\n                                      Ditolak\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"custom-control custom-radio mb-3\"\r\n                                    style={{ marginLeft: \"20px\" }}\r\n                                  >\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio13\"\r\n                                      name=\"custom-radio-4\"\r\n                                      type=\"radio\"\r\n                                      value={3}\r\n                                      checked={adminapprove === 3}\r\n                                      onChange={() => setAdminApprove(3)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio13\"\r\n                                    >\r\n                                      Dibatalkan\r\n                                    </Label>\r\n                                  </div>\r\n                                </div>\r\n                              </Col>\r\n                          </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <ToolkitProvider\r\n                            rowNumber={rowIndex}\r\n                            data={\"\"}\r\n                            keyField=\"id\"\r\n                            columns={[\r\n                                {\r\n                                  dataField: \"no\",\r\n                                  text: \"No\",\r\n                                  sort: true,\r\n                                  page: 1,\r\n                                  formatter: (cell, row, index) => {\r\n                                    let currentRow = ++index;\r\n                                    return currentRow + rowIndex;\r\n                                  }\r\n                                },\r\n                                {\r\n                                  dataField: \"kode_Item\",\r\n                                  text: \"Kode Item\",\r\n                                  sort: true,\r\n                                },\r\n                                {\r\n                                  dataField: \"Qty\",\r\n                                  text: \"Qty \",\r\n                                  sort: true,\r\n                                },\r\n                                {\r\n                                  dataField: \"satuan\",\r\n                                  text: \"Satuan \",\r\n                                  sort: true,\r\n                                },\r\n                                {\r\n                                  dataField: \"Harga\",\r\n                                  text: \"Harga \",\r\n                                  sort: true,\r\n                                },\r\n                              ]}\r\n                          >\r\n                            {(props) => (\r\n                              <div className=\"py-4 table-responsive\">\r\n                                <BootstrapTable\r\n                                  remote\r\n                                  {...props.baseProps}\r\n                                  bootstrap4={true}\r\n                                  bordered={false}\r\n                                  hover={true}\r\n                                  pagination={paginationFactory({ ...paginationOption })}\r\n                                  onTableChange={handleTableChange}\r\n                                />\r\n                              </div>\r\n                            )}\r\n                    </ToolkitProvider>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                  <Row md=\"12\">\r\n                    <Col md=\"9\">\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                    {!isLoading && (\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        Simpan\r\n                      </Button>\r\n                    )}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {\"\"}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/so\">\r\n                      Kembali\r\n                    </Link>\r\n                    </Col>\r\n                  </Row>\r\n                  </CardFooter>\r\n                  </Form>\r\n                  </Card>\r\n              </CardBody>\r\n              </Card>\r\n          </div>\r\n        </Row>\r\n        </Container>\r\n    </div>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  Col,\r\n  CardFooter,\r\n  Button,\r\n  Form,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\n\r\n\r\nexport default function Edit(props) {\r\n  const username = localStorage.username;\r\n  const token = localStorage.token;\r\n  const warehouse = localStorage.warehouse;\r\n  \r\n  let history = useHistory();\r\n  const [usernameso, setUsernameSo] = useState(\"\");\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [customer, setCustomer] = useState(\"\");\r\n  const [customers, setCustomers] = useState([]);\r\n  const [ordercode,setOrderCode]= useState(\"\");\r\n  const [jangkawaktu,setJangkaWaktu] = useState([]);\r\n  const [keteranganpayment,setKeteranganPayment] = useState(\"\");\r\n  const [paymentmethod,setPaymentMethod] = useState(\"\");\r\n  const [keteranganso,setKeteranganSo] = useState(\"\");\r\n  const [termin,setTermin] = useState([]);\r\n  const [durasitempo,setDurasiTempo] = useState(\"\");\r\n  const [soType, setSoType] = useState(\"\");\r\n  const [approve, setApprove] = useState([]);\r\n  const [statusSo,setStatusSo] = useState([]);\r\n  const [,] = useState(\"\");\r\n  const [,] = useState(\"\");\r\n  const [,] = useState(\"\");\r\n  const [rowIndex, setRowIndex] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [perPage, setPerpage] = useState(10);\r\n  const [totalItem, setTotalItem] = useState(0);\r\n  const [currentSort, setCurrentSort] = useState(\"\");\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getById();\r\n      }, []);\r\n\r\n  const getById = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/sales-order/get/${props.match.params.id}`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        console.log(data);\r\n        getSo(data.data.response_data.id);\r\n        setOrderCode(data.data.response_data.order_code);\r\n        setUsernameSo(data.data.response_data.username_so);\r\n        setPaymentMethod(data.data.response_data.payment_method);\r\n        setKeteranganSo(data.data.response_data.keterangan_so);\r\n        setJangkaWaktu(data.data.response_data.jangka_waktu);\r\n        setKeteranganPayment(data.data.response_data.keterangan_payment );\r\n        setTermin(data.data.response_data.is_cicil);\r\n        setDurasiTempo(data.data.response_data.durasi_so);\r\n        setCustomer(data.data.response_data.customer);\r\n        setSoType(data.data.response_data.so_type);\r\n        setApprove(data.data.response_data.approve);\r\n        setStatusSo(data.data.response_data.so_status);\r\n        // setUsernameValidator(data.data.response_data.username_validator);\r\n        // setClear(data.data.response_data.clear);\r\n        // setStatusBarang(data.data.response_data.status_barang);\r\n        // setTanggalBarang(data.data.response_data.tgl_barang);\r\n        // setKeteranganBarang(data.data.response_data.keterangan_gudang);\r\n        // setUsernameKurir(data.data.response_data.username_kurir);\r\n        // setKeteranganTs(data.data.response_data.keterangan_ts);\r\n        // setTsType(data.data.response_data.ts_type);\r\n        // setActiveFlag(data.data.response_data.active_flag);\r\n        // setTsCounter(data.data.response_data.ts_counter);\r\n        // setReceivingCounter(data.data.response_data.receiving_counter);\r\n        // setSjCounter(data.data.response_data.sj_counter);\r\n        // setMemoCounter(data.data.response_data.memo_counter);\r\n        // setFakturCounter(data.data.response_data.faktur_counter);\r\n        // setTsFile(data.data.response_data.ts_file);\r\n        // setReceivingFile(data.data.response_data.receiving_file);\r\n        // setSjFile(data.data.response_data.sj_file);\r\n        // setMemoFile(data.data.response_data.memo_file);\r\n        // setFakturFile(data.data.response_data.faktur_file);\r\n        // setCreatedDate(data.data.response_data.created_at);\r\n\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getSo = (soId) => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const data = {\r\n      so_id: parseInt(soId),\r\n    };\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/sales-order/so-items`,\r\n        data,\r\n        {\r\n          headers,\r\n        }\r\n      )\r\n      .then((data) => {\r\n        getCustomer();\r\n\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getCustomer = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/customer/list`, { headers })\r\n      .then((data) => {\r\n        setCustomers(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  let paginationOption = {\r\n    page: page,\r\n    alwaysShowAllBtns: true,\r\n    override: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPage: perPage,\r\n    totalSize: totalItem,\r\n    onPageChange: (page) => {\r\n      updateDataTable(page, perPage, currentSort, uomCode, description);\r\n    },\r\n    sizePerPageRenderer: () => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={(e) => {\r\n                updateDataTable(page, e.target.value, currentSort)\r\n              }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    ),\r\n  }\r\n\r\n  const handleTableChange = (type, { sortField, sortOrder }) => {\r\n    if (type === \"sort\") {\r\n      let sort = `${sortField} ${sortOrder}`\r\n      updateDataTable(page, perPage, sort,  uomCode, description)\r\n    }\r\n  }\r\n\r\n\r\n  function EditData() {\r\n    setLoading(true);\r\n    let data = {\r\n\r\n      warehouse_id : parseInt(warehouse),\r\n        username_so : usernameso,\r\n        payment_method :  paymentmethod,\r\n        jangka_waktu : jangkawaktu,\r\n        keterangan_payment : keteranganpayment,\r\n        is_cicil : parseInt(termin),\r\n        approve: parseInt(approve),\r\n        keterangan_so : keteranganso,\r\n        batch_number: \"\",\r\n        is_settle:0,\r\n        username_admin:\"\",\r\n        admin_approval:0,\r\n        keterangan_admin:\"\",\r\n        username_validator : \"\",\r\n        clear : 0,\r\n        keterangan_validator : \"\",\r\n        username_gudang : \"\",\r\n        status_barang : 0,\r\n        keterangan_gudang : \"\",\r\n        username_kurir : \"\",\r\n        manual_address : \"\",\r\n        customer : customer,\r\n        address_id:\"\",\r\n        so_type : soType,\r\n        so_status : 1,\r\n        promo_id: 0,\r\n        items : []\r\n        };\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/sales-order/update/${props.match.params.id}`,\r\n        data,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        history.push(\"/admin/sales-order\");\r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    {\r\n      EditData();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div> \r\n      <SimpleHeader name=\"Penawaran SO \" parentName=\"SO\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Card>\r\n                <Form onSubmit={handleSubmit}> \r\n                  <CardBody>\r\n                    <Row md=\"12\">\r\n                        <Col md=\"6\">\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Kode SO\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                              disabled\r\n                                type=\"text\"\r\n                                name=\"desc\"\r\n                                placeholder=\"Masukan Keterangan PO\"\r\n                                value={ordercode}\r\n                                onChange={(e) => {\r\n                                  setOrderCode(e.target.value);\r\n                                 \r\n                                }}\r\n                              />\r\n                              \r\n                            </Col>\r\n                          </FormGroup>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                                type=\"hidden\"\r\n                                name=\"desc\"\r\n                                placeholder=\"Masukan Username So\"\r\n                                value={usernameso}\r\n                                onChange={(e) => {\r\n                                  setUsernameSo(e.target.value);\r\n                                 \r\n                                }}\r\n                              />\r\n                              \r\n                            </Col>\r\n                          \r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                                Customer\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                                name=\"kategory\"\r\n                                type=\"select\"\r\n                                value={customer}\r\n                                onChange={(e) => {\r\n                                  setCustomer(e.target.value);\r\n                                }}\r\n                              >\r\n                                \r\n                                {customers.map((customer, key) => {\r\n                                    return (\r\n                                      <option key={key} value={customer.id}>\r\n                                        {customer.name}\r\n                                      </option>\r\n                                    );\r\n                                  })}\r\n                              </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              keterangan SO\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                              <Input\r\n                              disabled\r\n                                type=\"text\"\r\n                                name=\"desc\"\r\n                                placeholder=\"Masukan Keterangan SO\"\r\n                                value={keteranganso}\r\n                                onChange={(e) => {\r\n                                  setKeteranganSo(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Status SO\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                                name=\"paymentMethod\"\r\n                                type=\"select\"\r\n                                value={statusSo}\r\n                                onChange={(e) => {\r\n                                  setSoType(e.target.value);\r\n                                }}\r\n                              >\r\n                               \r\n                                <option value={1}>Kasir</option>\r\n                                <option value={2}>Sales</option>\r\n                                <option value={2}>Canvasing</option>\r\n                              </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Tipe SO\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                                name=\"paymentMethod\"\r\n                                type=\"select\"\r\n                                value={soType}\r\n                                onChange={(e) => {\r\n                                  setSoType(e.target.value);\r\n                                }}\r\n                              >\r\n                                <option value=\"\">Pilih Payment Method</option>\r\n                                <option value={1}>Ready</option>\r\n                                <option value={2}>Indent</option>\r\n                              </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Metode Pembayaran\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                          disabled\r\n                          name=\"paymentMethod\"\r\n                          type=\"select\"\r\n                          value={paymentmethod}\r\n                          onChange={(e) => {\r\n                            setPaymentMethod(e.target.value);\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Pilih Payment Method</option>\r\n                          <option value={1}>Tunai</option>\r\n                          <option value={2}>Tempo/Termin/Utang</option>\r\n                        </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Promo\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                                type=\"text\"\r\n                                name=\"barcode\"\r\n                                placeholder=\"Masukan Durasi Tempo\"\r\n                                value={durasitempo}\r\n                                onChange={(e) => {\r\n                                  setDurasiTempo(e.target.value);\r\n                                  \r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Jangka Waktu\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                                type=\"number\"\r\n                                name=\"jangkawaktu\"\r\n                                placeholder=\"Masukan Jangka Waktu\"\r\n                                value={jangkawaktu}\r\n                                onChange={(e) => {\r\n                                  setJangkaWaktu(e.target.value);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Termin\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                            disabled\r\n                            name=\"satuan\"\r\n                            type=\"select\"\r\n                            value={termin}\r\n                            onChange={(e) => {\r\n                              setTermin(e.target.value);\r\n                            }}\r\n                          >\r\n                            <option value={1}>Lunas</option>\r\n                            <option value={2}>Belum Lunas</option>\r\n                            \r\n                              </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Pengiriman\r\n                            </Label>\r\n                            <Col sm={7}>\r\n                            <Input\r\n                          disabled\r\n                          name=\"paymentMethod\"\r\n                          type=\"select\"\r\n                          value={paymentmethod}\r\n                          onChange={(e) => {\r\n                            setPaymentMethod(e.target.value);\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Pilih Payment Method</option>\r\n                          <option value={1}>DiKirim</option>\r\n                          <option value={2}>DiAntar</option>\r\n                        </Input>\r\n                            </Col>\r\n                          </FormGroup>\r\n                          <FormGroup row>\r\n                            <Label\r\n                              for=\"exampleEmail\"\r\n                              sm={4}\r\n                            >\r\n                              Approve\r\n                            </Label>\r\n                              <Col sm={6}>\r\n                                <div style={{ display: \"flex\" }}>\r\n                                  <div className=\"custom-control custom-radio mb-3\">\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio8\"\r\n                                      name=\"custom-radio-3\"\r\n                                      type=\"radio\"\r\n                                      value={1}\r\n                                      checked={approve === 1}\r\n                                      onChange={() => setApprove(1)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio8\"\r\n                                    >\r\n                                      Disetujui\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"custom-control custom-radio mb-3\"\r\n                                    style={{ marginLeft: \"20px\" }}\r\n                                  >\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio9\"\r\n                                      name=\"custom-radio-3\"\r\n                                      type=\"radio\"\r\n                                      value={2}\r\n                                      checked={approve === 2}\r\n                                      onChange={() => setApprove(2)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio9\"\r\n                                    >\r\n                                      Ditolak\r\n                                    </Label>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"custom-control custom-radio mb-3\"\r\n                                    style={{ marginLeft: \"20px\" }}\r\n                                  >\r\n                                    <Input\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"customRadio10\"\r\n                                      name=\"custom-radio-3\"\r\n                                      type=\"radio\"\r\n                                      value={3}\r\n                                      checked={approve === 3}\r\n                                      onChange={() => setApprove(3)}\r\n                                    />\r\n                                    <Label\r\n                                      className=\"custom-control-label\"\r\n                                      htmlFor=\"customRadio10\"\r\n                                    >\r\n                                      Dibatalkan\r\n                                    </Label>\r\n                                  </div>\r\n                                </div>\r\n                              </Col>\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <ToolkitProvider\r\n                            rowNumber={rowIndex}\r\n                            data={\"\"}\r\n                            keyField=\"id\"\r\n                            columns={[\r\n                              {\r\n                                dataField: \"no\",\r\n                                text: \"No\",\r\n                                sort: true,\r\n                                page: 1,\r\n                                formatter: (cell, row, index) => {\r\n                                  let currentRow = ++index;\r\n                                  return currentRow + rowIndex;\r\n                                }\r\n                              },\r\n                              {\r\n                                dataField: \"kode_So\",\r\n                                text: \"Nama item\",\r\n                                sort: true,\r\n                              },\r\n                              {\r\n                                dataField: \"description\",\r\n                                text: \"Deskripsi SO\",\r\n                                sort: true,\r\n                              },\r\n                                {\r\n                                  dataField: \"qty\",\r\n                                  text: \"Qty\",\r\n                                  sort: true,\r\n                                },\r\n                                {\r\n                                  dataField: \"qty_fisik\",\r\n                                  text: \"Qty Fisik\",\r\n                                  sort: true,\r\n                                },\r\n                                {\r\n                                  dataField: \"keterangan_fisik\",\r\n                                  text: \"keterangan Fisik\",\r\n                                  sort: true,\r\n                                },\r\n                            ]}\r\n                          >\r\n                            {(props) => (\r\n                              <div className=\"py-4 table-responsive\">\r\n                                <BootstrapTable\r\n                                  remote\r\n                                  {...props.baseProps}\r\n                                  bootstrap4={true}\r\n                                  bordered={false}\r\n                                  hover={true}\r\n                                  pagination={paginationFactory({ ...paginationOption })}\r\n                                  onTableChange={handleTableChange}\r\n                                />\r\n                              </div>\r\n                            )}\r\n                    </ToolkitProvider>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                  <Row md=\"12\">\r\n                    <Col md=\"9\">\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                    {!isLoading && (\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        Simpan\r\n                      </Button>\r\n                    )}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {\"\"}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/so\">\r\n                      Kembali\r\n                    </Link>\r\n                    </Col>\r\n                  </Row>\r\n                  </CardFooter>\r\n                  </Form>\r\n                  </Card>\r\n              </CardBody>\r\n              </Card>\r\n          </div>\r\n        </Row>\r\n        </Container>\r\n    </div>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function EditSo(props) {\r\n  const token = localStorage.token;\r\n  const warehouse = localStorage.warehouse;\r\n  const role = localStorage.authority;\r\n  const namaDepartment = localStorage.department;\r\n  const username = localStorage.username;\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [usernameSo, setUsernameSo] = useState(\"\");\r\n  const [usernamePoError, setUsernamePoError] = useState(null);\r\n  const [usernamePurchasing, setUsernamePurchasing] = useState(\"\");\r\n  const [usernamePurchasingError, setUsernamePurchasingError] = useState(null);\r\n  const [usernammeGudang, setUsernameGudang] = useState(\"\");\r\n  const [usernammeGudangError, setUsernameGudangError] = useState(null);\r\n  const [usernameValidator, setUsernameValidator] = useState(\"\");\r\n  const [usernameValidatorError, setUsernameValidatorError] = useState(null);\r\n  const [paymentMethod, setPaymentMethod] = useState(\"\");\r\n  const [paymentMethodError, setPaymentMethodError] = useState(null);\r\n  const [descriptionPayment, setDescriptionPayment] = useState(\"\");\r\n  const [descriptionValidator, setDescriptionValidator] = useState(\"\");\r\n  const [descriptionPurchasing, setDescriptionPurchasing] = useState(\"\");\r\n  const [descriptionGudang, setDescriptionGudang] = useState(\"\");\r\n  const [descriptionSo, setDescriptionSo] = useState(\"\");\r\n  const [isCicil, setIsCicil] = useState(\"\");\r\n  const [statusBarang, setStatusBarang] = useState(0);\r\n  const [clear, setClear] = useState(0);\r\n  const [approve, setApprove] = useState(0);\r\n  const [soType, setSoType] = useState(\"\");\r\n  const [poId, setPoId] = useState(\"\");\r\n  const [code, setCode] = useState(\"\");\r\n  const [usernameAdmin, setUsernameAdmin] = useState(username);\r\n  const [descriptionAdmin, setDescriptionAdmin] = useState(\"\");\r\n  const [approvalAdmin, setApprovalAdmin] = useState(0);\r\n\r\n  const [items, setItems] = useState([]);\r\n  const [persons, setPersons] = useState([]);\r\n  const [allSatuan, setAllSatuan] = useState([]);\r\n\r\n  const [inputList, setInputList] = useState([\r\n    {\r\n      item_id: \"\",\r\n      qty: \"\",\r\n      satuan: \"\",\r\n      person: \"\",\r\n      harga: \"\",\r\n      qty_fisik: \"\",\r\n      keterangan_fisik: \"\",\r\n    },\r\n  ]);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    // if (province === \"\") {\r\n    //   setProvinceError(\"invalid\");\r\n    //   error = true;\r\n    // }\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getById();\r\n  }, []);\r\n\r\n  const getById = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/sales-order/get/${props.match.params.id}`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        console.log(data);\r\n        geSo(data.data.response_data.id);\r\n        setUsernameSo(data.data.response_data.username_so);\r\n        setDescriptionSo(data.data.response_data.keterangan_so);\r\n        setUsernamePurchasing(data.data.response_data.username_purchasing);\r\n        setDescriptionPurchasing(data.data.response_data.keterangan_purchasing);\r\n        setUsernameGudang(data.data.response_data.username_gudang);\r\n        setDescriptionGudang(data.data.response_data.keterangan_gudang);\r\n        setUsernameValidator(data.data.response_data.username_validator);\r\n        setDescriptionValidator(data.data.response_data.keterangan_validator);\r\n        setDescriptionPayment(data.data.response_data.keterangan_payment);\r\n        setPaymentMethod(data.data.response_data.payment_method);\r\n        setIsCicil(data.data.response_data.is_cicil);\r\n        setSoType(data.data.response_data.so_type);\r\n        setClear(data.data.response_data.clear);\r\n        setApprove(data.data.response_data.approve);\r\n        setStatusBarang(data.data.response_data.status_barang);\r\n        setCode(data.data.response_data.order_code);\r\n        setDescriptionAdmin(data.data.response_data.keterangan_admin);\r\n        setApprovalAdmin(data.data.response_data.admin_approval);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const geSo = (poId) => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const data = {\r\n      so_id: parseInt(poId),\r\n    };\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/sales-order/so-items`,\r\n        data,\r\n        {\r\n          headers,\r\n        }\r\n      )\r\n      .then((data) => {\r\n        getItem();\r\n        getPerson();\r\n        getSatuan();\r\n        let harga = [];\r\n        let item = [];\r\n        let qty = [];\r\n        let satuan = [];\r\n        let person = [];\r\n        let qty_fisik = [];\r\n        let keterangan_fisik = [];\r\n        data.data.response_data.map((x, i) => {\r\n          harga.push(x.harga);\r\n          item.push(x.item_id);\r\n          qty.push(x.qty);\r\n          satuan.push(x.satuan);\r\n          person.push(x.person);\r\n          qty_fisik.push(x.qty_fisik);\r\n          keterangan_fisik.push(x.keterangan_fisik);\r\n          setInputList([\r\n            {\r\n              // harga: harga,\r\n              // item_id: item,\r\n              // qty: qty,\r\n              // satuan: satuan,\r\n              // person: person,\r\n              // qty_fisik: qty_fisik,\r\n              // keterangan_fisik: keterangan_fisik,\r\n              harga: x.harga,\r\n              item_id: x.item_id,\r\n              qty: x.qty,\r\n              satuan: x.satuan,\r\n              person: x.person,\r\n              qty_fisik: x.qty_fisik,\r\n              keterangan_fisik: x.keterangan_fisik,\r\n            },\r\n          ]);\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getItem = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/items/list?warehouse_id=${warehouse}`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        setItems(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getPerson = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/person/list`, { headers })\r\n      .then((data) => {\r\n        setPersons(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getSatuan = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/uom/list`, { headers })\r\n      .then((data) => {\r\n        setAllSatuan(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  // handle input change\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...inputList];\r\n    list[index][name] = name === \"keterangan_fisik\" ? value : parseInt(value);\r\n    setInputList(list);\r\n  };\r\n\r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...inputList];\r\n    list.splice(index, 1);\r\n    setInputList(list);\r\n  };\r\n\r\n  // handle click event of the Add button\r\n  const handleAddClick = () => {\r\n    setInputList([\r\n      ...inputList,\r\n      {\r\n        item_id: \"\",\r\n        qty: \"\",\r\n        satuan: \"\",\r\n        person: \"\",\r\n        harga: \"\",\r\n        qty_fisik: \"\",\r\n        keterangan_fisik: \"\",\r\n      },\r\n    ]);\r\n  };\r\n\r\n  function EditData() {\r\n    setLoading(true);\r\n    let data = {\r\n      warehouse_id: parseInt(warehouse),\r\n      username_so: usernameSo,\r\n      payment_method: paymentMethod,\r\n      keterangan_payment: descriptionPayment,\r\n      is_cicil: parseInt(isCicil),\r\n      username_purchasing: usernamePurchasing,\r\n      approve: parseInt(approve),\r\n      keterangan_purchasing: descriptionPurchasing,\r\n      username_gudang: usernammeGudang,\r\n      status_barang: parseInt(statusBarang),\r\n      keterangan_gudang: descriptionGudang,\r\n      username_kurir: \"\",\r\n      username_validator: usernameValidator,\r\n      clear: parseInt(clear),\r\n      keterangan_validator: descriptionValidator,\r\n      active_flag: 1,\r\n      so_type: 1,\r\n      keterangan_so: descriptionSo,\r\n      items: inputList,\r\n      username_admin: usernameAdmin,\r\n      admin_approval: parseInt(approvalAdmin),\r\n      keterangan_admin: descriptionAdmin,\r\n    };\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/sales-order/update/${props.match.params.id}`,\r\n        data,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        history.push(\"/admin/sales-order\");\r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      EditData();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Edit Sales Order\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            {role === \"ROLE_ADMIN\" && namaDepartment === \"Sales\" ? (\r\n              <Card>\r\n                <CardBody>\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <CardHeader>\r\n                      <h3>Edit Sales Order</h3>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Order Code\r\n                        </Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"text\"\r\n                          name=\"po\"\r\n                          placeholder=\"Masukan Kode\"\r\n                          value={code}\r\n                          onChange={(e) => {\r\n                            setCode(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan SO\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"text\"\r\n                          name=\"descPo\"\r\n                          placeholder=\"Masukan Keterangan PO\"\r\n                          value={descriptionSo}\r\n                          onChange={(e) => {\r\n                            setDescriptionSo(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan Admin\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descPo\"\r\n                          placeholder=\"Masukan Keterangan Admin\"\r\n                          value={descriptionAdmin}\r\n                          onChange={(e) => {\r\n                            setDescriptionAdmin(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Approval Admin\r\n                        </Label>\r\n                        <Row>\r\n                          <Col>\r\n                            <div style={{ display: \"flex\" }}>\r\n                              <div className=\"custom-control custom-radio mb-3\">\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio13\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={1}\r\n                                  checked={approvalAdmin === 1}\r\n                                  onClick={() => setApprovalAdmin(1)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio13\"\r\n                                >\r\n                                  Disetujui\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio14\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={2}\r\n                                  checked={approvalAdmin === 2}\r\n                                  onClick={() => setApprovalAdmin(2)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio14\"\r\n                                >\r\n                                  Ditolak\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio15\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={3}\r\n                                  checked={approvalAdmin === 3}\r\n                                  onClick={() => setApprovalAdmin(3)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio15\"\r\n                                >\r\n                                  Dibatalkan\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Payment Method\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          disabled\r\n                          name=\"paymentMethod\"\r\n                          type=\"select\"\r\n                          value={paymentMethod}\r\n                          invalid={paymentMethodError === \"invalid\"}\r\n                          onChange={(e) => {\r\n                            setPaymentMethod(e.target.value);\r\n                            if (e.target.value !== \"\") {\r\n                              setPaymentMethodError(\"\");\r\n                            }\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Pilih Payment Method</option>\r\n                          <option value={1}>Tunia</option>\r\n                          <option value={2}>Tempo/Termin/Utang</option>\r\n                        </Input>\r\n                        <FormFeedback>\r\n                          Payment Method tidak boleh kosong\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n\r\n                      {inputList.map((x, i) => {\r\n                        return (\r\n                          <div className=\"box\">\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Item\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                name=\"item_id\"\r\n                                type=\"select\"\r\n                                value={parseInt(x.item_id)}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Item</option>\r\n                                {items.map((item, key) => {\r\n                                  return (\r\n                                    <option key={key} value={item.id}>\r\n                                      {item.item_name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                              <FormFeedback>\r\n                                Item tidak boleh kosong\r\n                              </FormFeedback>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Quality\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                type=\"text\"\r\n                                name=\"qty\"\r\n                                placeholder=\"Masukan Quality\"\r\n                                value={x.qty}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Satuan\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                name=\"satuan\"\r\n                                type=\"select\"\r\n                                value={x.satuan}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Satuan</option>\r\n                                {allSatuan.map((satuan, key) => {\r\n                                  return (\r\n                                    <option key={key} value={satuan.id}>\r\n                                      {satuan.uom_code}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Person\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                name=\"person\"\r\n                                type=\"select\"\r\n                                value={x.person}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Person</option>\r\n                                {persons.map((person, key) => {\r\n                                  return (\r\n                                    <option key={key} value={person.id}>\r\n                                      {person.person_name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Harga\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                type=\"text\"\r\n                                name=\"harga\"\r\n                                placeholder=\"Masukan Harga\"\r\n                                value={x.harga}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Quality Fisik\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                type=\"text\"\r\n                                name=\"qty_fisik\"\r\n                                placeholder=\"Masukan Quality Fidik\"\r\n                                value={x.qty_fisik}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Keterangan Fisik\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                type=\"text\"\r\n                                name=\"keterangan_fisik\"\r\n                                placeholder=\"Masukan Keterangna Fisik\"\r\n                                value={x.keterangan_fisik}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <div className=\"btn-box\">\r\n                              {inputList.length !== 1 && (\r\n                                <Button\r\n                                  color=\"default\"\r\n                                  onClick={() => handleRemoveClick(i)}\r\n                                >\r\n                                  Remove\r\n                                </Button>\r\n                              )}\r\n                              {inputList.length - 1 === i && (\r\n                                <Button\r\n                                  color=\"default\"\r\n                                  onClick={handleAddClick}\r\n                                >\r\n                                  Add\r\n                                </Button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </CardBody>\r\n                    <CardFooter>\r\n                      {!isLoading && (\r\n                        <Button color=\"primary\" type=\"submit\">\r\n                          Simpan\r\n                        </Button>\r\n                      )}\r\n                      {isLoading && (\r\n                        <Button color=\"primary\" disabled>\r\n                          <i className=\"fas fa-spinner fa-spin\"></i>\r\n                          {\"\"}\r\n                          loading...\r\n                        </Button>\r\n                      )}\r\n                      <Link className=\"btn btn-info\" to=\"/admin/sales-order\">\r\n                        Kembali\r\n                      </Link>\r\n                    </CardFooter>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            ) : role === \"ROLE_ADMIN\" &&\r\n              namaDepartment === \"Board Of Director\" ? (\r\n              <Card>\r\n                <CardBody>\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <CardHeader>\r\n                      <h3>Edit Sales Order</h3>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Order Code\r\n                        </Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"text\"\r\n                          name=\"po\"\r\n                          placeholder=\"Masukan Kode\"\r\n                          value={code}\r\n                          onChange={(e) => {\r\n                            setCode(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan SO\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"text\"\r\n                          name=\"descPo\"\r\n                          placeholder=\"Masukan Keterangan SO\"\r\n                          value={descriptionSo}\r\n                          onChange={(e) => {\r\n                            setDescriptionSo(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan Validator\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descValidator\"\r\n                          placeholder=\"Masukan Keterangan Validator\"\r\n                          value={descriptionValidator}\r\n                          onChange={(e) => {\r\n                            setDescriptionValidator(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Clear\r\n                        </Label>\r\n                        <Row>\r\n                          <Col>\r\n                            <div style={{ display: \"flex\" }}>\r\n                              <div className=\"custom-control custom-radio mb-3\">\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio5\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={1}\r\n                                  checked={clear === 1}\r\n                                  onClick={() => setClear(1)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio5\"\r\n                                >\r\n                                  Disetujui\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio6\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={2}\r\n                                  checked={clear === 2}\r\n                                  onClick={() => setClear(2)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio6\"\r\n                                >\r\n                                  Ditolak\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio7\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={3}\r\n                                  checked={clear === 3}\r\n                                  onClick={() => setClear(3)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio7\"\r\n                                >\r\n                                  Dibatalkan\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Payment Method\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          disabled\r\n                          name=\"paymentMethod\"\r\n                          type=\"select\"\r\n                          value={paymentMethod}\r\n                          invalid={paymentMethodError === \"invalid\"}\r\n                          onChange={(e) => {\r\n                            setPaymentMethod(e.target.value);\r\n                            if (e.target.value !== \"\") {\r\n                              setPaymentMethodError(\"\");\r\n                            }\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Pilih Payment Method</option>\r\n                          <option value={1}>Tunia</option>\r\n                          <option value={2}>Tempo/Termin/Utang</option>\r\n                        </Input>\r\n                        <FormFeedback>\r\n                          Payment Method tidak boleh kosong\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n\r\n                      {inputList.map((x, i) => {\r\n                        return (\r\n                          <div className=\"box\">\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Item\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                name=\"item_id\"\r\n                                type=\"select\"\r\n                                value={parseInt(x.item_id)}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Item</option>\r\n                                {items.map((item, key) => {\r\n                                  return (\r\n                                    <option key={key} value={item.id}>\r\n                                      {item.item_name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                              <FormFeedback>\r\n                                Item tidak boleh kosong\r\n                              </FormFeedback>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Quality\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                type=\"text\"\r\n                                name=\"qty\"\r\n                                placeholder=\"Masukan Quality\"\r\n                                value={x.qty}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Satuan\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                name=\"satuan\"\r\n                                type=\"select\"\r\n                                value={x.satuan}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Satuan</option>\r\n                                {allSatuan.map((satuan, key) => {\r\n                                  return (\r\n                                    <option key={key} value={satuan.id}>\r\n                                      {satuan.uom_code}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Person\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                name=\"person\"\r\n                                type=\"select\"\r\n                                value={x.person}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Person</option>\r\n                                {persons.map((person, key) => {\r\n                                  return (\r\n                                    <option key={key} value={person.id}>\r\n                                      {person.person_name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Harga\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                type=\"text\"\r\n                                name=\"harga\"\r\n                                placeholder=\"Masukan Harga\"\r\n                                value={x.harga}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Quality Fisik\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                type=\"text\"\r\n                                name=\"qty_fisik\"\r\n                                placeholder=\"Masukan Quality Fidik\"\r\n                                value={x.qty_fisik}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Keterangan Fisik\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                type=\"text\"\r\n                                name=\"keterangan_fisik\"\r\n                                placeholder=\"Masukan Keterangna Fisik\"\r\n                                value={x.keterangan_fisik}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <div className=\"btn-box\">\r\n                              {inputList.length !== 1 && (\r\n                                <Button\r\n                                  color=\"default\"\r\n                                  onClick={() => handleRemoveClick(i)}\r\n                                >\r\n                                  Remove\r\n                                </Button>\r\n                              )}\r\n                              {inputList.length - 1 === i && (\r\n                                <Button\r\n                                  color=\"default\"\r\n                                  onClick={handleAddClick}\r\n                                >\r\n                                  Add\r\n                                </Button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </CardBody>\r\n                    <CardFooter>\r\n                      {!isLoading && (\r\n                        <Button color=\"primary\" type=\"submit\">\r\n                          Simpan\r\n                        </Button>\r\n                      )}\r\n                      {isLoading && (\r\n                        <Button color=\"primary\" disabled>\r\n                          <i className=\"fas fa-spinner fa-spin\"></i>\r\n                          {\"\"}\r\n                          loading...\r\n                        </Button>\r\n                      )}\r\n                      <Link className=\"btn btn-info\" to=\"/admin/sales-order\">\r\n                        Kembali\r\n                      </Link>\r\n                    </CardFooter>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            ) : role === \"ROLE_ADMIN\" && namaDepartment === \"Gudang\" ? (\r\n              <Card>\r\n                <CardBody>\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <CardHeader>\r\n                      <h3>Edit Sales Order</h3>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Order Code\r\n                        </Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"text\"\r\n                          name=\"po\"\r\n                          placeholder=\"Masukan Kode\"\r\n                          value={code}\r\n                          onChange={(e) => {\r\n                            setCode(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan SO\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"text\"\r\n                          name=\"descPo\"\r\n                          placeholder=\"Masukan Keterangan SO\"\r\n                          value={descriptionSo}\r\n                          onChange={(e) => {\r\n                            setDescriptionSo(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan Gudang\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descGudang\"\r\n                          placeholder=\"Masukan Keterangan Gudang\"\r\n                          value={descriptionGudang}\r\n                          onChange={(e) => {\r\n                            setDescriptionGudang(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Status Barang\r\n                        </Label>\r\n                        <Row>\r\n                          <Col>\r\n                            <div style={{ display: \"flex\" }}>\r\n                              <div className=\"custom-control custom-radio mb-3\">\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio11\"\r\n                                  name=\"custom-radio-4\"\r\n                                  type=\"radio\"\r\n                                  value={1}\r\n                                  checked={statusBarang === 1}\r\n                                  onClick={() => setStatusBarang(1)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio11\"\r\n                                >\r\n                                  Diterima\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio12\"\r\n                                  name=\"custom-radio-4\"\r\n                                  type=\"radio\"\r\n                                  value={2}\r\n                                  checked={statusBarang === 2}\r\n                                  onClick={() => setStatusBarang(2)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio12\"\r\n                                >\r\n                                  Ditolak\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio13\"\r\n                                  name=\"custom-radio-4\"\r\n                                  type=\"radio\"\r\n                                  value={3}\r\n                                  checked={statusBarang === 3}\r\n                                  onClick={() => setStatusBarang(3)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio13\"\r\n                                >\r\n                                  Dibatalkan\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Payment Method\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          disabled\r\n                          name=\"paymentMethod\"\r\n                          type=\"select\"\r\n                          value={paymentMethod}\r\n                          invalid={paymentMethodError === \"invalid\"}\r\n                          onChange={(e) => {\r\n                            setPaymentMethod(e.target.value);\r\n                            if (e.target.value !== \"\") {\r\n                              setPaymentMethodError(\"\");\r\n                            }\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Pilih Payment Method</option>\r\n                          <option value={1}>Tunia</option>\r\n                          <option value={2}>Tempo/Termin/Utang</option>\r\n                        </Input>\r\n                        <FormFeedback>\r\n                          Payment Method tidak boleh kosong\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n\r\n                      {inputList.map((x, i) => {\r\n                        return (\r\n                          <div className=\"box\">\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Item\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                name=\"item_id\"\r\n                                type=\"select\"\r\n                                value={parseInt(x.item_id)}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Item</option>\r\n                                {items.map((item, key) => {\r\n                                  return (\r\n                                    <option key={key} value={item.id}>\r\n                                      {item.item_name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                              <FormFeedback>\r\n                                Item tidak boleh kosong\r\n                              </FormFeedback>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Quality\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                type=\"text\"\r\n                                name=\"qty\"\r\n                                placeholder=\"Masukan Quality\"\r\n                                value={x.qty}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Satuan\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                name=\"satuan\"\r\n                                type=\"select\"\r\n                                value={x.satuan}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Satuan</option>\r\n                                {allSatuan.map((satuan, key) => {\r\n                                  return (\r\n                                    <option key={key} value={satuan.id}>\r\n                                      {satuan.uom_code}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Person\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                name=\"person\"\r\n                                type=\"select\"\r\n                                value={x.person}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Person</option>\r\n                                {persons.map((person, key) => {\r\n                                  return (\r\n                                    <option key={key} value={person.id}>\r\n                                      {person.person_name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Harga\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                disabled\r\n                                type=\"text\"\r\n                                name=\"harga\"\r\n                                placeholder=\"Masukan Harga\"\r\n                                value={x.harga}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Quality Fisik\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"qty_fisik\"\r\n                                placeholder=\"Masukan Quality Fidik\"\r\n                                value={x.qty_fisik}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Keterangan Fisik\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"keterangan_fisik\"\r\n                                placeholder=\"Masukan Keterangna Fisik\"\r\n                                value={x.keterangan_fisik}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <div className=\"btn-box\">\r\n                              {inputList.length !== 1 && (\r\n                                <Button\r\n                                  color=\"default\"\r\n                                  onClick={() => handleRemoveClick(i)}\r\n                                >\r\n                                  Remove\r\n                                </Button>\r\n                              )}\r\n                              {inputList.length - 1 === i && (\r\n                                <Button\r\n                                  color=\"default\"\r\n                                  onClick={handleAddClick}\r\n                                >\r\n                                  Add\r\n                                </Button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </CardBody>\r\n                    <CardFooter>\r\n                      {!isLoading && (\r\n                        <Button color=\"primary\" type=\"submit\">\r\n                          Simpan\r\n                        </Button>\r\n                      )}\r\n                      {isLoading && (\r\n                        <Button color=\"primary\" disabled>\r\n                          <i className=\"fas fa-spinner fa-spin\"></i>\r\n                          {\"\"}\r\n                          loading...\r\n                        </Button>\r\n                      )}\r\n                      <Link className=\"btn btn-info\" to=\"/admin/sales-order\">\r\n                        Kembali\r\n                      </Link>\r\n                    </CardFooter>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            ) : (\r\n              <Card>\r\n                <CardBody>\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <CardHeader>\r\n                      <h3>Edit Sales Order</h3>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Username SO\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"SO\"\r\n                          placeholder=\"Masukan Username SO\"\r\n                          value={usernameSo}\r\n                          onChange={(e) => {\r\n                            setUsernameSo(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan SO\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descPo\"\r\n                          placeholder=\"Masukan Keterangan SO\"\r\n                          value={descriptionSo}\r\n                          onChange={(e) => {\r\n                            setDescriptionSo(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Username Purchasing\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"purchasing\"\r\n                          placeholder=\"Masukan Username Purchasing\"\r\n                          value={usernamePurchasing}\r\n                          invalid={usernamePurchasingError === \"invalid\"}\r\n                          onChange={(e) => {\r\n                            setUsernamePurchasing(e.target.value);\r\n                            if (e.target.value !== \"\") {\r\n                              setUsernamePurchasingError(\"\");\r\n                            }\r\n                          }}\r\n                        />\r\n                        <FormFeedback>\r\n                          Username Purchasing tidak boleh kosong\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan Purchasing\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descPurchasing\"\r\n                          placeholder=\"Masukan Keterangan Purchasing\"\r\n                          value={descriptionPurchasing}\r\n                          onChange={(e) => {\r\n                            setDescriptionPurchasing(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Username Gudang\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"usernameGudang\"\r\n                          placeholder=\"Masukan Username Gudang\"\r\n                          value={usernammeGudang}\r\n                          invalid={usernammeGudangError === \"invalid\"}\r\n                          onChange={(e) => {\r\n                            setUsernameGudang(e.target.value);\r\n                            if (e.target.value !== \"\") {\r\n                              setUsernameGudangError(\"\");\r\n                            }\r\n                          }}\r\n                        />\r\n                        <FormFeedback>\r\n                          Username Gudang tidak boleh kosong\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan Gudang\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descGudang\"\r\n                          placeholder=\"Masukan Keterangan Gudang\"\r\n                          value={descriptionGudang}\r\n                          onChange={(e) => {\r\n                            setDescriptionGudang(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Username Validator\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"usernameValidation\"\r\n                          placeholder=\"Masukan Username Validator\"\r\n                          value={usernameValidator}\r\n                          invalid={usernameValidatorError === \"invalid\"}\r\n                          onChange={(e) => {\r\n                            setUsernameValidator(e.target.value);\r\n                            if (e.target.value !== \"\") {\r\n                              setUsernameValidatorError(\"\");\r\n                            }\r\n                          }}\r\n                        />\r\n                        <FormFeedback>\r\n                          Username Validator tidak boleh kosong\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan Validator\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descValidator\"\r\n                          placeholder=\"Masukan Keterangan Validator\"\r\n                          value={descriptionValidator}\r\n                          onChange={(e) => {\r\n                            setDescriptionValidator(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan Payment\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descPayment\"\r\n                          placeholder=\"Masukan Keterangan Payment\"\r\n                          value={descriptionPayment}\r\n                          onChange={(e) => {\r\n                            setDescriptionPayment(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Payment Method\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          name=\"paymentMethod\"\r\n                          type=\"select\"\r\n                          value={paymentMethod}\r\n                          invalid={paymentMethodError === \"invalid\"}\r\n                          onChange={(e) => {\r\n                            setPaymentMethod(e.target.value);\r\n                            if (e.target.value !== \"\") {\r\n                              setPaymentMethodError(\"\");\r\n                            }\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Pilih Payment Method</option>\r\n                          <option value={1}>Tunia</option>\r\n                          <option value={2}>Tempo/Termin/Utang</option>\r\n                        </Input>\r\n                        <FormFeedback>\r\n                          Payment Method tidak boleh kosong\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Is Cicil\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          name=\"isCicil\"\r\n                          type=\"select\"\r\n                          value={isCicil}\r\n                          onChange={(e) => {\r\n                            setIsCicil(e.target.value);\r\n                          }}\r\n                        >\r\n                          <option value={0}>Pilih Cicilan</option>\r\n                          <option value={1}>Cicilan (Lunas)</option>\r\n                          <option value={2}>Cicilan (Belum Lunas)</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          SO Type\r\n                        </Label>\r\n                        <Input\r\n                          name=\"paymentMethod\"\r\n                          type=\"select\"\r\n                          value={soType}\r\n                          onChange={(e) => {\r\n                            setSoType(e.target.value);\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Pilih Payment Method</option>\r\n                          <option value={1}>Konvensional</option>\r\n                          <option value={2}>Indent</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Clear\r\n                        </Label>\r\n                        <Row>\r\n                          <Col>\r\n                            <div style={{ display: \"flex\" }}>\r\n                              <div className=\"custom-control custom-radio mb-3\">\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio5\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={1}\r\n                                  checked={clear === 1}\r\n                                  onClick={() => setClear(1)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio5\"\r\n                                >\r\n                                  Disetujui\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio6\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={2}\r\n                                  checked={clear === 2}\r\n                                  onClick={() => setClear(2)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio6\"\r\n                                >\r\n                                  Ditolak\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio7\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={3}\r\n                                  checked={clear === 3}\r\n                                  onClick={() => setClear(3)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio7\"\r\n                                >\r\n                                  Dibatalkan\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Approve\r\n                        </Label>\r\n                        <Row>\r\n                          <Col>\r\n                            <div style={{ display: \"flex\" }}>\r\n                              <div className=\"custom-control custom-radio mb-3\">\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio8\"\r\n                                  name=\"custom-radio-3\"\r\n                                  type=\"radio\"\r\n                                  value={1}\r\n                                  checked={approve === 1}\r\n                                  onClick={() => setApprove(1)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio8\"\r\n                                >\r\n                                  Disetujui\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio9\"\r\n                                  name=\"custom-radio-3\"\r\n                                  type=\"radio\"\r\n                                  value={2}\r\n                                  checked={approve === 2}\r\n                                  onClick={() => setApprove(2)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio9\"\r\n                                >\r\n                                  Ditolak\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio10\"\r\n                                  name=\"custom-radio-3\"\r\n                                  type=\"radio\"\r\n                                  value={3}\r\n                                  checked={approve === 3}\r\n                                  onClick={() => setApprove(3)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio10\"\r\n                                >\r\n                                  Dibatalkan\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Status Barang\r\n                        </Label>\r\n                        <Row>\r\n                          <Col>\r\n                            <div style={{ display: \"flex\" }}>\r\n                              <div className=\"custom-control custom-radio mb-3\">\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio11\"\r\n                                  name=\"custom-radio-4\"\r\n                                  type=\"radio\"\r\n                                  value={1}\r\n                                  checked={statusBarang === 1}\r\n                                  onClick={() => setStatusBarang(1)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio11\"\r\n                                >\r\n                                  Diterima\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio12\"\r\n                                  name=\"custom-radio-4\"\r\n                                  type=\"radio\"\r\n                                  value={2}\r\n                                  checked={statusBarang === 2}\r\n                                  onClick={() => setStatusBarang(2)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio12\"\r\n                                >\r\n                                  Ditolak\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio13\"\r\n                                  name=\"custom-radio-4\"\r\n                                  type=\"radio\"\r\n                                  value={3}\r\n                                  checked={statusBarang === 3}\r\n                                  onClick={() => setStatusBarang(3)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio13\"\r\n                                >\r\n                                  Dibatalkan\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </FormGroup>\r\n                      {inputList.map((x, i) => {\r\n                        return (\r\n                          <div className=\"box\">\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Item\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                name=\"item_id\"\r\n                                type=\"select\"\r\n                                value={parseInt(x.item_id)}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Item</option>\r\n                                {items.map((item, key) => {\r\n                                  return (\r\n                                    <option key={key} value={item.id}>\r\n                                      {item.item_name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                              <FormFeedback>\r\n                                Item tidak boleh kosong\r\n                              </FormFeedback>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Quality\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"qty\"\r\n                                placeholder=\"Masukan Quality\"\r\n                                value={x.qty}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Satuan\r\n                              </Label>\r\n                              <Input\r\n                                name=\"satuan\"\r\n                                type=\"select\"\r\n                                value={x.satuan}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Satuan</option>\r\n                                {allSatuan.map((satuan, key) => {\r\n                                  return (\r\n                                    <option key={key} value={satuan.id}>\r\n                                      {satuan.uom_code}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Person\r\n                              </Label>\r\n                              <Input\r\n                                name=\"person\"\r\n                                type=\"select\"\r\n                                value={x.person}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Person</option>\r\n                                {persons.map((person, key) => {\r\n                                  return (\r\n                                    <option key={key} value={person.id}>\r\n                                      {person.person_name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Harga\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"harga\"\r\n                                placeholder=\"Masukan Harga\"\r\n                                value={x.harga}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Quality Fisik\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"qty_fisik\"\r\n                                placeholder=\"Masukan Quality Fidik\"\r\n                                value={x.qty_fisik}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Keterangan Fisik\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"keterangan_fisik\"\r\n                                placeholder=\"Masukan Keterangna Fisik\"\r\n                                value={x.keterangan_fisik}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <div className=\"btn-box\">\r\n                              {inputList.length !== 1 && (\r\n                                <Button\r\n                                  color=\"default\"\r\n                                  onClick={() => handleRemoveClick(i)}\r\n                                >\r\n                                  Remove\r\n                                </Button>\r\n                              )}\r\n                              {inputList.length - 1 === i && (\r\n                                <Button\r\n                                  color=\"default\"\r\n                                  onClick={handleAddClick}\r\n                                >\r\n                                  Add\r\n                                </Button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </CardBody>\r\n                    <CardFooter>\r\n                      {!isLoading && (\r\n                        <Button color=\"primary\" type=\"submit\">\r\n                          Simpan\r\n                        </Button>\r\n                      )}\r\n                      {isLoading && (\r\n                        <Button color=\"primary\" disabled>\r\n                          <i className=\"fas fa-spinner fa-spin\"></i>\r\n                          {\"\"}\r\n                          loading...\r\n                        </Button>\r\n                      )}\r\n                      <Link className=\"btn btn-info\" to=\"/admin/sales-order\">\r\n                        Kembali\r\n                      </Link>\r\n                    </CardFooter>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function CreateSalesOrder() {\r\n  const token = localStorage.token;\r\n  const username = localStorage.username;\r\n  const warehouse = localStorage.warehouse;\r\n  const role = localStorage.authority;\r\n  const namaDepartment = localStorage.department;\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [usernameSo, setUsernameSo] = useState(username);\r\n  const [usernameKurir, setUsernameKurir] = useState(username);\r\n  const [usernammeGudang, setUsernameGudang] = useState(username);\r\n  const [usernammeGudangError, setUsernameGudangError] = useState(null);\r\n  const [usernameValidator, setUsernameValidator] = useState(username);\r\n  const [usernameValidatorError, setUsernameValidatorError] = useState(null);\r\n  const [paymentMethod, setPaymentMethod] = useState(\"\");\r\n  const [paymentMethodError, setPaymentMethodError] = useState(null);\r\n  const [descriptionPayment, setDescriptionPayment] = useState(\"\");\r\n  const [descriptionValidator, setDescriptionValidator] = useState(\"\");\r\n  const [descriptionSo, setDescriptionSo] = useState(\"\");\r\n  const [descriptionGudang, setDescriptionGudang] = useState(\"\");\r\n  const [isCicil, setIsCicil] = useState(\"\");\r\n  const [statusBarang, setStatusBarang] = useState(0);\r\n  const [clear, setClear] = useState(0);\r\n  const [approve, setApprove] = useState(0);\r\n  const [poType, setPoType] = useState(\"\");\r\n  const [customer, setCustomer] = useState(\"\");\r\n  const [allMember, setAllMember] = useState([]);\r\n  const [member, setMember] = useState(\"\");\r\n  const [typeItemId, setTypeItemId] = useState(1);\r\n  const [allJangkaWaktu, setAllJangkaWaktu] = useState([]);\r\n  const [jangkaWaktu, setJangkuWaktu] = useState(\"\");\r\n  const [person, setPerson] = useState(\"\");\r\n  const [usernameAdmin, setUsernameAdmin] = useState(username);\r\n  const [descriptionAdmin, setDescriptionAdmin] = useState(\"\");\r\n\r\n  const [items, setItems] = useState([]);\r\n  const [persons, setPersons] = useState([]);\r\n  const [allSatuan, setAllSatuan] = useState([]);\r\n\r\n  const [inputList, setInputList] = useState([\r\n    {\r\n      item_id: \"\",\r\n      qty: \"\",\r\n      qty_fisik: \"\",\r\n      keterangan_fisik: \"\",\r\n    },\r\n  ]);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (paymentMethod === \"\") {\r\n      setPaymentMethodError(\"invalid\");\r\n      error = true;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getItem();\r\n    getMember();\r\n    getPerson();\r\n    getSatuan();\r\n    getJangkaWaktu();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getItem();\r\n  }, [typeItemId, setTypeItemId]);\r\n\r\n  const getItem = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/items/type`,\r\n        { params: { warehouse_id: warehouse, type: typeItemId } },\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        setItems(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getMember = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/customer/list`, { headers })\r\n      .then((data) => {\r\n        setAllMember(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getPerson = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/person/list`, { headers })\r\n      .then((data) => {\r\n        setPersons(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getSatuan = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/uom/list`, { headers })\r\n      .then((data) => {\r\n        setAllSatuan(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getJangkaWaktu = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/jwkredit/list`, { headers })\r\n      .then((data) => {\r\n        setAllJangkaWaktu(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  // handle input change\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...inputList];\r\n    list[index][name] = name === \"keterangan_fisik\" ? value : parseInt(value);\r\n    setInputList(list);\r\n  };\r\n\r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...inputList];\r\n    list.splice(index, 1);\r\n    setInputList(list);\r\n  };\r\n\r\n  // handle click event of the Add button\r\n  const handleAddClick = () => {\r\n    setInputList([\r\n      ...inputList,\r\n      {\r\n        item_id: \"\",\r\n        qty: \"\",\r\n        qty_fisik: \"\",\r\n        keterangan_fisik: \"\",\r\n      },\r\n    ]);\r\n  };\r\n\r\n  function CreateData() {\r\n    setLoading(true);\r\n    if (role === \"ROLE_KARYAWAN\" && namaDepartment === \"Sales\") {\r\n      let data = {\r\n        warehouse_id: parseInt(warehouse),\r\n        username_so: usernameSo,\r\n        payment_method: 1,\r\n        jangka_waktu: parseInt(jangkaWaktu),\r\n        keterangan_payment: descriptionPayment,\r\n        is_cicil: parseInt(isCicil),\r\n        approve: parseInt(approve),\r\n        // active_flag: 1,\r\n        so_type: 1,\r\n        keterangan_po: descriptionSo,\r\n        person: parseInt(person),\r\n        items: inputList,\r\n        username_gudang: usernameSo,\r\n        status_barang: parseInt(statusBarang),\r\n        keterangan_gudang: descriptionGudang,\r\n        username_kurir: \"\",\r\n        username_validator: usernameValidator,\r\n        clear: parseInt(clear),\r\n        keterangan_validator: descriptionValidator,\r\n        username_admin: usernameAdmin,\r\n        keterangan_admin: descriptionAdmin,\r\n        durasi_po: 0,\r\n        admin_approval: 1,\r\n      };\r\n      axios\r\n        .post(`${process.env.REACT_APP_API_BASE_URL}/sales-order/save`, data, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        })\r\n        .then(function (response) {\r\n          history.push(\"/admin/sales-order\");\r\n        })\r\n        .then((json) => {\r\n          setLoading(false);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      let data = {\r\n        warehouse_id: parseInt(warehouse),\r\n        username_so: usernameSo,\r\n        payment_method: paymentMethod,\r\n        keterangan_payment: descriptionPayment,\r\n        is_cicil: parseInt(isCicil),\r\n        approve: 1,\r\n        username_gudang: usernammeGudang,\r\n        status_barang: parseInt(statusBarang),\r\n        keterangan_gudang: descriptionGudang,\r\n        username_kurir: usernameKurir,\r\n        member: parseInt(member),\r\n        customer: customer,\r\n        username_validator: usernameValidator,\r\n        clear: parseInt(clear),\r\n        keterangan_validator: descriptionValidator,\r\n        active_flag: 1,\r\n        so_type: 1,\r\n        so_status: 1,\r\n        keterangan_so: descriptionSo,\r\n        items: inputList,\r\n        username_admin: usernameAdmin,\r\n        keterangan_admin: descriptionAdmin,\r\n        durasi_po: 0,\r\n        admin_approval: 1,\r\n      };\r\n      axios\r\n        .post(`${process.env.REACT_APP_API_BASE_URL}/sales-order/save`, data, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        })\r\n        .then(function (response) {\r\n          history.push(\"/admin/sales-order\");\r\n        })\r\n        .then((json) => {\r\n          setLoading(false);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    }\r\n    // let data = {\r\n    //   warehouse_id: parseInt(warehouse),\r\n    //   username_so: usernameSo,\r\n    //   payment_method: paymentMethod,\r\n    //   keterangan_payment: descriptionPayment,\r\n    //   is_cicil: parseInt(isCicil),\r\n    //   approve: 1,\r\n    //   username_gudang: usernammeGudang,\r\n    //   status_barang: parseInt(statusBarang),\r\n    //   keterangan_gudang: descriptionGudang,\r\n    //   username_kurir: usernameKurir,\r\n    //   member: parseInt(member),\r\n    //   customer: customer,\r\n    //   username_validator: usernameValidator,\r\n    //   clear: parseInt(clear),\r\n    //   keterangan_validator: descriptionValidator,\r\n    //   active_flag: 1,\r\n    //   so_type: 1,\r\n    //   so_status: 1,\r\n    //   keterangan_so: descriptionSo,\r\n    //   items: inputList,\r\n    // };\r\n    // axios\r\n    //   .post(`${process.env.REACT_APP_API_BASE_URL}/sales-order/save`, data, {\r\n    //     headers: {\r\n    //       Authorization: `Bearer ${token}`,\r\n    //     },\r\n    //   })\r\n    //   .then(function (response) {\r\n    //     history.push(\"/admin/sales-order\");\r\n    //   })\r\n    //   .then((json) => {\r\n    //     setLoading(false);\r\n    //   })\r\n    //   .catch(function (error) {\r\n    //     console.log(error);\r\n    //   });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      CreateData();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Daftar Sales Order\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            {role === \"ROLE_KARYAWAN\" && namaDepartment === \"Sales\" ? (\r\n              <Card>\r\n                <CardBody>\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <CardHeader>\r\n                      <h3>Daftar Sales Order</h3>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Username SO\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"text\"\r\n                          name=\"SO\"\r\n                          placeholder=\"Masukan Username SO\"\r\n                          value={usernameSo}\r\n                          onChange={(e) => {\r\n                            setUsernameSo(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan SO\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descPo\"\r\n                          placeholder=\"Masukan Keterangan SO\"\r\n                          value={descriptionSo}\r\n                          onChange={(e) => {\r\n                            setDescriptionSo(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Username Admin\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"text\"\r\n                          name=\"po\"\r\n                          placeholder=\"Masukan Username Admin\"\r\n                          value={usernameAdmin}\r\n                          onChange={(e) => {\r\n                            setUsernameAdmin(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan Admin\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descPo\"\r\n                          placeholder=\"Masukan Keterangan Admin\"\r\n                          value={descriptionAdmin}\r\n                          onChange={(e) => {\r\n                            setDescriptionAdmin(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan Payment\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descPayment\"\r\n                          placeholder=\"Masukan Keterangan Payment\"\r\n                          value={descriptionPayment}\r\n                          onChange={(e) => {\r\n                            setDescriptionPayment(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Payment Method\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          name=\"paymentMethod\"\r\n                          type=\"select\"\r\n                          value={paymentMethod}\r\n                          invalid={paymentMethodError === \"invalid\"}\r\n                          onChange={(e) => {\r\n                            setPaymentMethod(e.target.value);\r\n                            if (e.target.value !== \"\") {\r\n                              setPaymentMethodError(\"\");\r\n                            }\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Pilih Payment Method</option>\r\n                          <option value={1}>Tunia</option>\r\n                          <option value={2}>Tempo/Termin/Utang</option>\r\n                        </Input>\r\n                        <FormFeedback>\r\n                          Payment Method tidak boleh kosong\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Is Cicil\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          name=\"isCicil\"\r\n                          type=\"select\"\r\n                          value={isCicil}\r\n                          onChange={(e) => {\r\n                            setIsCicil(e.target.value);\r\n                          }}\r\n                        >\r\n                          <option value={0}>Pilih Cicilan</option>\r\n                          <option value={1}>Cicilan (Lunas)</option>\r\n                          <option value={2}>Cicilan (Belum Lunas)</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Jangka waktu\r\n                        </Label>\r\n                        <Input\r\n                          name=\"jangkawWaktu\"\r\n                          type=\"select\"\r\n                          value={jangkaWaktu}\r\n                          onChange={(e) => {\r\n                            setJangkuWaktu(e.target.value);\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Pilih Jangka Waktu</option>\r\n                          {allJangkaWaktu.map((waktu, key) => {\r\n                            return (\r\n                              <option key={key} value={waktu.durasi}>\r\n                                {waktu.durasi}\r\n                              </option>\r\n                            );\r\n                          })}\r\n                        </Input>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          SO Type\r\n                        </Label>\r\n                        <Input\r\n                          name=\"paymentMethod\"\r\n                          type=\"select\"\r\n                          value={poType}\r\n                          onChange={(e) => {\r\n                            setPoType(e.target.value);\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Pilih Payment Method</option>\r\n                          <option value={1}>Konvensional</option>\r\n                          <option value={2}>Indent</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Person\r\n                        </Label>\r\n                        <Input\r\n                          name=\"person\"\r\n                          type=\"select\"\r\n                          value={person}\r\n                          onChange={(e) => {\r\n                            setPerson(e.target.value);\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Pilih Person</option>\r\n                          {persons.map((person, key) => {\r\n                            return (\r\n                              <option key={key} value={person.id}>\r\n                                {person.person_name}\r\n                              </option>\r\n                            );\r\n                          })}\r\n                        </Input>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Approve\r\n                        </Label>\r\n                        <Row>\r\n                          <Col>\r\n                            <div style={{ display: \"flex\" }}>\r\n                              <div className=\"custom-control custom-radio mb-3\">\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio8\"\r\n                                  name=\"custom-radio-3\"\r\n                                  type=\"radio\"\r\n                                  value={1}\r\n                                  checked={approve === 1}\r\n                                  onChange={() => setApprove(1)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio8\"\r\n                                >\r\n                                  Disetujui\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio9\"\r\n                                  name=\"custom-radio-3\"\r\n                                  type=\"radio\"\r\n                                  value={2}\r\n                                  checked={approve === 2}\r\n                                  onChange={() => setApprove(2)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio9\"\r\n                                >\r\n                                  Ditolak\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio10\"\r\n                                  name=\"custom-radio-3\"\r\n                                  type=\"radio\"\r\n                                  value={3}\r\n                                  checked={approve === 3}\r\n                                  onChange={() => setApprove(3)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio10\"\r\n                                >\r\n                                  Dibatalkan\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </FormGroup>\r\n                      {inputList.map((x, i) => {\r\n                        return (\r\n                          <div className=\"box\" key={i}>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Tipe Item\r\n                              </Label>\r\n                              <Input\r\n                                name=\"item_id\"\r\n                                type=\"select\"\r\n                                onChange={(event) =>\r\n                                  setTypeItemId(event.target.value)\r\n                                }\r\n                              >\r\n                                <option value=\"1\">Barang Mentah</option>\r\n                                <option value=\"2\">Barang Produksi</option>\r\n                              </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Item\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                name=\"item_id\"\r\n                                type=\"select\"\r\n                                value={x.item_id}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Item</option>\r\n                                {items.map((item, key) => {\r\n                                  return (\r\n                                    <option key={key} value={item.id}>\r\n                                      {item.item_name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                              <FormFeedback>\r\n                                Item tidak boleh kosong\r\n                              </FormFeedback>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Quality\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"qty\"\r\n                                placeholder=\"Masukan Quality\"\r\n                                value={x.qty}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Satuan\r\n                              </Label>\r\n                              <Input\r\n                                name=\"satuan\"\r\n                                type=\"select\"\r\n                                value={x.satuan}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Satuan</option>\r\n                                {allSatuan.map((satuan, key) => {\r\n                                  return (\r\n                                    <option key={key} value={satuan.id}>\r\n                                      {satuan.uom_code}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </FormGroup>\r\n                            {/* <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Person\r\n                              </Label>\r\n                              <Input\r\n                                name=\"person\"\r\n                                type=\"select\"\r\n                                value={x.person}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Person</option>\r\n                                {persons.map((person, key) => {\r\n                                  return (\r\n                                    <option key={key} value={person.id}>\r\n                                      {person.person_name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </FormGroup> */}\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Harga\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"harga\"\r\n                                placeholder=\"Masukan Harga\"\r\n                                value={x.harga}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Quality Fisik\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"qty_fisik\"\r\n                                placeholder=\"Masukan Quality Fidik\"\r\n                                value={x.qty_fisik}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Keterangan Fisik\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"keterangan_fisik\"\r\n                                placeholder=\"Masukan Keterangna Fisik\"\r\n                                value={x.keterangan_fisik}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <div className=\"btn-box\">\r\n                              {inputList.length !== 1 && (\r\n                                <Button\r\n                                  color=\"default\"\r\n                                  onClick={() => handleRemoveClick(i)}\r\n                                >\r\n                                  Remove\r\n                                </Button>\r\n                              )}\r\n                              {inputList.length - 1 === i && (\r\n                                <Button\r\n                                  color=\"default\"\r\n                                  onClick={handleAddClick}\r\n                                >\r\n                                  Add\r\n                                </Button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </CardBody>\r\n                    <CardFooter>\r\n                      {!isLoading && (\r\n                        <Button color=\"primary\" type=\"submit\">\r\n                          Simpan\r\n                        </Button>\r\n                      )}\r\n                      {isLoading && (\r\n                        <Button color=\"primary\" disabled>\r\n                          <i className=\"fas fa-spinner fa-spin\"></i>\r\n                          {\"\"}\r\n                          loading...\r\n                        </Button>\r\n                      )}\r\n                      <Link className=\"btn btn-info\" to=\"/admin/sales-order\">\r\n                        Kembali\r\n                      </Link>\r\n                    </CardFooter>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            ) : (\r\n              <Card>\r\n                <CardBody>\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <CardHeader>\r\n                      <h3>Daftar Sales Order</h3>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Username SO\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          disabled\r\n                          type=\"text\"\r\n                          name=\"SO\"\r\n                          placeholder=\"Masukan Username SO\"\r\n                          value={usernameSo}\r\n                          onChange={(e) => {\r\n                            setUsernameSo(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan SO\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descPo\"\r\n                          placeholder=\"Masukan Keterangan SO\"\r\n                          value={descriptionSo}\r\n                          onChange={(e) => {\r\n                            setDescriptionSo(e.target.value);\r\n                          }}\r\n                        />\r\n                        <FormFeedback>\r\n                          Keterangan SO tidak boleh kosong\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Username Validator\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"usernameValidation\"\r\n                          placeholder=\"Masukan Username Validator\"\r\n                          value={usernameValidator}\r\n                          invalid={usernameValidatorError === \"invalid\"}\r\n                          onChange={(e) => {\r\n                            setUsernameValidator(e.target.value);\r\n                            if (e.target.value !== \"\") {\r\n                              setUsernameValidatorError(\"\");\r\n                            }\r\n                          }}\r\n                        />\r\n                        <FormFeedback>\r\n                          Username Validator tidak boleh kosong\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan Validator\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descValidator\"\r\n                          placeholder=\"Masukan Keterangan Validator\"\r\n                          value={descriptionValidator}\r\n                          onChange={(e) => {\r\n                            setDescriptionValidator(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Username Gudang\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"usernameGudang\"\r\n                          placeholder=\"Masukan Username Gudang\"\r\n                          value={usernammeGudang}\r\n                          invalid={usernammeGudangError === \"invalid\"}\r\n                          onChange={(e) => {\r\n                            setUsernameGudang(e.target.value);\r\n                            if (e.target.value !== \"\") {\r\n                              setUsernameGudangError(\"\");\r\n                            }\r\n                          }}\r\n                        />\r\n                        <FormFeedback>\r\n                          Username Gudang tidak boleh kosong\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan Gudang\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descGudang\"\r\n                          placeholder=\"Masukan Keterangan Gudang\"\r\n                          value={descriptionGudang}\r\n                          onChange={(e) => {\r\n                            setDescriptionGudang(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                        >\r\n                          Keterangan Payment\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"descPayment\"\r\n                          placeholder=\"Masukan Keterangan Payment\"\r\n                          value={descriptionPayment}\r\n                          onChange={(e) => {\r\n                            setDescriptionPayment(e.target.value);\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Payment Method\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          name=\"paymentMethod\"\r\n                          type=\"select\"\r\n                          value={paymentMethod}\r\n                          invalid={paymentMethodError === \"invalid\"}\r\n                          onChange={(e) => {\r\n                            setPaymentMethod(e.target.value);\r\n                            if (e.target.value !== \"\") {\r\n                              setPaymentMethodError(\"\");\r\n                            }\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Pilih Payment Method</option>\r\n                          <option value={1}>Tunia</option>\r\n                          <option value={2}>Tempo/Termin/Utang</option>\r\n                        </Input>\r\n                        <FormFeedback>\r\n                          Payment Method tidak boleh kosong\r\n                        </FormFeedback>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Is Cicil\r\n                          <span className=\"text-danger\">*</span>\r\n                        </Label>\r\n                        <Input\r\n                          name=\"isCicil\"\r\n                          type=\"select\"\r\n                          value={isCicil}\r\n                          onChange={(e) => {\r\n                            setIsCicil(e.target.value);\r\n                          }}\r\n                        >\r\n                          <option value={0}>Pilih Cicilan</option>\r\n                          <option value={1}>Cicilan (Lunas)</option>\r\n                          <option value={2}>Cicilan (Belum Lunas)</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          SO Type\r\n                        </Label>\r\n                        <Input\r\n                          name=\"paymentMethod\"\r\n                          type=\"select\"\r\n                          value={poType}\r\n                          onChange={(e) => {\r\n                            setPoType(e.target.value);\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Pilih Payment Method</option>\r\n                          <option value={1}>Konvensional</option>\r\n                          <option value={2}>Indent</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Person\r\n                        </Label>\r\n                        <Input\r\n                          name=\"person\"\r\n                          type=\"select\"\r\n                          value={person}\r\n                          onChange={(e) => {\r\n                            setPerson(e.target.value);\r\n                          }}\r\n                        >\r\n                          <option value=\"\">Pilih Person</option>\r\n                          {persons.map((person, key) => {\r\n                            return (\r\n                              <option key={key} value={person.id}>\r\n                                {person.person_name}\r\n                              </option>\r\n                            );\r\n                          })}\r\n                        </Input>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Clear\r\n                        </Label>\r\n                        <Row>\r\n                          <Col>\r\n                            <div style={{ display: \"flex\" }}>\r\n                              <div className=\"custom-control custom-radio mb-3\">\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio5\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={1}\r\n                                  checked={clear === 1}\r\n                                  onChange={() => setClear(1)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio5\"\r\n                                  check\r\n                                >\r\n                                  Disetujui\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio6\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={2}\r\n                                  checked={clear === 2}\r\n                                  onChange={() => setClear(2)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio6\"\r\n                                  check\r\n                                >\r\n                                  Ditolak\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio7\"\r\n                                  name=\"custom-radio-2\"\r\n                                  type=\"radio\"\r\n                                  value={3}\r\n                                  checked={clear === 3}\r\n                                  onChange={() => setClear(3)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio7\"\r\n                                  check\r\n                                >\r\n                                  Dibatalkan\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Approve\r\n                        </Label>\r\n                        <Row>\r\n                          <Col>\r\n                            <div style={{ display: \"flex\" }}>\r\n                              <div className=\"custom-control custom-radio mb-3\">\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio8\"\r\n                                  name=\"custom-radio-3\"\r\n                                  type=\"radio\"\r\n                                  value={1}\r\n                                  checked={approve === 1}\r\n                                  onChange={() => setApprove(1)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio8\"\r\n                                >\r\n                                  Disetujui\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio9\"\r\n                                  name=\"custom-radio-3\"\r\n                                  type=\"radio\"\r\n                                  value={2}\r\n                                  checked={approve === 2}\r\n                                  onChange={() => setApprove(2)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio9\"\r\n                                >\r\n                                  Ditolak\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio10\"\r\n                                  name=\"custom-radio-3\"\r\n                                  type=\"radio\"\r\n                                  value={3}\r\n                                  checked={approve === 3}\r\n                                  onChange={() => setApprove(3)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio10\"\r\n                                >\r\n                                  Dibatalkan\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </FormGroup>\r\n                      <FormGroup>\r\n                        <Label\r\n                          className=\"form-control-label\"\r\n                          htmlFor=\"exampleFormControlSelect3\"\r\n                        >\r\n                          Status Barang\r\n                        </Label>\r\n                        <Row>\r\n                          <Col>\r\n                            <div style={{ display: \"flex\" }}>\r\n                              <div className=\"custom-control custom-radio mb-3\">\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio11\"\r\n                                  name=\"custom-radio-4\"\r\n                                  type=\"radio\"\r\n                                  value={1}\r\n                                  checked={statusBarang === 1}\r\n                                  onChange={() => setStatusBarang(1)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio11\"\r\n                                >\r\n                                  Diterima\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio12\"\r\n                                  name=\"custom-radio-4\"\r\n                                  type=\"radio\"\r\n                                  value={2}\r\n                                  checked={statusBarang === 2}\r\n                                  onChange={() => setStatusBarang(2)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio12\"\r\n                                >\r\n                                  Ditolak\r\n                                </Label>\r\n                              </div>\r\n                              <div\r\n                                className=\"custom-control custom-radio mb-3\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                <Input\r\n                                  className=\"custom-control-input\"\r\n                                  id=\"customRadio13\"\r\n                                  name=\"custom-radio-4\"\r\n                                  type=\"radio\"\r\n                                  value={3}\r\n                                  checked={statusBarang === 3}\r\n                                  onChange={() => setStatusBarang(3)}\r\n                                />\r\n                                <Label\r\n                                  className=\"custom-control-label\"\r\n                                  htmlFor=\"customRadio13\"\r\n                                >\r\n                                  Dibatalkan\r\n                                </Label>\r\n                              </div>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </FormGroup>\r\n                      {inputList.map((x, i) => {\r\n                        return (\r\n                          <div className=\"box\" key={i}>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Tipe Item\r\n                              </Label>\r\n                              <Input\r\n                                name=\"item_id\"\r\n                                type=\"select\"\r\n                                onChange={(event) =>\r\n                                  setTypeItemId(event.target.value)\r\n                                }\r\n                              >\r\n                                <option value=\"1\">Barang Mentah</option>\r\n                                <option value=\"2\">Barang Produksi</option>\r\n                              </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Item\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                name=\"item_id\"\r\n                                type=\"select\"\r\n                                value={x.item_id}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Item</option>\r\n                                {items.map((item, key) => {\r\n                                  return (\r\n                                    <option key={key} value={item.id}>\r\n                                      {item.item_name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                              <FormFeedback>\r\n                                Item tidak boleh kosong\r\n                              </FormFeedback>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Quality\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"qty\"\r\n                                placeholder=\"Masukan Quality\"\r\n                                value={x.qty}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Satuan\r\n                              </Label>\r\n                              <Input\r\n                                name=\"satuan\"\r\n                                type=\"select\"\r\n                                value={x.satuan}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Satuan</option>\r\n                                {allSatuan.map((satuan, key) => {\r\n                                  return (\r\n                                    <option key={key} value={satuan.id}>\r\n                                      {satuan.uom_code}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </FormGroup>\r\n                            {/* <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Person\r\n                              </Label>\r\n                              <Input\r\n                                name=\"person\"\r\n                                type=\"select\"\r\n                                value={x.person}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              >\r\n                                <option value=\"\">Pilih Person</option>\r\n                                {persons.map((person, key) => {\r\n                                  return (\r\n                                    <option key={key} value={person.id}>\r\n                                      {person.person_name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </FormGroup> */}\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Harga\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"harga\"\r\n                                placeholder=\"Masukan Harga\"\r\n                                value={x.harga}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Quality Fisik\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"qty_fisik\"\r\n                                placeholder=\"Masukan Quality Fidik\"\r\n                                value={x.qty_fisik}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlInput1\"\r\n                              >\r\n                                Keterangan Fisik\r\n                                <span className=\"text-danger\">*</span>\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"keterangan_fisik\"\r\n                                placeholder=\"Masukan Keterangna Fisik\"\r\n                                value={x.keterangan_fisik}\r\n                                onChange={(e) => handleInputChange(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <div className=\"btn-box\">\r\n                              {inputList.length !== 1 && (\r\n                                <Button\r\n                                  color=\"default\"\r\n                                  onClick={() => handleRemoveClick(i)}\r\n                                >\r\n                                  Remove\r\n                                </Button>\r\n                              )}\r\n                              {inputList.length - 1 === i && (\r\n                                <Button\r\n                                  color=\"default\"\r\n                                  onClick={handleAddClick}\r\n                                >\r\n                                  Add\r\n                                </Button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </CardBody>\r\n                    <CardFooter>\r\n                      {!isLoading && (\r\n                        <Button color=\"primary\" type=\"submit\">\r\n                          Simpan\r\n                        </Button>\r\n                      )}\r\n                      {isLoading && (\r\n                        <Button color=\"primary\" disabled>\r\n                          <i className=\"fas fa-spinner fa-spin\"></i>\r\n                          {\"\"}\r\n                          loading...\r\n                        </Button>\r\n                      )}\r\n                      <Link className=\"btn btn-info\" to=\"/admin/sales-order\">\r\n                        Kembali\r\n                      </Link>\r\n                    </CardFooter>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  TabContent,\r\n  TabPane\r\n} from \"reactstrap\";\r\n\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport classnames from 'classnames';\r\n\r\nimport PenawaranSo from \"views/pages/so/PenawaranSo/Index.js\";\r\nimport ValidasiPenawaranSo from \"views/pages/so/ValidasiSo/Index.js\"\r\nimport AdminApprove from \"views/pages/so/AdminApprove/Index.js\"\r\nimport ValidasiPemimpin from \"views/pages/so/ValidatorSo/Index.js\"\r\n \r\nexport default function So() {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Sales Order\" parentName=\"SO\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Nav tabs>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '1' })}\r\n                      onClick={() => { toggle('1'); }}\r\n                    >\r\n                      Penawaran SO\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '2' })}\r\n                      onClick={() => { toggle('2'); }}\r\n                    >\r\n                      Validasi Penawaran SO\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '3' })}\r\n                      onClick={() => { toggle('3'); }}\r\n                    >\r\n                      Validasi Admin SO\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === '4' })}\r\n                      onClick={() => { toggle('4'); }}\r\n                    >\r\n                      Validasi Pimpinan\r\n                    </NavLink>\r\n                  </NavItem>\r\n                </Nav>\r\n                <TabContent activeTab={activeTab}>\r\n                  <TabPane tabId=\"1\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <PenawaranSo />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                  <TabPane tabId=\"2\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <ValidasiPenawaranSo />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                  <TabPane tabId=\"3\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <AdminApprove />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                  <TabPane tabId=\"4\">\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <ValidasiPemimpin />\r\n                      </Col>\r\n                    </Row>\r\n                  </TabPane>\r\n                </TabContent>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState, useReducer, useContext } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Container,\r\n  InputGroup,\r\n  Button,\r\n  InputGroupText,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport { toast } from \"react-toastify\";\r\nimport ModalPembayaran from \"./ModalPembayaran\";\r\nimport ModalAddMember from \"./ModalAddMember\";\r\nimport { AppContext } from \"libs/context\";\r\nimport ModalAddItem from \"./ModalAddItem\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ModalAddKurir from \"./ModalAddKurir\";\r\n\r\nexport default function CreateSalesOrder() {\r\n  const token = localStorage.token;\r\n  const warehouse = localStorage.warehouse;\r\n  const username = localStorage.username;\r\n\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [customer, setCustomer] = useState(\"\");\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n  const { cartKasir, dispatch } = useContext(AppContext);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: \"setUsernameSo\", data_name: localStorage.username });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let total = 0;\r\n    cartKasir.item.forEach((item, index) => {\r\n      total += item.price * item.qty;\r\n    });\r\n    console.log(total);\r\n    setTotalPrice(total);\r\n  }, [cartKasir, dispatch]);\r\n\r\n  async function selectModal(id, data_id, data_name = null) {\r\n    switch (id) {\r\n      case \"customer\":\r\n        setCustomer({\r\n          id: data_id,\r\n          name: data_name,\r\n        });\r\n        dispatch({ type: \"setCustomer\", data_id: data_id });\r\n        break;\r\n      case \"customer\":\r\n        setCustomer({\r\n          id: data_id,\r\n          name: data_name,\r\n        });\r\n        dispatch({ type: \"setUsernameKurir\", data_id: data_name });\r\n        break;\r\n      case \"item\":\r\n        const item = data_id;\r\n        const res = await axios.get(\r\n          `${process.env.REACT_APP_API_BASE_URL}/price-detail/${item.id}`\r\n        );\r\n\r\n        dispatch({\r\n          type: \"addItem\",\r\n          id: item.id,\r\n          item_name: item.item_name,\r\n          satuan: item.uom_code,\r\n          item_code: item.item_code,\r\n          price: res.data.response_data.harga_jual,\r\n        });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Kasir\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col xs={6} className=\"mb-3\">\r\n                    <textarea\r\n                      className=\"form-control\"\r\n                      disabled\r\n                      style={{\r\n                        fontSize: 50,\r\n                        paddingTop: 20,\r\n                        top: \"50%\",\r\n                        height: 117,\r\n                        resize: \"none\",\r\n                      }}\r\n                      value={\r\n                        \"Rp.\" +\r\n                        totalPrice\r\n                          .toFixed(2)\r\n                          .replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\") +\r\n                        \",-\"\r\n                      }\r\n                    ></textarea>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row className=\"mb-3\">\r\n                  <Col xs={3}>\r\n                    <div style={{ display: \"flex\" }}>\r\n                      <Input type=\"text\" placeholder=\"Barcode\"></Input>\r\n                    </div>\r\n                  </Col>\r\n                  <Col xs={3}>\r\n                    <ModalAddItem selectModal={selectModal} />\r\n                  </Col>\r\n                  <Col xs={3}>\r\n                    <ModalPembayaran></ModalPembayaran>\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"mb-3\">\r\n                  <Col xs={3}>\r\n                    <ModalAddMember\r\n                      item={\r\n                        cartKasir.customer == null ? \"\" : cartKasir.customer\r\n                      }\r\n                      selectModal={selectModal}\r\n                    />\r\n                  </Col>\r\n\r\n                  <Col xs={3}>\r\n                    <ModalAddKurir\r\n                      item={\r\n                        cartKasir.username_kurir == null\r\n                          ? \"\"\r\n                          : cartKasir.username_kurir\r\n                      }\r\n                      selectModal={selectModal}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n\r\n                <ToolkitProvider\r\n                  rowNumb\r\n                  keyField=\"cart\"\r\n                  data={cartKasir.item}\r\n                  columns={[\r\n                    {\r\n                      dataField: \"item_name\",\r\n                      text: \"Nama Item\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"item_code\",\r\n                      text: \"Kode item\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"satuan\",\r\n                      text: \"Satuan item\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"price\",\r\n                      text: \"Harga item\",\r\n                      sort: true,\r\n                    },\r\n                    {\r\n                      dataField: \"qty\",\r\n                      text: \"Qty\",\r\n                      sort: true,\r\n                      formatter: (cell, row, index) => {\r\n                        {\r\n                          console.log(row);\r\n                        }\r\n                        return (\r\n                          <Input\r\n                            type=\"number\"\r\n                            style={{ width: 50 }}\r\n                            className=\"mb-0 mt-0 text-center\"\r\n                            bsSize=\"sm\"\r\n                            defaultValue={row.qty}\r\n                            onChange={(event) => {\r\n                              event.target.value > 0 &&\r\n                                dispatch({\r\n                                  type: \"changeQtyItem\",\r\n                                  id: row.item_id,\r\n                                  qty: event.target.value,\r\n                                });\r\n                            }}\r\n                          />\r\n                        );\r\n                      },\r\n                    },\r\n                    {\r\n                      dataField: \"sub_total\",\r\n                      text: \"Sub Total\",\r\n                      classes: \"text-center\",\r\n                      formatter: (cell, row, index) => {\r\n                        return (\r\n                          <div key={index} className=\"text-center\">\r\n                            {row.qty * row.price}\r\n                          </div>\r\n                        );\r\n                      },\r\n                    },\r\n\r\n                    {\r\n                      dataField: \"action\",\r\n                      text: \"\",\r\n                      classes: \"text-center\",\r\n                      formatter: (cell, row, index) => {\r\n                        return (\r\n                          <Button\r\n                            key={index * 100}\r\n                            size=\"sm\"\r\n                            onClick={() => {\r\n                              dispatch({\r\n                                type: \"removeItem\",\r\n                                id: row.item_id,\r\n                              });\r\n                            }}\r\n                            color=\"danger\"\r\n                          >\r\n                            Remove\r\n                          </Button>\r\n                        );\r\n                      },\r\n                    },\r\n                  ]}\r\n                >\r\n                  {(props) => (\r\n                    <BootstrapTable bordered={false} {...props.baseProps} />\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form,\r\n  FormFeedback,\r\n} from 'reactstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport SimpleHeader from 'components/Headers/SimpleHeader.js';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default function Create() {\r\n  const token = localStorage.token;\r\n  const warehouse = localStorage.warehouse;\r\n  let soItems;\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    Authorization: `Bearer ${token}`,\r\n  };\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [kodeSo, setKodeSo] = useState('');\r\n  const [dataSo, setDataSo] = useState('');\r\n  const [dataSoItems, setDataSoItems] = useState('');\r\n  const initialReturItems = {\r\n    item_id: '',\r\n    qty: '',\r\n    keterangan: '',\r\n  };\r\n  const [dataReturItems, setDataReturItems] = useState([initialReturItems]);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  // handle input change item\r\n  const onInputChangeItem = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...dataReturItems];\r\n    list[index][name] = value;\r\n    setDataReturItems(list);\r\n  };\r\n\r\n  // handle input change\r\n  const onInputChange = (type, val) => {\r\n    setDataSo((prevState) => ({\r\n      ...prevState,\r\n      [type]: val,\r\n    }));\r\n  };\r\n\r\n  const postReturSo = async () => {\r\n    setLoading(true);\r\n    const payload = {\r\n      warehouse_id: dataSo.warehouse_id,\r\n      username_so: dataSo.username_so,\r\n      item_or_money: parseInt(dataSo.item_or_money),\r\n      payment_method: dataSo.payment_method,\r\n      keterangan_payment: dataSo.keterangan_payment,\r\n      is_cicil: dataSo.is_cicil,\r\n      username_gudang: dataSo.username_gudang,\r\n      status_barang: dataSo.status_barang,\r\n      keterangan_gudang: dataSo.keterangan_gudang,\r\n      username_kurir: dataSo.username_kurir,\r\n      username_validator: dataSo.username_validator,\r\n      username_manajer: '',\r\n      manajer_approval: 0,\r\n      keterangan_manajer: '',\r\n      clear: dataSo.clear,\r\n      keterangan_validator: dataSo.keterangan_validator,\r\n      so_type: dataSo.so_type,\r\n      keterangan_so: dataSo.keterangan_so,\r\n      items:\r\n        parseInt(dataSo.item_or_money) === 2 ? dataSo.items : dataReturItems,\r\n      retur_code: dataSo.order_code,\r\n    };\r\n\r\n    await axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/retur-so/save`, payload, {\r\n        headers,\r\n      })\r\n      .then(function (response) {\r\n        history.push('/admin/so-return');\r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleSearchSO = async () => {\r\n    await axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/sales-order/get?order_code=${kodeSo}`,\r\n        {\r\n          headers,\r\n        }\r\n      )\r\n      .then(async (data) => {\r\n        await getSoItems(data.data.response_data.id);\r\n        const mergeItems = {\r\n          ...data.data.response_data,\r\n          items: soItems,\r\n        };\r\n        setDataSo(mergeItems);\r\n        if (data.data.status === 'false') {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Gagal',\r\n            text: 'Maaf, Data SO tidak ditemukan',\r\n          });\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Gagal',\r\n          text: 'Maaf, Data SO tidak ditemukan',\r\n        });\r\n      });\r\n  };\r\n\r\n  const getSoItems = async (so_id) => {\r\n    await axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/sales-order/so-items`,\r\n        { so_id: so_id },\r\n        {\r\n          headers,\r\n        }\r\n      )\r\n      .then((data) => {\r\n        setDataSoItems(data.data.response_data);\r\n        const constructItems = [];\r\n        data.data.response_data.map((key) => {\r\n          constructItems.push({\r\n            item_id: key.item_id,\r\n            qty: key.qty,\r\n            keterangan: '',\r\n          });\r\n        });\r\n        soItems = constructItems;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      postReturSo();\r\n    }\r\n  };\r\n\r\n  const onAddItem = () => {\r\n    setDataReturItems([...dataReturItems, initialReturItems]);\r\n  };\r\n\r\n  const onRemoveItem = (index) => {\r\n    const list = [...dataReturItems];\r\n    list.splice(index, 1);\r\n    setDataReturItems(list);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Daftar Sales Order Return\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <CardHeader>\r\n                    <h3>Daftar Sales Order Return</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Kode Sales Order\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"codeSo\"\r\n                        placeholder=\"Masukan Kode Sales Order\"\r\n                        value={kodeSo}\r\n                        onChange={(e) => {\r\n                          setKodeSo(e.target.value);\r\n                        }}\r\n                      />\r\n                      <FormFeedback>\r\n                        Kode Sales Order tidak boleh kosong\r\n                      </FormFeedback>\r\n                    </FormGroup>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      style={{ marginBottom: 12 }}\r\n                      onClick={handleSearchSO}\r\n                    >\r\n                      Cari\r\n                    </Button>\r\n                    {dataSo && (\r\n                      <div>\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">\r\n                            Username SO\r\n                          </Label>\r\n                          <Input\r\n                            disabled\r\n                            type=\"text\"\r\n                            value={dataSo?.username_so}\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">\r\n                            Keterangan SO\r\n                          </Label>\r\n                          <Input\r\n                            disabled\r\n                            type=\"text\"\r\n                            value={dataSo?.keterangan_so}\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">\r\n                            Username Validator\r\n                          </Label>\r\n                          <Input\r\n                            disabled\r\n                            type=\"text\"\r\n                            value={dataSo?.username_validator}\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">\r\n                            Keterangan Validator\r\n                          </Label>\r\n                          <Input\r\n                            disabled\r\n                            type=\"text\"\r\n                            value={dataSo?.keterangan_validator}\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">\r\n                            Username Gudang\r\n                          </Label>\r\n                          <Input\r\n                            disabled\r\n                            type=\"text\"\r\n                            value={dataSo?.username_gudang}\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">\r\n                            Keterangan Payment\r\n                          </Label>\r\n                          <Input\r\n                            disabled\r\n                            type=\"text\"\r\n                            value={dataSo?.keterangan_payment}\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">\r\n                            Payment Method\r\n                          </Label>\r\n                          <Input\r\n                            disabled\r\n                            type=\"text\"\r\n                            value={\r\n                              dataSo?.payment_method === 1\r\n                                ? 'Tunai'\r\n                                : 'Tempo / Termin / Utang'\r\n                            }\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">Is Cicil</Label>\r\n                          <Input\r\n                            disabled\r\n                            type=\"text\"\r\n                            value={\r\n                              dataSo?.is_cicil === 0\r\n                                ? 'Pilih Cicilan'\r\n                                : dataSo?.is_cicil === 1\r\n                                ? 'Cicilan (Lunas)'\r\n                                : 'Cicilan (Belum Lunas)'\r\n                            }\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\"> SO Type</Label>\r\n                          <Input\r\n                            disabled\r\n                            type=\"text\"\r\n                            value={\r\n                              dataSo?.is_cicil === 1\r\n                                ? 'Konvensional'\r\n                                : 'Cicilan (Belum Lunas)'\r\n                            }\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">Clear</Label>\r\n                          <Input\r\n                            disabled\r\n                            type=\"text\"\r\n                            value={\r\n                              dataSo?.clear === 1\r\n                                ? 'Disetujui'\r\n                                : dataSo?.clear === 2\r\n                                ? 'Ditolak'\r\n                                : 'Dibatalkan'\r\n                            }\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">Approve</Label>\r\n                          <Input\r\n                            disabled\r\n                            type=\"text\"\r\n                            value={\r\n                              dataSo?.approve === 1\r\n                                ? 'Disetujui'\r\n                                : dataSo?.approve === 2\r\n                                ? 'Ditolak'\r\n                                : 'Dibatalkan'\r\n                            }\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">\r\n                            Status Barang\r\n                          </Label>\r\n                          <Input\r\n                            disabled\r\n                            type=\"text\"\r\n                            value={\r\n                              dataSo?.status_barang === 1\r\n                                ? 'Disetujui'\r\n                                : dataSo?.status_barang === 2\r\n                                ? 'Ditolak'\r\n                                : 'Dibatalkan'\r\n                            }\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">Qty</Label>\r\n                          <Input\r\n                            disabled\r\n                            type=\"text\"\r\n                            value={dataSo?.total_qty}\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">Harga</Label>\r\n                          <Input\r\n                            disabled\r\n                            type=\"text\"\r\n                            value={dataSo?.total_price}\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">\r\n                            Total Qty Fisik\r\n                          </Label>\r\n                          <Input\r\n                            disabled\r\n                            type=\"text\"\r\n                            value={dataSo?.total_qty_fisik}\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">\r\n                            Total Harga Fisik\r\n                          </Label>\r\n                          <Input\r\n                            disabled\r\n                            type=\"text\"\r\n                            value={dataSo?.total_price_fisik}\r\n                          />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label\r\n                            className=\"form-control-label\"\r\n                            htmlFor=\"exampleFormControlSelect3\"\r\n                          >\r\n                            Item or Money\r\n                          </Label>\r\n                          <Input\r\n                            name=\"item_or_money\"\r\n                            type=\"select\"\r\n                            onChange={(e) =>\r\n                              onInputChange('item_or_money', e.target.value)\r\n                            }\r\n                          >\r\n                            <option value=\"0\">Pilih</option>\r\n                            <option value={1}>Item</option>\r\n                            <option value={2}>Money</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                        {parseInt(dataSo.item_or_money) === 1 &&\r\n                          dataReturItems.map((x, i) => {\r\n                            return (\r\n                              <div key={i}>\r\n                                <FormGroup>\r\n                                  <Label\r\n                                    className=\"form-control-label\"\r\n                                    htmlFor=\"exampleFormControlSelect3\"\r\n                                  >\r\n                                    Item\r\n                                  </Label>\r\n                                  <Input\r\n                                    name=\"item_id\"\r\n                                    type=\"select\"\r\n                                    onChange={(e) => {\r\n                                      onInputChangeItem(e, i);\r\n                                    }}\r\n                                  >\r\n                                    <option value=\"0\">Pilih Item</option>\r\n                                    {dataSoItems.map((item, key) => {\r\n                                      return (\r\n                                        <option key={key} value={item.item_id}>\r\n                                          {item.item_name}\r\n                                        </option>\r\n                                      );\r\n                                    })}\r\n                                  </Input>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                  <Label className=\"form-control-label\">\r\n                                    Quantity\r\n                                  </Label>\r\n                                  <Input\r\n                                    type=\"text\"\r\n                                    name=\"qty\"\r\n                                    placeholder=\"Masukan Quantity yang Akan di Retur\"\r\n                                    value={dataReturItems.qty}\r\n                                    onChange={(e) => onInputChangeItem(e, i)}\r\n                                  />\r\n                                </FormGroup>\r\n                                <div className=\"btn-box\">\r\n                                  {dataReturItems.length !== 1 && (\r\n                                    <Button\r\n                                      color=\"default\"\r\n                                      onClick={() => onRemoveItem(i)}\r\n                                    >\r\n                                      Remove\r\n                                    </Button>\r\n                                  )}\r\n                                  {dataReturItems.length - 1 === i && (\r\n                                    <Button color=\"default\" onClick={onAddItem}>\r\n                                      Add\r\n                                    </Button>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                            );\r\n                          })}\r\n                      </div>\r\n                    )}\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        Simpan\r\n                      </Button>\r\n                    )}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {''}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/so-return\">\r\n                      Kembali\r\n                    </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form,\r\n  FormFeedback,\r\n} from 'reactstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport SimpleHeader from 'components/Headers/SimpleHeader.js';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default function Edit(props) {\r\n  const token = localStorage.token;\r\n  const warehouse = localStorage.warehouse;\r\n  let soItems;\r\n  let soId;\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    Authorization: `Bearer ${token}`,\r\n  };\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [datasoRetur, setDatasoRetur] = useState('');\r\n  const [datasoItems, setDatasoItems] = useState('');\r\n  const initialReturItems = {\r\n    item_id: '',\r\n    qty: '',\r\n    keterangan: '',\r\n  };\r\n  const [dataReturItems, setDataReturItems] = useState([initialReturItems]);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getById();\r\n  }, []);\r\n\r\n  // handle input change item\r\n  const onInputChangeItem = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...dataReturItems];\r\n    list[index][name] = value;\r\n    setDataReturItems(list);\r\n  };\r\n\r\n  // handle input change\r\n  const onInputChange = (type, val) => {\r\n    setDatasoRetur((prevState) => ({\r\n      ...prevState,\r\n      [type]: val,\r\n    }));\r\n  };\r\n\r\n  const getById = () => {\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/retur-so/get/${props.match.params.id}`,\r\n        { headers }\r\n      )\r\n      .then(async (data) => {\r\n        await getSo(data.data.response_data.retur_code);\r\n        await getsoItems(soId);\r\n\r\n        const mergeItems = {\r\n          ...data.data.response_data,\r\n          items: soItems,\r\n        };\r\n        setDatasoRetur(mergeItems);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getSo = async (kodeSo) => {\r\n    await axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/sales-order/get?order_code=${kodeSo}`,\r\n        {\r\n          headers,\r\n        }\r\n      )\r\n      .then((data) => {\r\n        soId = data.data.response_data.id;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getsoItems = async (so_id) => {\r\n    await axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/sales-order/so-items`,\r\n        { so_id: so_id },\r\n        {\r\n          headers,\r\n        }\r\n      )\r\n      .then((data) => {\r\n        setDatasoItems(data.data.response_data);\r\n        const constructItems = [];\r\n        data.data.response_data.map((key) => {\r\n          constructItems.push({\r\n            item_id: key.item_id,\r\n            qty: key.qty,\r\n            keterangan: '',\r\n          });\r\n        });\r\n        soItems = constructItems;\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const updateReturSo = async () => {\r\n    setLoading(true);\r\n    const payload = {\r\n      warehouse_id: datasoRetur.warehouse_id,\r\n      username_so: datasoRetur.username_so,\r\n      item_or_money: parseInt(datasoRetur.item_or_money),\r\n      payment_method: datasoRetur.payment_method,\r\n      keterangan_payment: datasoRetur.keterangan_payment,\r\n      is_cicil: datasoRetur.is_cicil,\r\n      username_gudang: datasoRetur.username_gudang,\r\n      status_barang: datasoRetur.status_barang,\r\n      keterangan_gudang: datasoRetur.keterangan_gudang,\r\n      username_kurir: datasoRetur.username_kurir,\r\n      username_validator: datasoRetur.username_validator,\r\n      username_manajer: '',\r\n      manajer_approval: 0,\r\n      keterangan_manajer: '',\r\n      clear: datasoRetur.clear,\r\n      keterangan_validator: datasoRetur.keterangan_validator,\r\n      so_type: datasoRetur.so_type,\r\n      keterangan_so: datasoRetur.keterangan_so,\r\n      items:\r\n        parseInt(datasoRetur.item_or_money) === 2\r\n          ? datasoRetur.items\r\n          : dataReturItems,\r\n      retur_code: datasoRetur.retur_code,\r\n    };\r\n    await axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/retur-so/update/${props.match.params.id}`,\r\n        payload,\r\n        {\r\n          headers,\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setLoading(false);\r\n        if (response.data.error?.error_code > 200) {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Gagal',\r\n            text: 'Maaf, Data SO retur gagal di simpan',\r\n          });\r\n        } else {\r\n          history.push('/admin/so-return');\r\n        }\r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const onAddItem = () => {\r\n    setDataReturItems([...dataReturItems, initialReturItems]);\r\n  };\r\n\r\n  const onRemoveItem = (index) => {\r\n    const list = [...dataReturItems];\r\n    list.splice(index, 1);\r\n    setDataReturItems(list);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      updateReturSo();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Edit Purchase Order\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <CardHeader>\r\n                    <h3>Edit Sales Order Retur</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label className=\"form-control-label\">Username SO</Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        value={datasoRetur?.username_so}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label className=\"form-control-label\">\r\n                        Keterangan SO\r\n                      </Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        value={datasoRetur?.keterangan_so}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label className=\"form-control-label\">\r\n                        Username Validator\r\n                      </Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        value={datasoRetur?.username_validator}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label className=\"form-control-label\">\r\n                        Keterangan Validator\r\n                      </Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        value={datasoRetur?.keterangan_validator}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label className=\"form-control-label\">\r\n                        Username Gudang\r\n                      </Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        value={datasoRetur?.username_gudang}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label className=\"form-control-label\">\r\n                        Keterangan Payment\r\n                      </Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        value={datasoRetur?.keterangan_payment}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label className=\"form-control-label\">\r\n                        Payment Method\r\n                      </Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        value={\r\n                          datasoRetur?.payment_method === 1\r\n                            ? 'Tunai'\r\n                            : 'Tempo / Termin / Utang'\r\n                        }\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label className=\"form-control-label\">Is Cicil</Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        value={\r\n                          datasoRetur?.is_cicil === 0\r\n                            ? 'Pilih Cicilan'\r\n                            : datasoRetur?.is_cicil === 1\r\n                            ? 'Cicilan (Lunas)'\r\n                            : 'Cicilan (Belum Lunas)'\r\n                        }\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label className=\"form-control-label\"> SO Type</Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        value={\r\n                          datasoRetur?.is_cicil === 1\r\n                            ? 'Konvensional'\r\n                            : 'Cicilan (Belum Lunas)'\r\n                        }\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label className=\"form-control-label\">Clear</Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        value={\r\n                          datasoRetur?.clear === 1\r\n                            ? 'Disetujui'\r\n                            : datasoRetur?.clear === 2\r\n                            ? 'Ditolak'\r\n                            : 'Dibatalkan'\r\n                        }\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label className=\"form-control-label\">Approve</Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        value={\r\n                          datasoRetur?.approve === 1\r\n                            ? 'Disetujui'\r\n                            : datasoRetur?.approve === 2\r\n                            ? 'Ditolak'\r\n                            : 'Dibatalkan'\r\n                        }\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label className=\"form-control-label\">\r\n                        Status Barang\r\n                      </Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        value={\r\n                          datasoRetur?.status_barang === 1\r\n                            ? 'Disetujui'\r\n                            : datasoRetur?.status_barang === 2\r\n                            ? 'Ditolak'\r\n                            : 'Dibatalkan'\r\n                        }\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label className=\"form-control-label\">Qty</Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        value={datasoRetur?.total_qty}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label className=\"form-control-label\">Harga</Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        value={datasoRetur?.total_price}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label className=\"form-control-label\">\r\n                        Total Qty Fisik\r\n                      </Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        value={datasoRetur?.total_qty_fisik}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label className=\"form-control-label\">\r\n                        Total Harga Fisik\r\n                      </Label>\r\n                      <Input\r\n                        disabled\r\n                        type=\"text\"\r\n                        value={datasoRetur?.total_price_fisik}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        Item or Money\r\n                      </Label>\r\n                      <Input\r\n                        name=\"item_or_money\"\r\n                        type=\"select\"\r\n                        onChange={(e) =>\r\n                          onInputChange('item_or_money', e.target.value)\r\n                        }\r\n                        value={datasoRetur.item_or_money}\r\n                      >\r\n                        <option value=\"0\">Pilih</option>\r\n                        <option value=\"1\">Item</option>\r\n                        <option value=\"2\">Money</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                    {parseInt(datasoRetur.item_or_money) === 1 &&\r\n                      dataReturItems.map((x, i) => {\r\n                        return (\r\n                          <div key={i}>\r\n                            <FormGroup>\r\n                              <Label\r\n                                className=\"form-control-label\"\r\n                                htmlFor=\"exampleFormControlSelect3\"\r\n                              >\r\n                                Item\r\n                              </Label>\r\n                              <Input\r\n                                name=\"item_id\"\r\n                                type=\"select\"\r\n                                onChange={(e) => {\r\n                                  onInputChangeItem(e, i);\r\n                                }}\r\n                              >\r\n                                <option value=\"0\">Pilih Item</option>\r\n                                {datasoItems.map((item, key) => {\r\n                                  return (\r\n                                    <option key={key} value={item.item_id}>\r\n                                      {item.item_name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                              <Label className=\"form-control-label\">\r\n                                Quantity\r\n                              </Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"qty\"\r\n                                placeholder=\"Masukan Quantity yang Akan di Retur\"\r\n                                value={dataReturItems.qty}\r\n                                onChange={(e) => onInputChangeItem(e, i)}\r\n                              />\r\n                            </FormGroup>\r\n                            <div className=\"btn-box\">\r\n                              {dataReturItems.length !== 1 && (\r\n                                <Button\r\n                                  color=\"default\"\r\n                                  onClick={() => onRemoveItem(i)}\r\n                                >\r\n                                  Remove\r\n                                </Button>\r\n                              )}\r\n                              {dataReturItems.length - 1 === i && (\r\n                                <Button color=\"default\" onClick={onAddItem}>\r\n                                  Add\r\n                                </Button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        Simpan\r\n                      </Button>\r\n                    )}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {''}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/po-return\">\r\n                      Kembali\r\n                    </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form,\r\n  FormFeedback,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function EditBkm(props) {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [allPoCode, setAllPoCode] = useState([]);\r\n  const [poCode, setPoCode] = useState(\"\");\r\n  const [poCodeError, setPoCodeError] = useState(null);\r\n  const [kasBank, setKasBank] = useState(\"\");\r\n  const [nominal, setNominal] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [soStatus, setSoStatus] = useState(0);\r\n  const [status, setStatus] = useState(0);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (poCode === \"\") {\r\n      setPoCodeError(\"invalid\");\r\n      error = true;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getById();\r\n  }, []);\r\n\r\n  const getById = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_BASE_URL}/bkm/${props.match.params.id}`,\r\n        { headers }\r\n      )\r\n      .then((data) => {\r\n        getPoList(data.data.response.so_code);\r\n        setKasBank(data.data.response.kas_bank);\r\n        setNominal(data.data.response.nominal);\r\n        setDescription(data.data.response.keterangan);\r\n        setStatus(data.data.response.status_transaksi);\r\n        setSoStatus(data.data.response.so_status);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const getPoList = (id) => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/sales-order/list`, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        setAllPoCode(data.data.response_data);\r\n        setPoCode(id);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  function EditData() {\r\n    setLoading(true);\r\n    let data = {\r\n      warehouse_id: parseInt(warehouse),\r\n      so_code: parseInt(poCode),\r\n      so_status: parseInt(soStatus),\r\n      kas_bank: kasBank,\r\n      nominal: parseFloat(nominal),\r\n      keterangan: description,\r\n      status_transaksi: parseInt(status),\r\n    };\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/bkm/update/${props.match.params.id}`,\r\n        data,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        history.push(\"/admin/bkm\");\r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      EditData();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Edit Bukti Kas Masuk\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <CardHeader>\r\n                    <h3>Edit Bukti Kas Masuk</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        Kode SO\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        name=\"type\"\r\n                        type=\"select\"\r\n                        value={poCode}\r\n                        invalid={poCodeError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setPoCode(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setPoCodeError(\"\");\r\n                          }\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Pilih Kode PO</option>\r\n                        {allPoCode.map((po, key) => {\r\n                          return (\r\n                            <option key={key} value={po.id}>\r\n                              {po.order_code}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </Input>\r\n                      <FormFeedback>Kode PO tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Kas Bank\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"bank\"\r\n                        placeholder=\"Masukan Kas Bank\"\r\n                        value={kasBank}\r\n                        onChange={(e) => {\r\n                          setKasBank(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nominal\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nominal\"\r\n                        placeholder=\"Masukan Nominal\"\r\n                        value={nominal}\r\n                        onChange={(e) => {\r\n                          setNominal(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Keterangan\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"keterangan\"\r\n                        placeholder=\"Masukan Keterangan\"\r\n                        value={description}\r\n                        onChange={(e) => {\r\n                          setDescription(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        SO Status\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        name=\"type\"\r\n                        type=\"select\"\r\n                        value={soStatus}\r\n                        onChange={(e) => {\r\n                          setSoStatus(e.target.value);\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Pilih SO Status</option>\r\n                        <option value={1}>Penjualan Kasir</option>\r\n                        <option value={2}>Penjualan</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        Status Transaksi\r\n                      </Label>\r\n                      <Row>\r\n                        <Col>\r\n                          <div style={{ display: \"flex\" }}>\r\n                            <div className=\"custom-control custom-radio mb-3\">\r\n                              <Input\r\n                                className=\"custom-control-input\"\r\n                                id=\"customRadio5\"\r\n                                name=\"custom-radio-2\"\r\n                                type=\"radio\"\r\n                                value={0}\r\n                                checked={status === 0}\r\n                                onChange={() => setStatus(0)}\r\n                              />\r\n                              <Label\r\n                                className=\"custom-control-label\"\r\n                                htmlFor=\"customRadio5\"\r\n                                check\r\n                              >\r\n                                Proses\r\n                              </Label>\r\n                            </div>\r\n                            <div\r\n                              className=\"custom-control custom-radio mb-3\"\r\n                              style={{ marginLeft: \"20px\" }}\r\n                            >\r\n                              <Input\r\n                                className=\"custom-control-input\"\r\n                                id=\"customRadio6\"\r\n                                name=\"custom-radio-2\"\r\n                                type=\"radio\"\r\n                                value={1}\r\n                                checked={status === 1}\r\n                                onChange={() => setStatus(1)}\r\n                              />\r\n                              <Label\r\n                                className=\"custom-control-label\"\r\n                                htmlFor=\"customRadio6\"\r\n                                check\r\n                              >\r\n                                Selesai\r\n                              </Label>\r\n                            </div>\r\n                          </div>\r\n                        </Col>\r\n                      </Row>\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        Simpan\r\n                      </Button>\r\n                    )}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {\"\"}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/bkm\">\r\n                      Kembali\r\n                    </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form,\r\n  FormFeedback,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function CreateBkm() {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [allPoCode, setAllPoCode] = useState([]);\r\n  const [poCode, setPoCode] = useState(\"\");\r\n  const [poCodeError, setPoCodeError] = useState(null);\r\n  const [kasBank, setKasBank] = useState(\"\");\r\n  const [nominal, setNominal] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [soStatus, setSoStatus] = useState(0);\r\n  const [status, setStatus] = useState(0);\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    if (poCode === \"\") {\r\n      setPoCodeError(\"invalid\");\r\n      error = true;\r\n    }\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPoList();\r\n  }, []);\r\n\r\n  const getPoList = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/sales-order/list`, {\r\n        headers,\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        setAllPoCode(data.data.response_data);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  function CreateData() {\r\n    setLoading(true);\r\n    let data = {\r\n      warehouse_id: parseInt(warehouse),\r\n      so_code: parseInt(poCode),\r\n      so_status: parseInt(soStatus),\r\n      kas_bank: kasBank,\r\n      nominal: parseFloat(nominal),\r\n      keterangan: description,\r\n      status_transaksi: parseInt(status),\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/bkm/save`, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then(function (response) {\r\n        history.push(\"/admin/bkm\");\r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      CreateData();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Daftar Bukti Kas Masuk\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <CardHeader>\r\n                    <h3>Daftar Bukti Kas Masuk</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        Kode SO\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        name=\"type\"\r\n                        type=\"select\"\r\n                        value={poCode}\r\n                        invalid={poCodeError === \"invalid\"}\r\n                        onChange={(e) => {\r\n                          setPoCode(e.target.value);\r\n                          if (e.target.value !== \"\") {\r\n                            setPoCodeError(\"\");\r\n                          }\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Pilih Kode PO</option>\r\n                        {allPoCode.map((po, key) => {\r\n                          return (\r\n                            <option key={key} value={po.id}>\r\n                              {po.order_code}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </Input>\r\n                      <FormFeedback>Kode PO tidak boleh kosong</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Kas Bank\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"bank\"\r\n                        placeholder=\"Masukan Kas Bank\"\r\n                        value={kasBank}\r\n                        onChange={(e) => {\r\n                          setKasBank(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Nominal\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nominal\"\r\n                        placeholder=\"Masukan Nominal\"\r\n                        value={nominal}\r\n                        onChange={(e) => {\r\n                          setNominal(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Keterangan\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"keterangan\"\r\n                        placeholder=\"Masukan Keterangan\"\r\n                        value={description}\r\n                        onChange={(e) => {\r\n                          setDescription(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        SO Status\r\n                        <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        name=\"type\"\r\n                        type=\"select\"\r\n                        value={soStatus}\r\n                        onChange={(e) => {\r\n                          setSoStatus(e.target.value);\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Pilih SO Status</option>\r\n                        <option value={1}>Penjualan Kasir</option>\r\n                        <option value={2}>Penjualan</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        Status Transaksi\r\n                      </Label>\r\n                      <Row>\r\n                        <Col>\r\n                          <div style={{ display: \"flex\" }}>\r\n                            <div className=\"custom-control custom-radio mb-3\">\r\n                              <Input\r\n                                className=\"custom-control-input\"\r\n                                id=\"customRadio5\"\r\n                                name=\"custom-radio-2\"\r\n                                type=\"radio\"\r\n                                value={0}\r\n                                checked={status === 0}\r\n                                onChange={() => setStatus(0)}\r\n                              />\r\n                              <Label\r\n                                className=\"custom-control-label\"\r\n                                htmlFor=\"customRadio5\"\r\n                                check\r\n                              >\r\n                                Proses\r\n                              </Label>\r\n                            </div>\r\n                            <div\r\n                              className=\"custom-control custom-radio mb-3\"\r\n                              style={{ marginLeft: \"20px\" }}\r\n                            >\r\n                              <Input\r\n                                className=\"custom-control-input\"\r\n                                id=\"customRadio6\"\r\n                                name=\"custom-radio-2\"\r\n                                type=\"radio\"\r\n                                value={1}\r\n                                checked={status === 1}\r\n                                onChange={() => setStatus(1)}\r\n                              />\r\n                              <Label\r\n                                className=\"custom-control-label\"\r\n                                htmlFor=\"customRadio6\"\r\n                                check\r\n                              >\r\n                                Selesai\r\n                              </Label>\r\n                            </div>\r\n                          </div>\r\n                        </Col>\r\n                      </Row>\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        Simpan\r\n                      </Button>\r\n                    )}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {\"\"}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/bkm\">\r\n                      Kembali\r\n                    </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  FormGroup,\r\n  Row,\r\n  Input,\r\n  Container,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Form,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nexport default function CreateJurnal(props) {\r\n  const token = localStorage.token;\r\n  const warehouse = parseInt(localStorage.warehouse);\r\n  let history = useHistory();\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const [allCoa, setAllCoa] = useState([]);\r\n  const [coa, setCoa] = useState(\"\");\r\n  const [allAccount, setAllAccount] = useState([]);\r\n  const [account, setAccount] = useState(\"\");\r\n  const [pic, setPic] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [saldo, setSaldo] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [dateTransaction, setDateTransaction] = useState(\"\");\r\n\r\n  const validateForm = () => {\r\n    let error = false;\r\n    // if (name === \"\") {\r\n    //   setNameError(\"invalid\");\r\n    //   error = true;\r\n    // }\r\n    // if (username === \"\") {\r\n    //   setUsernameError(\"invalid\");\r\n    //   error = true;\r\n    // }\r\n    // if (description === \"\") {\r\n    //   setDescriptionError(\"invalid\");\r\n    //   error = true;\r\n    // }\r\n    // if (department === \"\") {\r\n    //   setDepartmentError(\"invalid\");\r\n    //   error = true;\r\n    // }\r\n    return error;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAccount();\r\n    getCoa();\r\n  }, []);\r\n\r\n  const getAccount = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/account/list`, { headers })\r\n      .then((data) => {\r\n        setAllAccount(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getCoa = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE_URL}/coa/list`, { headers })\r\n      .then((data) => {\r\n        setAllCoa(data.data.response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  function CreateData() {\r\n    setLoading(true);\r\n    let data = {\r\n      warehouse_id: parseInt(warehouse),\r\n      coa_id: parseInt(coa),\r\n      account_id: parseInt(account),\r\n      deskripsi: description,\r\n      pic: pic,\r\n      tanggal_transaksi: dateTransaction,\r\n      saldo: parseFloat(saldo),\r\n      type: parseInt(type),\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/jurnal/save`, data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then(function (response) {\r\n        history.push(\"/admin/jurnal\");\r\n      })\r\n      .then((json) => {\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) {\r\n      CreateData();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Daftar Jurnal\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <CardHeader>\r\n                    <h3>Daftar Jurnal</h3>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        PIC\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"nama\"\r\n                        placeholder=\"Masukan PIC\"\r\n                        value={pic}\r\n                        onChange={(e) => {\r\n                          setPic(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Saldo\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"saldo\"\r\n                        placeholder=\"Masukan Saldo\"\r\n                        value={saldo}\r\n                        onChange={(e) => {\r\n                          setSaldo(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        Type\r\n                      </Label>\r\n                      <Input\r\n                        name=\"type\"\r\n                        type=\"select\"\r\n                        value={type}\r\n                        onChange={(e) => {\r\n                          setType(e.target.value);\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Pilih Type</option>\r\n                        <option value={1}>Debit</option>\r\n                        <option value={2}>Credit</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        Account\r\n                      </Label>\r\n                      <Input\r\n                        name=\"account\"\r\n                        type=\"select\"\r\n                        value={account}\r\n                        onChange={(e) => {\r\n                          setAccount(e.target.value);\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Pilih Account</option>\r\n                        {allAccount.map((dep, key) => {\r\n                          return (\r\n                            <option key={key} value={dep.id}>\r\n                              {dep.account_name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlSelect3\"\r\n                      >\r\n                        COA\r\n                      </Label>\r\n                      <Input\r\n                        name=\"coa\"\r\n                        type=\"select\"\r\n                        value={coa}\r\n                        onChange={(e) => {\r\n                          setCoa(e.target.value);\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Pilih COA</option>\r\n                        {allCoa.map((dep, key) => {\r\n                          return (\r\n                            <option key={key} value={dep.id}>\r\n                              {dep.coa_name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"exampleFormControlSelect3\">\r\n                        Tanggal Transaksi\r\n                      </Label>\r\n                      <Input\r\n                        id=\"example-date-input\"\r\n                        type=\"date\"\r\n                        value={dateTransaction}\r\n                        onChange={(e) => {\r\n                          setDateTransaction(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label\r\n                        className=\"form-control-label\"\r\n                        htmlFor=\"exampleFormControlInput1\"\r\n                      >\r\n                        Deskripsi\r\n                      </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"description\"\r\n                        placeholder=\"Masukan Deskripsi\"\r\n                        value={description}\r\n                        onChange={(e) => {\r\n                          setDescription(e.target.value);\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </CardBody>\r\n                  <CardFooter>\r\n                    {!isLoading && (\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        Simpan\r\n                      </Button>\r\n                    )}\r\n                    {isLoading && (\r\n                      <Button color=\"primary\" disabled>\r\n                        <i className=\"fas fa-spinner fa-spin\"></i>\r\n                        {\"\"}\r\n                        loading...\r\n                      </Button>\r\n                    )}\r\n                    <Link className=\"btn btn-info\" to=\"/admin/jurnal\">\r\n                      Kembali\r\n                    </Link>\r\n                  </CardFooter>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  TabContent,\r\n  TabPane,\r\n} from \"reactstrap\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport classnames from \"classnames\";\r\n\r\n//\r\nimport ListBanner from \"./ListBanner\";\r\nimport ListImage from \"./ListImages\";\r\nimport ListImageItem from \"./ListImageItem\";\r\n\r\nexport default function MainList() {\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  const tabName = [\"Item\", \"Kategori\", \"Banner\"];\r\n  const contentPage = [<ListImageItem />, <ListImage />, <ListBanner />];\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Image\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Nav tabs>\r\n                  {tabName.map((name, index) => {\r\n                    return (\r\n                      <NavItem key={index}>\r\n                        <NavLink\r\n                          className={classnames({\r\n                            active: activeTab === `${index + 1}`,\r\n                          })}\r\n                          onClick={() => {\r\n                            toggle(`${index + 1}`);\r\n                          }}\r\n                        >\r\n                          {name}\r\n                        </NavLink>\r\n                      </NavItem>\r\n                    );\r\n                  })}\r\n                </Nav>\r\n                <TabContent activeTab={activeTab}>\r\n                  {contentPage.map((content, index) => {\r\n                    const tabIndex = (index + 1).toString();\r\n                    return (\r\n                      <TabPane tabId={tabIndex} key={index}>\r\n                        <Row>\r\n                          <Col md=\"12\">{content}</Col>\r\n                        </Row>\r\n                      </TabPane>\r\n                    );\r\n                  })}\r\n                </TabContent>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport {\r\n  TabContent,\r\n  Form,\r\n  Button,\r\n  CardHeader,\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Container,\r\n} from \"reactstrap\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport FailedAlert from \"./snippets/FailedAlert\";\r\nimport PreviewImage from \"./snippets/PreviewImage\";\r\n\r\n// state management\r\nimport store from \"./snippets/redux\";\r\n\r\n//\r\nconst base_url = process.env.REACT_APP_API_BASE_URL;\r\n\r\nexport default function UpdateImage() {\r\n  const fileRef = useRef(null);\r\n  const [fileError, setFileError] = useState(false);\r\n  const [preview, setPreview] = useState(false);\r\n  const [previewValue, setPreviewValue] = useState(\"\");\r\n\r\n  // data needs\r\n\r\n  const [selectedImage, setSelectedImage] = useState([]);\r\n  const [imageName, setImageName] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // error\r\n  const [errFile, setErrFile] = useState(false);\r\n  //\r\n\r\n  const history = useHistory();\r\n  const param = useParams();\r\n\r\n  useEffect(() => {\r\n    listenEvent();\r\n  }, []);\r\n\r\n  /**\r\n   * It listens to the store's state and changes the state of the component accordingly\r\n   */\r\n  function listenEvent() {\r\n    store.subscribe(() => {\r\n      const state = store.getState();\r\n      switch (state.type) {\r\n        case \"close_error_modal\":\r\n          setFileError(false);\r\n          break;\r\n        case \"close_preview_modal\":\r\n          setPreview(false);\r\n          setLoading(false);\r\n          setImageName(state.selected_image.name);\r\n          break;\r\n        case \"send_image\":\r\n          handleSend();\r\n          break;\r\n        default:\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * When the user clicks the file input, the file input will be clicked\r\n   */\r\n  function handleFileWithClick() {\r\n    setFileError(false);\r\n    fileRef.current.click();\r\n  }\r\n\r\n  /**\r\n   * Given a list of image types, return true if the image type is valid\r\n   * @param types - The file types that are allowed.\r\n   * @returns A boolean value.\r\n   */\r\n  function isImageValid(types) {\r\n    switch (types) {\r\n      case \"image/png\":\r\n        return true;\r\n      case \"image/jpg\":\r\n        return true;\r\n      case \"image/jpeg\":\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  function validateInput() {\r\n    const data = [\r\n      {\r\n        value: selectedImage.length,\r\n        name: \"file\",\r\n      },\r\n    ];\r\n\r\n    const valid = [];\r\n\r\n    data.forEach((items) => {\r\n      if (items.value === 0 || items.value === \"0\") {\r\n        switch (items.name) {\r\n          case \"file\":\r\n            setErrFile(true);\r\n            break;\r\n          default:\r\n          //\r\n        }\r\n        valid.push(false);\r\n      } else {\r\n        valid.push(true);\r\n      }\r\n    });\r\n\r\n    return valid.includes(false) ? false : true;\r\n  }\r\n\r\n  /**\r\n   * It takes the form data,\r\n   * converts it to a JSON string, and then sends it to the server\r\n   */\r\n  function handleSend(evt) {\r\n    evt.preventDefault();\r\n    if (validateInput()) {\r\n      setLoading(true);\r\n      const payload = new FormData();\r\n      payload.append(\"file\", selectedImage[0]);\r\n\r\n      fetch(`${base_url}/image/items/update/${param.id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.token}`,\r\n        },\r\n        method: \"POST\",\r\n        body: payload,\r\n      })\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((res) => {\r\n          setPreview(false);\r\n          setLoading(false);\r\n          history.push({ pathname: \"/admin/image/list\" });\r\n        })\r\n        .catch((err) => {\r\n          setLoading(false);\r\n          console.warn(err);\r\n        });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * It takes a file object as an argument, and then calls a function that sets the preview value to the\r\n   * result of reading the file as a data URL\r\n   * @param src - The image file that you want to upload.\r\n   */\r\n  function readImage(src) {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      setPreviewValue(reader.result);\r\n    };\r\n    reader.readAsDataURL(src);\r\n  }\r\n\r\n  /**\r\n   * Reads the image file and sets the preview to true\r\n   * @param evt - The event object that contains the file.\r\n   */\r\n  function processImage(evt) {\r\n    const files = evt.target.files;\r\n    if (files.length > 0) {\r\n      const fileSize = Math.round(files[0].size / 1024);\r\n      const selectedFile = files;\r\n      // validation image\r\n      if (isImageValid(files[0].type) && fileSize < 5000) {\r\n        readImage(selectedFile[0]);\r\n        setPreview(true);\r\n        setSelectedImage(selectedFile);\r\n        setErrFile(false);\r\n      } else {\r\n        setFileError(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Update\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <TabContent activeTab={\"1\"}>\r\n                  {/* alert */}\r\n                  <FailedAlert\r\n                    isOpen={fileError}\r\n                    title=\"Gagal\"\r\n                    message={\r\n                      \"Pastikan file yang anda upload dalam bentuk png, jpg atau jpeg, serta pastikan ukurannya kurang dari 5 MB\"\r\n                    }\r\n                  />\r\n                  <PreviewImage\r\n                    loading={loading}\r\n                    isOpen={preview}\r\n                    src={previewValue}\r\n                    merekId={\"\"}\r\n                    kategoriId={\"\"}\r\n                    subkategoriID={\"\"}\r\n                    selectedImage={selectedImage}\r\n                  />\r\n                  <CardHeader>\r\n                    <h3>Update Image</h3>\r\n                  </CardHeader>\r\n                  {/*  */}\r\n                  <br />\r\n                  <Form\r\n                    noValidate={true}\r\n                    action=\"\"\r\n                    onSubmit={(evt) => handleSend(evt)}\r\n                    method=\"POST\"\r\n                  >\r\n                    {/* upload image */}\r\n                    <div className=\"upload-image-container\">\r\n                      <div className=\"upload-image-canvas\">\r\n                        <h4>Update Gambar</h4>\r\n                        <br />\r\n                        <input\r\n                          type=\"file\"\r\n                          accept=\"image/png, image/jpg, image/jpeg\"\r\n                          className=\"hide-input\"\r\n                          ref={fileRef}\r\n                          required\r\n                          onChange={(evt) => processImage(evt)}\r\n                        />\r\n                        <Button\r\n                          color=\"default\"\r\n                          type=\"button\"\r\n                          onClick={() => handleFileWithClick()}\r\n                        >\r\n                          <i className=\"ni ni-image\"></i>\r\n                          <span className=\"btn-inner--text\">\r\n                            {imageName.length > 0\r\n                              ? imageName.slice(0, 20)\r\n                              : \"Klik Disini\"}\r\n                          </span>\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                    <small className=\"err-text\">\r\n                      {errFile ? \"file wajib diupload\" : \"\"}\r\n                    </small>\r\n\r\n                    <br />\r\n                    <Button color=\"info\" size=\"lg\" type=\"submit\">\r\n                      {loading ? \"Loading...\" : \"Simpan\"}\r\n                    </Button>\r\n                    <Button\r\n                      color=\"secondary\"\r\n                      size=\"lg\"\r\n                      type=\"submit\"\r\n                      onClick={() => {\r\n                        history.goBack();\r\n                      }}\r\n                    >\r\n                      Kembali\r\n                    </Button>\r\n                  </Form>\r\n\r\n                  {/*  */}\r\n                </TabContent>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport {\r\n  TabContent,\r\n  Form,\r\n  Button,\r\n  CardHeader,\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Container,\r\n} from \"reactstrap\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\nimport FailedAlert from \"./snippets/FailedAlert\";\r\nimport PreviewImage from \"./snippets/PreviewImage\";\r\n// state management\r\nimport store from \"./snippets/redux\";\r\n\r\n//\r\nconst base_url = process.env.REACT_APP_API_BASE_URL;\r\n\r\nexport default function UpdateBanner() {\r\n  const fileRef = useRef(null);\r\n  const [fileError, setFileError] = useState(false);\r\n  const [preview, setPreview] = useState(false);\r\n  const [previewValue, setPreviewValue] = useState(\"\");\r\n\r\n  // data needs\r\n\r\n  const [selectedImage, setSelectedImage] = useState([]);\r\n  const [imageName, setImageName] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // error\r\n  const [errFile, setErrFile] = useState(false);\r\n  //\r\n\r\n  const history = useHistory();\r\n  const param = useParams();\r\n\r\n  useEffect(() => {\r\n    /**\r\n     * It listens to the store's state and changes the state of the component accordingly\r\n     */\r\n    function listenEvent() {\r\n      store.subscribe(() => {\r\n        const state = store.getState();\r\n        switch (state.type) {\r\n          case \"close_error_modal\":\r\n            setFileError(false);\r\n            break;\r\n          case \"close_preview_modal\":\r\n            setPreview(false);\r\n            setLoading(false);\r\n            setImageName(state.selected_image.name);\r\n            break;\r\n          case \"send_image\":\r\n            handleSend();\r\n            break;\r\n          default:\r\n        }\r\n      });\r\n    }\r\n    listenEvent();\r\n  }, []);\r\n\r\n  /**\r\n   * When the user clicks the file input, the file input will be clicked\r\n   */\r\n  function handleFileWithClick() {\r\n    setFileError(false);\r\n    fileRef.current.click();\r\n  }\r\n\r\n  /**\r\n   * Given a image types, return true if the image type is valid\r\n   * @param types - The file types that are allowed.\r\n   * @returns A boolean value.\r\n   */\r\n  function isImageValid(types) {\r\n    switch (types) {\r\n      case \"image/png\":\r\n        return true;\r\n      case \"image/jpg\":\r\n        return true;\r\n      case \"image/jpeg\":\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  function validateInput() {\r\n    const data = [\r\n      {\r\n        value: selectedImage.length,\r\n        name: \"file\",\r\n      },\r\n    ];\r\n\r\n    const valid = [];\r\n\r\n    data.forEach((items) => {\r\n      if (items.value === 0 || items.value === \"0\") {\r\n        switch (items.name) {\r\n          case \"file\":\r\n            setErrFile(true);\r\n            break;\r\n          default:\r\n          //\r\n        }\r\n        valid.push(false);\r\n      } else {\r\n        valid.push(true);\r\n      }\r\n    });\r\n\r\n    return valid.includes(false) ? false : true;\r\n  }\r\n\r\n  /**\r\n   * It takes the form data,\r\n   * converts it to a JSON string, and then sends it to the server\r\n   */\r\n  function handleSend(evt) {\r\n    evt.preventDefault();\r\n    if (validateInput()) {\r\n      setLoading(true);\r\n      const payload = new FormData();\r\n      payload.append(\"file\", selectedImage[0]);\r\n\r\n      fetch(`${base_url}/image/banner/update/${param.id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.token}`,\r\n        },\r\n        method: \"POST\",\r\n        body: payload,\r\n      })\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((res) => {\r\n          setPreview(false);\r\n          setLoading(false);\r\n          history.push({ pathname: \"/admin/image/list\" });\r\n        })\r\n        .catch((err) => {\r\n          setLoading(false);\r\n          console.warn(err);\r\n        });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * It takes a file object as an argument, and then calls a function that sets the preview value to the\r\n   * result of reading the file as a data URL\r\n   * @param src - The image file that you want to upload.\r\n   */\r\n  function readImage(src) {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      setPreviewValue(reader.result);\r\n    };\r\n    reader.readAsDataURL(src);\r\n  }\r\n\r\n  /**\r\n   * Reads the image file and sets the preview to true\r\n   * @param evt - The event object that contains the file.\r\n   */\r\n  function processImage(evt) {\r\n    const files = evt.target.files;\r\n    if (files.length > 0) {\r\n      const fileSize = Math.round(files[0].size / 1024);\r\n      const selectedFile = files;\r\n      // validation image\r\n      if (isImageValid(files[0].type) && fileSize < 5000) {\r\n        readImage(selectedFile[0]);\r\n        setPreview(true);\r\n        setSelectedImage(selectedFile);\r\n        setErrFile(false);\r\n      } else {\r\n        setFileError(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Update\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <TabContent activeTab={\"1\"}>\r\n                  {/* alert */}\r\n                  <FailedAlert\r\n                    isOpen={fileError}\r\n                    title=\"Gagal\"\r\n                    message={\r\n                      \"Pastikan file yang anda upload dalam bentuk png, jpg atau jpeg, serta pastikan ukurannya kurang dari 5 MB\"\r\n                    }\r\n                  />\r\n                  <PreviewImage\r\n                    loading={loading}\r\n                    isOpen={preview}\r\n                    src={previewValue}\r\n                    merekId={\"\"}\r\n                    kategoriId={\"\"}\r\n                    subkategoriID={\"\"}\r\n                    selectedImage={selectedImage}\r\n                  />\r\n                  <CardHeader>\r\n                    <h3>Update Banner</h3>\r\n                  </CardHeader>\r\n                  {/*  */}\r\n                  <br />\r\n                  <Form\r\n                    noValidate={true}\r\n                    action=\"\"\r\n                    onSubmit={(evt) => handleSend(evt)}\r\n                    method=\"POST\"\r\n                  >\r\n                    {/* upload image */}\r\n                    <div className=\"upload-image-container\">\r\n                      <div className=\"upload-image-canvas\">\r\n                        <h4>Update Banner</h4>\r\n                        <br />\r\n                        <input\r\n                          type=\"file\"\r\n                          accept=\"image/png, image/jpg, image/jpeg\"\r\n                          className=\"hide-input\"\r\n                          ref={fileRef}\r\n                          required\r\n                          onChange={(evt) => processImage(evt)}\r\n                        />\r\n                        <Button\r\n                          color=\"default\"\r\n                          type=\"button\"\r\n                          onClick={() => handleFileWithClick()}\r\n                        >\r\n                          <i className=\"ni ni-image\"></i>\r\n                          <span className=\"btn-inner--text\">\r\n                            {imageName.length > 0\r\n                              ? imageName.slice(0, 20)\r\n                              : \"Klik Disini\"}\r\n                          </span>\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                    <small className=\"err-text\">\r\n                      {errFile ? \"file wajib diupload\" : \"\"}\r\n                    </small>\r\n\r\n                    <br />\r\n                    <Button color=\"info\" size=\"lg\" type=\"submit\">\r\n                      {loading ? \"Loading...\" : \"Simpan\"}\r\n                    </Button>\r\n                    <Button\r\n                      color=\"secondary\"\r\n                      size=\"lg\"\r\n                      type=\"submit\"\r\n                      onClick={() => {\r\n                        history.goBack();\r\n                      }}\r\n                    >\r\n                      Kembali\r\n                    </Button>\r\n                  </Form>\r\n\r\n                  {/*  */}\r\n                </TabContent>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*eslint-disable*/\r\nimport React, { useRef, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport {\r\n  TabContent,\r\n  Form,\r\n  Button,\r\n  CardHeader,\r\n  Card,\r\n  Label,\r\n  Col,\r\n  Input,\r\n  FormGroup,\r\n  CardBody,\r\n  Row,\r\n  Container,\r\n} from \"reactstrap\";\r\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport default function UpdateImageItem() {\r\n  const token = localStorage.token;\r\n  const [loading, setLoading] = useState(false);\r\n  // image\r\n  const [image1, setImage1] = useState(\"\")\r\n\r\n  const history = useHistory();\r\n  const param = useParams();\r\n\r\n\r\n  const uploadImage = (name,value) => {\r\n    const headers = {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    let data = new FormData();\r\n    data.append(name,value)\r\n     \r\n    axios\r\n      .post(`${process.env.REACT_APP_API_BASE_URL}/items/update-foto/${param.id}`, data, { headers })\r\n      .then((data) => {\r\n        console.log(data);\r\n        if(data.message === 'success'){\r\n          return true\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n\r\n  const btnUpload = async () => {\r\n    await uploadImage('foto_1', image1)\r\n    \r\n    history.goBack()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SimpleHeader name=\"Update\" parentName=\"Admin\" />\r\n      <Container className=\"mt--6\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card>\r\n              <CardBody>\r\n                <Form>\r\n                  <TabContent activeTab={\"1\"}>\r\n                        <CardHeader>\r\n                          <h3>Update Item Image</h3>\r\n                        </CardHeader>\r\n                          <CardBody>\r\n                            <Row md=\"18\">\r\n                              <Col md=\"6\">\r\n                                <FormGroup row>\r\n                                    <Label\r\n                                      for=\"exampleEmail\"\r\n                                      sm={3}\r\n                                    >\r\n                                      FOTO  1\r\n                                    </Label>\r\n                                    <Col sm={7}>\r\n                                    <Input\r\n                                        id=\"exampleFile\"\r\n                                        name=\"file\"\r\n                                        type=\"file\"\r\n                                        onChange={(event) => {\r\n                                          setImage1(event.target.files[0]);\r\n                                        }}\r\n                                      />\r\n                                    </Col>\r\n                                  </FormGroup>\r\n                                </Col>\r\n                            </Row>\r\n                              <Button color=\"info\" size=\"lg\" type=\"button\" onClick={() => btnUpload()}>\r\n                            {loading ? \"Loading...\" : \"Simpan\"}\r\n                          </Button>\r\n                          <Button\r\n                            color=\"secondary\"\r\n                            size=\"lg\"\r\n                            type=\"submit\"\r\n                            onClick={() => {\r\n                              history.push({ pathname: \"/admin/image/list\" });\r\n                            }}\r\n                          >\r\n                            Kembali\r\n                      </Button>\r\n                    </CardBody>\r\n                  </TabContent>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard PRO React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-pro-react\r\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n// react library for routing\r\nimport { useLocation, Route, Switch, Redirect } from \"react-router-dom\";\r\n// core components\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\r\nimport AdminFooter from \"components/Footers/AdminFooter.js\";\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\nimport routes from \"routes.js\";\r\n\r\nfunction Admin() {\r\n  const [sidenavOpen, setSidenavOpen] = React.useState(true);\r\n  const location = useLocation();\r\n  const mainContentRef = React.useRef(null);\r\n  React.useEffect(() => {\r\n    document.documentElement.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n    mainContentRef.current.scrollTop = 0;\r\n  }, [location]);\r\n  const getRoutes = (routes) => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.collapse) {\r\n        return getRoutes(prop.views);\r\n      }\r\n      if (prop.layout === \"/admin\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n  const getBrandText = (path) => {\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\r\n        return routes[i].name;\r\n      }\r\n    }\r\n    return \"Brand\";\r\n  };\r\n  // toggles collapse between mini sidenav and normal\r\n  const toggleSidenav = (e) => {\r\n    if (document.body.classList.contains(\"g-sidenav-pinned\")) {\r\n      document.body.classList.remove(\"g-sidenav-pinned\");\r\n      document.body.classList.add(\"g-sidenav-hidden\");\r\n    } else {\r\n      document.body.classList.add(\"g-sidenav-pinned\");\r\n      document.body.classList.remove(\"g-sidenav-hidden\");\r\n    }\r\n    setSidenavOpen(!sidenavOpen);\r\n  };\r\n  const getNavbarTheme = () => {\r\n    return location.pathname.indexOf(\"admin/alternative-dashboard\") === -1\r\n      ? \"dark\"\r\n      : \"light\";\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Sidebar\r\n        routes={routes}\r\n        toggleSidenav={toggleSidenav}\r\n        sidenavOpen={sidenavOpen}\r\n        logo={{\r\n          innerLink: \"/\",\r\n          imgSrc: require(\"assets/img/brand/Hokky1.png\").default,\r\n          imgAlt: \"...\",\r\n        }}\r\n      />\r\n      <div className=\"main-content\" ref={mainContentRef}>\r\n        <AdminNavbar\r\n          theme={getNavbarTheme()}\r\n          toggleSidenav={toggleSidenav}\r\n          sidenavOpen={sidenavOpen}\r\n          brandText={getBrandText(location.pathname)}\r\n        />\r\n        <Switch>\r\n          {getRoutes(routes)}\r\n          <Redirect from=\"*\" to=\"/admin/dashboard\" />\r\n        </Switch>\r\n        <AdminFooter />\r\n      </div>\r\n      {sidenavOpen ? (\r\n        <div className=\"backdrop d-xl-none\" onClick={toggleSidenav} />\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard PRO React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-pro-react\r\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n// react library for routing\r\nimport { useLocation, Route, Switch, Redirect } from \"react-router-dom\";\r\n// core components\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\r\nimport AdminFooter from \"components/Footers/AdminFooter.js\";\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\n\r\nimport routes from \"routes.js\";\r\n\r\nfunction Customers() {\r\n  const [sidenavOpen, setSidenavOpen] = React.useState(true);\r\n  const location = useLocation();\r\n  const mainContentRef = React.useRef(null);\r\n  React.useEffect(() => {\r\n    document.documentElement.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n    mainContentRef.current.scrollTop = 0;\r\n  }, [location]);\r\n  const getRoutes = (routes) => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.collapse) {\r\n        return getRoutes(prop.views);\r\n      }\r\n      if (prop.layout === \"/customers\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n  const getBrandText = (path) => {\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\r\n        return routes[i].name;\r\n      }\r\n    }\r\n    return \"Brand\";\r\n  };\r\n  // toggles collapse between mini sidenav and normal\r\n  const toggleSidenav = (e) => {\r\n    if (document.body.classList.contains(\"g-sidenav-pinned\")) {\r\n      document.body.classList.remove(\"g-sidenav-pinned\");\r\n      document.body.classList.add(\"g-sidenav-hidden\");\r\n    } else {\r\n      document.body.classList.add(\"g-sidenav-pinned\");\r\n      document.body.classList.remove(\"g-sidenav-hidden\");\r\n    }\r\n    setSidenavOpen(!sidenavOpen);\r\n  };\r\n  const getNavbarTheme = () => {\r\n    return location.pathname.indexOf(\"customers/alternative-dashboard\") === -1\r\n      ? \"dark\"\r\n      : \"light\";\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Sidebar\r\n        routes={routes}\r\n        toggleSidenav={toggleSidenav}\r\n        sidenavOpen={sidenavOpen}\r\n        logo={{\r\n          innerLink: \"/\",\r\n          imgSrc: require(\"assets/img/brand/argon-react.png\").default,\r\n          imgAlt: \"...\",\r\n        }}\r\n      />\r\n      <div className=\"main-content\" ref={mainContentRef}>\r\n        <AdminNavbar\r\n          theme={getNavbarTheme()}\r\n          toggleSidenav={toggleSidenav}\r\n          sidenavOpen={sidenavOpen}\r\n          brandText={getBrandText(location.pathname)}\r\n        />\r\n        <Switch>\r\n          {getRoutes(routes)}\r\n          <Redirect from=\"*\" to=\"/customers/dashboard\" />\r\n        </Switch>\r\n        <AdminFooter />\r\n      </div>\r\n      {sidenavOpen ? (\r\n        <div className=\"backdrop d-xl-none\" onClick={toggleSidenav} />\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Customers;\r\n","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard PRO React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-pro-react\r\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n// react library for routing\r\nimport { useLocation, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport routes from \"routes.js\";\r\n\r\nfunction Auth() {\r\n  const location = useLocation();\r\n  const mainContentRef = React.useRef(null);\r\n  React.useEffect(() => {\r\n    document.documentElement.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n    mainContentRef.current.scrollTop = 0;\r\n    document.body.classList.add(\"bg-default\");\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      document.body.classList.remove(\"bg-default\");\r\n    };\r\n  });\r\n  React.useEffect(() => {\r\n    document.documentElement.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n    mainContentRef.current.scrollTop = 0;\r\n  }, [location]);\r\n  const getRoutes = (routes) => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.collapse) {\r\n        return getRoutes(prop.views);\r\n      }\r\n      if (prop.layout === \"/auth\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"main-content\" ref={mainContentRef}>\r\n        <Switch>\r\n          {getRoutes(routes)}\r\n          <Redirect from=\"*\" to=\"/auth/login\" />\r\n        </Switch>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Auth;\r\n","import React, { useReducer, useState } from \"react\";\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { AppContext } from \"libs/context.js\";\r\n\r\nimport AdminLayout from \"layouts/Admin.js\";\r\nimport CustomersLayout from \"layouts/Customer.js\";\r\nimport AuthLayout from \"layouts/Auth.js\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport moment from \"moment\";\r\nmoment.defaultFormat = \"YYYY-MM-DD HH:mm:ss\";\r\n\r\nfunction init(initiate_data) {\r\n  return initiate_data;\r\n}\r\n\r\nfunction reducer(cartKasir, action) {\r\n  switch (action.type) {\r\n    case \"setUsernameSo\":\r\n      cartKasir.username_so = action.data_name;\r\n      break;\r\n    case \"setPaymentMethod\":\r\n      cartKasir.payment_method = action.data_id;\r\n      break;\r\n    case \"setKeteranganPayment\":\r\n      cartKasir.keterangan_payment = action.data_text;\r\n      break;\r\n    case \"setUsernameKurir\":\r\n      cartKasir.username_kurir = action.data_text;\r\n      break;\r\n\r\n    case \"setMember\":\r\n      cartKasir.member = action.data_id;\r\n      break;\r\n    case \"setCustomer\":\r\n      cartKasir.customer = action.data_id;\r\n      break;\r\n    case \"setPromo\":\r\n      cartKasir.customer = action.data_id;\r\n      break;\r\n    case \"setJangkaWaktu\":\r\n      cartKasir.jangka_waktu = action.data_id;\r\n      break;\r\n    case \"addItem\":\r\n      const index = cartKasir.item.findIndex(\r\n        ({ item_id }) => item_id === action.id\r\n      );\r\n      if (index === -1)\r\n        cartKasir.item.push({\r\n          item_id: action.id,\r\n          item_name: action.item_name,\r\n          satuan: action.satuan,\r\n          price: action.price,\r\n          item_code: action.item_code,\r\n          qty: 1,\r\n          qty_fisik: 0,\r\n          keterangan_fisik: \" \",\r\n        });\r\n      else cartKasir.item[index].qty++;\r\n      break;\r\n    case \"deleteItem\":\r\n      break;\r\n    case \"changeQtyItem\":\r\n      const check = cartKasir.item.findIndex(\r\n        ({ item_id }) => item_id === action.id\r\n      );\r\n      cartKasir.item[check].qty = parseInt(action.qty);\r\n      break;\r\n    case \"removeItem\":\r\n      const removedIndex = cartKasir.item.findIndex(\r\n        ({ item_id }) => item_id === action.id\r\n      );\r\n      if (removedIndex === 0) {\r\n        cartKasir.item.shift();\r\n        break;\r\n      }\r\n      for (let i = 0; i < cartKasir.item.length; i++) {\r\n        if (i === removedIndex) {\r\n          cartKasir.item.splice(i, 1);\r\n          i--;\r\n        }\r\n      }\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  console.log(cartKasir);\r\n  return { ...cartKasir };\r\n}\r\n\r\nfunction App() {\r\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [token, setToken] = useState(\"\");\r\n  const [userSession, setUserSession] = React.useState(null);\r\n  const [cartKasir, dispatch] = useReducer(\r\n    reducer,\r\n    {\r\n      username_so: null,\r\n      payment_method: 1,\r\n      keterangan_payment: null,\r\n      status_barang: 1,\r\n      so_type: 1,\r\n      username_kurir: null,\r\n      member: null,\r\n      customer: null,\r\n      receiving_counter: 1,\r\n      promo: null,\r\n      jangka_waktu: null,\r\n      item: [],\r\n    },\r\n    init\r\n  );\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        isAuthenticated,\r\n        userHasAuthenticated,\r\n        userName,\r\n        setUserName,\r\n        token,\r\n        setToken,\r\n        userSession,\r\n        setUserSession,\r\n        cartKasir,\r\n        dispatch,\r\n        init,\r\n      }}\r\n    >\r\n      <ToastContainer />\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path=\"/admin\" render={(props) => <AdminLayout {...props} />} />\r\n          <Route\r\n            path=\"/customers\"\r\n            render={(props) => <CustomersLayout {...props} />}\r\n          />\r\n          <Route path=\"/auth\" render={(props) => <AuthLayout {...props} />} />\r\n          <Redirect from=\"/\" to=\"/auth/login\" />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","/*!\r\n\r\n=========================================================\r\n* Argon Dashboard PRO React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-pro-react\r\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\n/*eslint-disable*/\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n// react library for routing\r\nimport App from \"./App.js\";\r\nimport axios from \"axios\";\r\nimport history from \"../src/utils/History.js\";\r\n\r\n// plugins styles from node_modules\r\nimport \"react-notification-alert/dist/animate.css\";\r\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\r\nimport \"@fullcalendar/common/main.min.css\";\r\nimport \"@fullcalendar/daygrid/main.min.css\";\r\nimport \"sweetalert2/dist/sweetalert2.min.css\";\r\nimport \"select2/dist/css/select2.min.css\";\r\nimport \"quill/dist/quill.core.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\n// plugins styles downloaded\r\nimport \"assets/vendor/nucleo/css/nucleo.css\";\r\n// core styles\r\nimport \"assets/scss/argon-dashboard-pro-react.scss?v1.2.0\";\r\nimport \"assets/css/custom.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\naxios.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  function (error) {\r\n    if (error.response !== undefined) {\r\n      let response = error.response;\r\n      if (response.status === 401 && response.status === 403) {\r\n        history.push(\"/auth/login\");\r\n        window.location.reload();\r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}